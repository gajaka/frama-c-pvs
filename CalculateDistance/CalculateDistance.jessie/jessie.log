WHYLIB is not set, using /usr/local/lib/why as default
Parsing
Normalization
Typing logic labels
Typing code
Typing axiomatic Padding
Typing logic type declaration padding
Typing axiomatic vector_axiomatic
Typing logic type declaration vector
Typing axiomatic Vector_pair
Typing axiomatic Norm
Typing axiomatic Padding
Typing tag doubleP
Typing tag unsigned_charP
Typing tag charP
Typing tag voidP
Typing axiomatic vector_axiomatic
Typing lemma/axiom vector_inductive
occurrences table for axiom vector_inductive in axiomatic vector_axiomatic:
  79:  ;
  
Typing axiomatic Vector_pair
Typing lemma/axiom pr1_def
Typing lemma/axiom pr2_def
occurrences table for axiom pr2_def in axiomatic Vector_pair:
  80: 
  81:  ;
  
occurrences table for axiom pr1_def in axiomatic Vector_pair:
  80:  ;
  81: 
  
Typing axiomatic Norm
Typing lemma/axiom norm_add
Typing lemma/axiom Ine
Typing lemma/axiom euclidian_is_norm
Computation of call graph
***********************************
Logic call graph: has 8 components
***********************************
Component 0:
 RPCons calls: RPCons

Component 1:
 pr1 calls: 

Component 2:
 pr2 calls: 

Component 3:
 norm calls: 

Component 4:
 diff calls: RPCons, pr2, pr1, pr2,
pr1

Component 5:
 difference_nonneg calls: 

Component 6:

Component 7:
 euclidean_norm calls: \real_sqrt

******************************
Call graph: has 2 components
******************************
Component 0:
 sqrt calls: sqrt

Component 1:
 CalculateDistance calls: sqrt

Adding invariants
Computation of effects
Effects: doing one iteration...
Effects: fixpoint reached
Effects for logic function RPCons:
 alloc_table: 
 tag_table: 
 memories: 
 raw memories: 
 precise memories: 
 globals: 
 locals: 

Effects: doing one iteration...
Jc_effect.effects_from_app, fi = pr1, app = pr2
fi == app.jc_app_fun ? false
Jc_effect.effects_from_app, fi = pr1, app = RPCons
fi == app.jc_app_fun ? false
Jc_effect.effects_from_app, fi = pr1, app = pr1
fi == app.jc_app_fun ? true
fi labels = {} ; app label_assoc = {}
Jc_effect.effects_from_app, fi = pr1, app = RPCons
fi == app.jc_app_fun ? false
Effects: fixpoint reached
Effects for logic function pr1:
 alloc_table: 
 tag_table: 
 memories: 
 raw memories: 
 precise memories: 
 globals: 
 locals: 

Effects: doing one iteration...
Jc_effect.effects_from_app, fi = pr2, app = pr2
fi == app.jc_app_fun ? true
fi labels = {} ; app label_assoc = {}
Jc_effect.effects_from_app, fi = pr2, app = RPCons
fi == app.jc_app_fun ? false
Jc_effect.effects_from_app, fi = pr2, app = pr1
fi == app.jc_app_fun ? false
Jc_effect.effects_from_app, fi = pr2, app = RPCons
fi == app.jc_app_fun ? false
Effects: fixpoint reached
Effects for logic function pr2:
 alloc_table: 
 tag_table: 
 memories: 
 raw memories: 
 precise memories: 
 globals: 
 locals: 

Effects: doing one iteration...
Effects: fixpoint reached
Effects for logic function norm:
 alloc_table: 
 tag_table: 
 memories: 
 raw memories: 
 precise memories: 
 globals: 
 locals: 

Effects: doing one iteration...
Effects: fixpoint reached
Effects for logic function diff:
 alloc_table: 
 tag_table: 
 memories: 
 raw memories: 
 precise memories: 
 globals: 
 locals: 

Effects: doing one iteration...
Effects: doing one iteration...
Effects: fixpoint reached
Effects for logic function difference_nonneg:
 alloc_table: 
 tag_table: 
 memories: (mem-field(doubleM),dummy_region) (L)
 raw memories: 
 precise memories: 
 globals: 
 locals: 

Effects: doing one iteration...
Effects: fixpoint reached
Effects: doing one iteration...
Effects: doing one iteration...
Effects: fixpoint reached
Effects for logic function euclidean_norm:
 alloc_table: 
 tag_table: 
 memories: (mem-field(doubleM),dummy_region) (L)
 raw memories: 
 precise memories: 
 globals: 
 locals: 

Effects: doing one iteration...
Effects: doing one iteration...
Effects: doing one iteration...
Effects: fixpoint reached
Effects: removing global reads w/o writes
Effects for function sqrt:
 reads:  alloc_table: 
         tag_table: 
         memories: 
         raw memories: 
         precise memories: 
         globals: 
         locals: tmp (Here)

 writes:  alloc_table: 
          tag_table: 
          memories: 
          raw memories: 
          precise memories: 
          globals: 
          locals: tmp (Here)

 raises: 
Effects: doing one iteration...
Effects: doing one iteration...
Effects: doing one iteration...
Effects: doing one iteration...
Effects: fixpoint reached
Effects: removing global reads w/o writes
Effects for function CalculateDistance:
 reads:  alloc_table: (alloc-root(doubleP),dummy_region) (Here, Old)
         tag_table: 
         memories: (mem-field(doubleM),dummy_region) (Here)
         raw memories: (mem-field(doubleM),dummy_region) (Here)
         precise memories: 
         globals: 
         locals: p (Here)

 writes:  alloc_table: 
          tag_table: 
          memories: 
          raw memories: 
          precise memories: 
          globals: 
          locals: p (Here)

 raises: 
Translate logic types
Translate structures
all_allocs(tag charP):
  Found 1 allocs.
all_memories(tag charP):
  Found 0 memories.
all_allocs(tag charP):
  Found 1 allocs.
all_memories(tag charP):
  Found 0 memories.
all_allocs(tag charP):
  Found 1 allocs.
all_memories(tag charP):
  Found 0 memories.
all_allocs(tag charP):
  Found 1 allocs.
all_memories(tag charP):
  Found 0 memories.
all_allocs(tag charP):
  Found 1 allocs.
all_memories(tag charP):
  Found 0 memories.
all_allocs(tag charP):
  Found 1 allocs.
all_memories(tag charP):
  Found 0 memories.
all_allocs(tag charP):
  Found 1 allocs.
all_memories(tag charP):
  Found 0 memories.
all_allocs(tag charP):
  Found 1 allocs.
all_memories(tag charP):
  Found 0 memories.
all_allocs(tag doubleP):
  Found 1 allocs.
all_memories(tag doubleP):
  Found 0 memories.
all_allocs(tag doubleP):
  Found 1 allocs.
all_memories(tag doubleP):
  Found 0 memories.
all_allocs(tag doubleP):
  Found 1 allocs.
all_memories(tag doubleP):
  Found 0 memories.
all_allocs(tag doubleP):
  Found 1 allocs.
all_memories(tag doubleP):
  Found 0 memories.
all_allocs(tag doubleP):
  Found 1 allocs.
all_memories(tag doubleP):
  Found 0 memories.
all_allocs(tag doubleP):
  Found 1 allocs.
all_memories(tag doubleP):
  Found 0 memories.
all_allocs(tag doubleP):
  Found 1 allocs.
all_memories(tag doubleP):
  Found 0 memories.
all_allocs(tag doubleP):
  Found 1 allocs.
all_memories(tag doubleP):
  Found 0 memories.
all_allocs(tag unsigned_charP):
  Found 1 allocs.
all_memories(tag unsigned_charP):
  Found 0 memories.
all_allocs(tag unsigned_charP):
  Found 1 allocs.
all_memories(tag unsigned_charP):
  Found 0 memories.
all_allocs(tag unsigned_charP):
  Found 1 allocs.
all_memories(tag unsigned_charP):
  Found 0 memories.
all_allocs(tag unsigned_charP):
  Found 1 allocs.
all_memories(tag unsigned_charP):
  Found 0 memories.
all_allocs(tag unsigned_charP):
  Found 1 allocs.
all_memories(tag unsigned_charP):
  Found 0 memories.
all_allocs(tag unsigned_charP):
  Found 1 allocs.
all_memories(tag unsigned_charP):
  Found 0 memories.
all_allocs(tag unsigned_charP):
  Found 1 allocs.
all_memories(tag unsigned_charP):
  Found 0 memories.
all_allocs(tag unsigned_charP):
  Found 1 allocs.
all_memories(tag unsigned_charP):
  Found 0 memories.
all_allocs(tag voidP):
  Found 1 allocs.
all_memories(tag voidP):
  Found 0 memories.
all_allocs(tag voidP):
  Found 1 allocs.
all_memories(tag voidP):
  Found 0 memories.
all_allocs(tag voidP):
  Found 1 allocs.
all_memories(tag voidP):
  Found 0 memories.
all_allocs(tag voidP):
  Found 1 allocs.
all_memories(tag voidP):
  Found 0 memories.
all_allocs(tag voidP):
  Found 1 allocs.
all_memories(tag voidP):
  Found 0 memories.
all_allocs(tag voidP):
  Found 1 allocs.
all_memories(tag voidP):
  Found 0 memories.
all_allocs(tag voidP):
  Found 1 allocs.
all_memories(tag voidP):
  Found 0 memories.
all_allocs(tag voidP):
  Found 1 allocs.
all_memories(tag voidP):
  Found 0 memories.
Translate variants
all_allocs(root charP):
  Found 1 allocs.
all_memories(root charP):
  Found 0 memories.
all_allocs(root charP):
  Found 1 allocs.
all_memories(root charP):
  Found 0 memories.
all_allocs(root doubleP):
  Found 1 allocs.
all_memories(root doubleP):
  Found 0 memories.
all_allocs(root doubleP):
  Found 1 allocs.
all_memories(root doubleP):
  Found 0 memories.
all_allocs(root unsigned_charP):
  Found 1 allocs.
all_memories(root unsigned_charP):
  Found 0 memories.
all_allocs(root unsigned_charP):
  Found 1 allocs.
all_memories(root unsigned_charP):
  Found 0 memories.
all_allocs(root voidP):
  Found 1 allocs.
all_memories(root voidP):
  Found 0 memories.
all_allocs(root voidP):
  Found 1 allocs.
all_memories(root voidP):
  Found 0 memories.
Translate variables
Translate memories
Translate allocation tables
Translate tag tables
Translate exceptions
producing exception 'Loop_continue'
producing exception 'Loop_exit'
producing exception 'Return_label'
Translate enumerated types
Translate logic functions
Logic function RPCons
Logic function pr1
Logic function pr2
Logic function norm
Logic function diff
Logic function difference_nonneg
Logic function euclidean_norm
Translate axiomatic declarations
Axiomatic Norm
Axiomatic Padding
Axiomatic Vector_pair
Axiomatic vector_axiomatic
Translate lemmas
Translate functions
Pre-treatement Function sqrt
Pre-treatement Function CalculateDistance
Function sqrt
Jc_interp: function sqrt
Jc_interp: behavior 'default' has no assigns
Jc_interp: behavior 'default' has no assigns
Jc_interp: behavior 'safety' has no assigns
Jc_interp: behavior 'safety' has no assigns
Function CalculateDistance
Jc_interp: function CalculateDistance
all_allocs(tag doubleP):
  Found 1 allocs.
all_memories(tag doubleP):
  Found 0 memories.
all_allocs(tag doubleP):
  Found 1 allocs.
all_memories(tag doubleP):
  Found 0 memories.
Jc_interp: behavior 'default' has no assigns
Jc_interp: behavior 'default' has no assigns
Jc_interp: behavior 'safety' has no assigns
Jc_interp: behavior 'safety' has no assigns
Produce Why3ml file
Produce makefile
