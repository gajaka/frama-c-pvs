logic eq_unit : unit, unit -> prop

logic neq_unit : unit, unit -> prop

logic eq_bool : bool, bool -> prop

logic neq_bool : bool, bool -> prop

logic lt_int : int, int -> prop

logic le_int : int, int -> prop

logic gt_int : int, int -> prop

logic ge_int : int, int -> prop

logic eq_int : int, int -> prop

logic neq_int : int, int -> prop

logic add_int : int, int -> int

logic sub_int : int, int -> int

logic mul_int : int, int -> int

logic neg_int : int -> int

predicate zwf_zero(a: int, b: int) = ((0 <= b) and (a < b))

logic bool_and : bool, bool -> bool

logic bool_or : bool, bool -> bool

logic bool_xor : bool, bool -> bool

logic bool_not : bool -> bool

axiom bool_and_def:
  (forall a:bool.
    (forall b:bool.
      ((bool_and(a, b) = true) <-> ((a = true) and (b = true)))))

axiom bool_or_def:
  (forall a:bool.
    (forall b:bool. ((bool_or(a, b) = true) <-> ((a = true) or (b = true)))))

axiom bool_xor_def:
  (forall a:bool. (forall b:bool. ((bool_xor(a, b) = true) <-> (a <> b))))

axiom bool_not_def: (forall a:bool. ((bool_not(a) = true) <-> (a = false)))

logic ite : bool, 'a1, 'a1 -> 'a1

axiom ite_true: (forall x:'a1. (forall y:'a1. (ite(true, x, y) = x)))

axiom ite_false: (forall x:'a1. (forall y:'a1. (ite(false, x, y) = y)))

logic lt_int_bool : int, int -> bool

logic le_int_bool : int, int -> bool

logic gt_int_bool : int, int -> bool

logic ge_int_bool : int, int -> bool

logic eq_int_bool : int, int -> bool

logic neq_int_bool : int, int -> bool

axiom lt_int_bool_axiom:
  (forall x:int. (forall y:int. ((lt_int_bool(x, y) = true) <-> (x < y))))

axiom le_int_bool_axiom:
  (forall x:int. (forall y:int. ((le_int_bool(x, y) = true) <-> (x <= y))))

axiom gt_int_bool_axiom:
  (forall x:int. (forall y:int. ((gt_int_bool(x, y) = true) <-> (x > y))))

axiom ge_int_bool_axiom:
  (forall x:int. (forall y:int. ((ge_int_bool(x, y) = true) <-> (x >= y))))

axiom eq_int_bool_axiom:
  (forall x:int. (forall y:int. ((eq_int_bool(x, y) = true) <-> (x = y))))

axiom neq_int_bool_axiom:
  (forall x:int. (forall y:int. ((neq_int_bool(x, y) = true) <-> (x <> y))))

logic abs_int : int -> int

axiom abs_int_pos: (forall x:int. ((x >= 0) -> (abs_int(x) = x)))

axiom abs_int_neg: (forall x:int. ((x <= 0) -> (abs_int(x) = (-x))))

logic int_max : int, int -> int

logic int_min : int, int -> int

axiom int_max_is_ge:
  (forall x:int.
    (forall y:int. ((int_max(x, y) >= x) and (int_max(x, y) >= y))))

axiom int_max_is_some:
  (forall x:int.
    (forall y:int. ((int_max(x, y) = x) or (int_max(x, y) = y))))

axiom int_min_is_le:
  (forall x:int.
    (forall y:int. ((int_min(x, y) <= x) and (int_min(x, y) <= y))))

axiom int_min_is_some:
  (forall x:int.
    (forall y:int. ((int_min(x, y) = x) or (int_min(x, y) = y))))

logic lt_real : real, real -> prop

logic le_real : real, real -> prop

logic gt_real : real, real -> prop

logic ge_real : real, real -> prop

logic eq_real : real, real -> prop

logic neq_real : real, real -> prop

logic add_real : real, real -> real

logic sub_real : real, real -> real

logic mul_real : real, real -> real

logic div_real : real, real -> real

logic neg_real : real -> real

logic real_of_int : int -> real

axiom real_of_int_zero: (real_of_int(0) = 0.0)

axiom real_of_int_one: (real_of_int(1) = 1.0)

axiom real_of_int_add:
  (forall x:int.
    (forall y:int.
      (real_of_int((x + y)) = (real_of_int(x) + real_of_int(y)))))

axiom real_of_int_sub:
  (forall x:int.
    (forall y:int.
      (real_of_int((x - y)) = (real_of_int(x) - real_of_int(y)))))

logic truncate_real_to_int : real -> int

axiom truncate_down_pos:
  (forall x:real.
    ((x >= 0.0) ->
     ((real_of_int(truncate_real_to_int(x)) <= x) and
      (x < real_of_int((truncate_real_to_int(x) + 1))))))

axiom truncate_up_neg:
  (forall x:real.
    ((x <= 0.0) ->
     ((real_of_int((truncate_real_to_int(x) - 1)) < x) and
      (x <= real_of_int(truncate_real_to_int(x))))))

logic floor_real_to_int : real -> int

logic ceil_real_to_int : real -> int

logic lt_real_bool : real, real -> bool

logic le_real_bool : real, real -> bool

logic gt_real_bool : real, real -> bool

logic ge_real_bool : real, real -> bool

logic eq_real_bool : real, real -> bool

logic neq_real_bool : real, real -> bool

axiom lt_real_bool_axiom:
  (forall x:real. (forall y:real. ((lt_real_bool(x, y) = true) <-> (x < y))))

axiom le_real_bool_axiom:
  (forall x:real.
    (forall y:real. ((le_real_bool(x, y) = true) <-> (x <= y))))

axiom gt_real_bool_axiom:
  (forall x:real. (forall y:real. ((gt_real_bool(x, y) = true) <-> (x > y))))

axiom ge_real_bool_axiom:
  (forall x:real.
    (forall y:real. ((ge_real_bool(x, y) = true) <-> (x >= y))))

axiom eq_real_bool_axiom:
  (forall x:real. (forall y:real. ((eq_real_bool(x, y) = true) <-> (x = y))))

axiom neq_real_bool_axiom:
  (forall x:real.
    (forall y:real. ((neq_real_bool(x, y) = true) <-> (x <> y))))

logic real_max : real, real -> real

logic real_min : real, real -> real

axiom real_max_is_ge:
  (forall x:real.
    (forall y:real. ((real_max(x, y) >= x) and (real_max(x, y) >= y))))

axiom real_max_is_some:
  (forall x:real.
    (forall y:real. ((real_max(x, y) = x) or (real_max(x, y) = y))))

axiom real_min_is_le:
  (forall x:real.
    (forall y:real. ((real_min(x, y) <= x) and (real_min(x, y) <= y))))

axiom real_min_is_some:
  (forall x:real.
    (forall y:real. ((real_min(x, y) = x) or (real_min(x, y) = y))))

function sqr_real(x: real) : real = (x * x)

logic sqrt_real : real -> real

axiom sqrt_pos: (forall x:real. ((x >= 0.0) -> (sqrt_real(x) >= 0.0)))

axiom sqrt_sqr: (forall x:real. ((x >= 0.0) -> (sqr_real(sqrt_real(x)) = x)))

axiom sqr_sqrt: (forall x:real. ((x >= 0.0) -> (sqrt_real((x * x)) = x)))

logic abs_real : real -> real

axiom abs_real_pos:
  (forall x:real [abs_real(x)]. ((x >= 0.0) -> (abs_real(x) = x)))

axiom abs_real_neg:
  (forall x:real [abs_real(x)]. ((x <= 0.0) -> (abs_real(x) = (-x))))

logic exp : real -> real

logic log : real -> real

logic log10 : real -> real

axiom log_exp: (forall x:real. (log(exp(x)) = x))

axiom exp_log: (forall x:real. ((x > 0.0) -> (exp(log(x)) = x)))

logic pow_real_int : real, int -> real

logic pow_real : real, real -> real

logic cos : real -> real

logic sin : real -> real

logic tan : real -> real

logic pi : real

logic cosh : real -> real

logic sinh : real -> real

logic tanh : real -> real

logic acos : real -> real

logic asin : real -> real

logic atan : real -> real

logic atan2 : real, real -> real

logic hypot : real, real -> real

axiom prod_pos:
  (forall x:real.
    (forall y:real.
      ((((x > 0.0) and (y > 0.0)) -> ((x * y) > 0.0)) and
       (((x < 0.0) and (y < 0.0)) -> ((x * y) > 0.0)))))

axiom abs_minus: (forall x:real. (abs_real((-x)) = abs_real(x)))

logic computer_div : int, int -> int

logic computer_mod : int, int -> int

logic math_div : int, int -> int

logic math_mod : int, int -> int

axiom math_div_mod:
  (forall x:int.
    (forall y:int.
      ((y <> 0) -> (x = ((y * math_div(x, y)) + math_mod(x, y))))))

axiom math_mod_bound:
  (forall x:int.
    (forall y:int.
      ((y <> 0) -> ((0 <= math_mod(x, y)) and (math_mod(x, y) < abs_int(y))))))

axiom computer_div_mod:
  (forall x:int.
    (forall y:int [computer_div(x, y), computer_mod(x, y)].
      ((y <> 0) -> (x = ((y * computer_div(x, y)) + computer_mod(x, y))))))

axiom computer_div_bound:
  (forall x:int.
    (forall y:int.
      (((x >= 0) and (y > 0)) ->
       ((0 <= computer_div(x, y)) and (computer_div(x, y) <= x)))))

axiom computer_mod_bound:
  (forall x:int.
    (forall y:int. ((y <> 0) -> (abs_int(computer_mod(x, y)) < abs_int(y)))))

axiom computer_mod_sign_pos:
  (forall x:int.
    (forall y:int. (((x >= 0) and (y <> 0)) -> (computer_mod(x, y) >= 0))))

axiom computer_mod_sign_neg:
  (forall x:int.
    (forall y:int. (((x <= 0) and (y <> 0)) -> (computer_mod(x, y) <= 0))))

axiom computer_rounds_toward_zero:
  (forall x:int.
    (forall y:int.
      ((y <> 0) -> (abs_int((computer_div(x, y) * y)) <= abs_int(x)))))

type 't alloc_table

type 't pointer

type 't block

logic base_block : 'a1 pointer -> 'a1 block

logic offset_max : 'a1 alloc_table, 'a1 pointer -> int

logic offset_min : 'a1 alloc_table, 'a1 pointer -> int

predicate valid(a: 'a1 alloc_table, p: 'a1 pointer) =
  ((offset_min(a, p) <= 0) and (offset_max(a, p) >= 0))

predicate same_block(p: 'a1 pointer, q: 'a1 pointer) =
  (base_block(p) = base_block(q))

logic sub_pointer : 'a1 pointer, 'a1 pointer -> int

logic shift : 'a1 pointer, int -> 'a1 pointer

logic null : 'a1 pointer

logic pointer_address : 'a1 pointer -> unit pointer

logic absolute_address : int -> unit pointer

logic address : 'a1 pointer -> int

axiom address_injective:
  (forall p:'a1 pointer.
    (forall q:'a1 pointer. ((p = q) <-> (address(p) = address(q)))))

axiom address_null: (address(null) = 0)

axiom address_shift_lt:
  (forall p:'a1 pointer.
    (forall i:int.
      (forall j:int [address(shift(p, i)), address(shift(p, j))].
        ((address(shift(p, i)) < address(shift(p, j))) <-> (i < j)))))

axiom address_shift_le:
  (forall p:'a1 pointer.
    (forall i:int.
      (forall j:int [address(shift(p, i)), address(shift(p, j))].
        ((address(shift(p, i)) <= address(shift(p, j))) <-> (i <= j)))))

axiom shift_zero: (forall p:'a1 pointer [shift(p, 0)]. (shift(p, 0) = p))

axiom shift_shift:
  (forall p:'a1 pointer.
    (forall i:int.
      (forall j:int [shift(shift(p, i), j)]. (shift(shift(p, i),
        j) = shift(p, (i + j))))))

axiom offset_max_shift:
  (forall a:'a1 alloc_table.
    (forall p:'a1 pointer.
      (forall i:int. (offset_max(a, shift(p, i)) = (offset_max(a, p) - i)))))

axiom offset_min_shift:
  (forall a:'a1 alloc_table.
    (forall p:'a1 pointer.
      (forall i:int. (offset_min(a, shift(p, i)) = (offset_min(a, p) - i)))))

axiom neq_shift:
  (forall p:'a1 pointer.
    (forall i:int.
      (forall j:int [shift(p, i), shift(p, j)].
        ((i <> j) -> (shift(p, i) <> shift(p, j))))))

axiom null_not_valid: (forall a:'a1 alloc_table. (not valid(a, null)))

axiom null_pointer:
  (forall a:'a1 alloc_table.
    ((offset_min(a, null) >= 0) and (offset_max(a, null) <= (-2))))

logic eq_pointer_bool : 'a1 pointer, 'a1 pointer -> bool

logic neq_pointer_bool : 'a1 pointer, 'a1 pointer -> bool

axiom eq_pointer_bool_def:
  (forall p1:'a1 pointer.
    (forall p2:'a1 pointer. ((eq_pointer_bool(p1, p2) = true) <-> (p1 = p2))))

axiom neq_pointer_bool_def:
  (forall p1:'a1 pointer.
    (forall p2:'a1 pointer.
      ((neq_pointer_bool(p1, p2) = true) <-> (p1 <> p2))))

axiom same_block_shift_right:
  (forall p:'a1 pointer.
    (forall q:'a1 pointer.
      (forall i:int [same_block(p, shift(q, i))].
        (same_block(p, q) -> same_block(p, shift(q, i))))))

axiom same_block_shift_left:
  (forall p:'a1 pointer.
    (forall q:'a1 pointer.
      (forall i:int [same_block(shift(q, i), p)].
        (same_block(q, p) -> same_block(shift(q, i), p)))))

axiom sub_pointer_shift:
  (forall p:'a1 pointer.
    (forall q:'a1 pointer [sub_pointer(p, q)].
      (same_block(p, q) -> (p = shift(q, sub_pointer(p, q))))))

axiom sub_pointer_self:
  (forall p:'a1 pointer [sub_pointer(p, p)]. (sub_pointer(p, p) = 0))

axiom sub_pointer_zero:
  (forall p:'a1 pointer.
    (forall q:'a1 pointer [sub_pointer(p, q)].
      (same_block(p, q) -> ((sub_pointer(p, q) = 0) -> (p = q)))))

axiom sub_pointer_shift_left:
  (forall p:'a1 pointer.
    (forall q:'a1 pointer.
      (forall i:int [sub_pointer(shift(p, i), q)]. (sub_pointer(shift(p, i),
        q) = (sub_pointer(p, q) + i)))))

axiom sub_pointer_shift_right:
  (forall p:'a1 pointer.
    (forall q:'a1 pointer.
      (forall i:int [sub_pointer(p, shift(q, i))]. (sub_pointer(p, shift(q,
        i)) = (sub_pointer(p, q) - i)))))

type ('t, 'v) memory

logic select : ('a2, 'a1) memory, 'a2 pointer -> 'a1

logic store : ('a1, 'a2) memory, 'a1 pointer, 'a2 -> ('a1, 'a2) memory

axiom select_store_eq:
  (forall m:('a1, 'a2) memory.
    (forall p1:'a1 pointer.
      (forall p2:'a1 pointer.
        (forall a:'a2 [store(m, p1, a), p2].
          ((p1 = p2) -> (select(store(m, p1, a), p2) = a))))))

axiom select_store_neq:
  (forall m:('a1, 'a2) memory.
    (forall p1:'a1 pointer.
      (forall p2:'a1 pointer.
        (forall a:'a2 [store(m, p1, a), p2].
          ((p1 <> p2) -> (select(store(m, p1, a), p2) = select(m, p2)))))))

type 't pset

logic pset_empty : 'a1 pset

logic pset_singleton : 'a1 pointer -> 'a1 pset

logic pset_deref : ('a2, 'a1 pointer) memory, 'a2 pset -> 'a1 pset

logic pset_union : 'a1 pset, 'a1 pset -> 'a1 pset

logic pset_all : 'a1 pset -> 'a1 pset

logic pset_range : 'a1 pset, int, int -> 'a1 pset

logic pset_range_left : 'a1 pset, int -> 'a1 pset

logic pset_range_right : 'a1 pset, int -> 'a1 pset

logic in_pset : 'a1 pointer, 'a1 pset -> prop

logic valid_pset : 'a1 alloc_table, 'a1 pset -> prop

predicate pset_disjoint(ps1: 'a1 pset, ps2: 'a1 pset) =
  (forall p:'a1 pointer. (not (in_pset(p, ps1) and in_pset(p, ps2))))

predicate pset_included(ps1: 'a1 pset, ps2: 'a1 pset) =
  (forall p:'a1 pointer. (in_pset(p, ps1) -> in_pset(p, ps2)))

axiom pset_included_self: (forall ps:'a1 pset. pset_included(ps, ps))

axiom pset_included_range:
  (forall ps:'a1 pset.
    (forall a:int.
      (forall b:int.
        (forall c:int.
          (forall d:int [pset_included(pset_range(ps, a, b), pset_range(ps,
            c, d))].
            (((c <= a) and (b <= d)) -> pset_included(pset_range(ps, a, b),
             pset_range(ps, c, d))))))))

axiom pset_included_range_all:
  (forall ps:'a1 pset.
    (forall a:int.
      (forall b:int.
        (forall c:int.
          (forall d:int [pset_included(pset_range(ps, a, b), pset_range(ps,
            c, d))]. pset_included(pset_range(ps, a, b), pset_all(ps)))))))

axiom in_pset_empty: (forall p:'a1 pointer. (not in_pset(p, pset_empty)))

axiom in_pset_singleton:
  (forall p:'a1 pointer.
    (forall q:'a1 pointer. (in_pset(p, pset_singleton(q)) <-> (p = q))))

axiom in_pset_deref:
  (forall p:'a1 pointer.
    (forall m:('a2, 'a1 pointer) memory.
      (forall q:'a2 pset.
        (in_pset(p, pset_deref(m, q)) <->
         (exists r:'a2 pointer. (in_pset(r, q) and (p = select(m, r))))))))

axiom in_pset_all:
  (forall p:'a1 pointer.
    (forall q:'a1 pset.
      (in_pset(p, pset_all(q)) <->
       (exists i:int.
         (exists r:'a1 pointer. (in_pset(r, q) and (p = shift(r, i))))))))

axiom in_pset_range:
  (forall p:'a1 pointer.
    (forall q:'a1 pset.
      (forall a:int.
        (forall b:int.
          (in_pset(p, pset_range(q, a, b)) <->
           (exists i:int.
             (exists r:'a1 pointer.
               ((a <= i) and
                ((i <= b) and (in_pset(r, q) and (p = shift(r, i))))))))))))

axiom in_pset_range_left:
  (forall p:'a1 pointer.
    (forall q:'a1 pset.
      (forall b:int.
        (in_pset(p, pset_range_left(q, b)) <->
         (exists i:int.
           (exists r:'a1 pointer.
             ((i <= b) and (in_pset(r, q) and (p = shift(r, i))))))))))

axiom in_pset_range_right:
  (forall p:'a1 pointer.
    (forall q:'a1 pset.
      (forall a:int.
        (in_pset(p, pset_range_right(q, a)) <->
         (exists i:int.
           (exists r:'a1 pointer.
             ((a <= i) and (in_pset(r, q) and (p = shift(r, i))))))))))

axiom in_pset_union:
  (forall p:'a1 pointer.
    (forall s1:'a1 pset.
      (forall s2:'a1 pset.
        (in_pset(p, pset_union(s1, s2)) <->
         (in_pset(p, s1) or in_pset(p, s2))))))

axiom valid_pset_empty: (forall a:'a1 alloc_table. valid_pset(a, pset_empty))

axiom valid_pset_singleton:
  (forall a:'a1 alloc_table.
    (forall p:'a1 pointer.
      (valid_pset(a, pset_singleton(p)) <-> valid(a, p))))

axiom valid_pset_deref:
  (forall a:'a1 alloc_table.
    (forall m:('a2, 'a1 pointer) memory.
      (forall q:'a2 pset.
        (valid_pset(a, pset_deref(m, q)) <->
         (forall r:'a2 pointer.
           (forall p:'a1 pointer.
             ((in_pset(r, q) and (p = select(m, r))) -> valid(a, p))))))))

axiom valid_pset_range:
  (forall a:'a1 alloc_table.
    (forall q:'a1 pset.
      (forall c:int.
        (forall d:int.
          (valid_pset(a, pset_range(q, c, d)) <->
           (forall i:int.
             (forall r:'a1 pointer.
               ((in_pset(r, q) and ((c <= i) and (i <= d))) -> valid(a,
                shift(r, i))))))))))

axiom valid_pset_union:
  (forall a:'a1 alloc_table.
    (forall s1:'a1 pset.
      (forall s2:'a1 pset.
        (valid_pset(a, pset_union(s1, s2)) <->
         (valid_pset(a, s1) and valid_pset(a, s2))))))

predicate not_assigns(a: 'a1 alloc_table, m1: ('a1, 'a2) memory, m2: ('a1,
  'a2) memory, l: 'a1 pset) =
  (forall p:'a1 pointer.
    ((valid(a, p) and (not in_pset(p, l))) -> (select(m2, p) = select(m1, p))))

axiom not_assigns_refl:
  (forall a:'a1 alloc_table.
    (forall m:('a1, 'a2) memory.
      (forall l:'a1 pset. not_assigns(a, m, m, l))))

axiom not_assigns_trans:
  (forall a:'a1 alloc_table.
    (forall m1:('a1, 'a2) memory.
      (forall m2:('a1, 'a2) memory.
        (forall m3:('a1, 'a2) memory.
          (forall l:'a1 pset [not_assigns(a, m1, m2, l), not_assigns(a, m1,
            m3, l)].
            (not_assigns(a, m1, m2, l) ->
             (not_assigns(a, m2, m3, l) -> not_assigns(a, m1, m3, l))))))))

logic full_separated : 'a1 pointer, 'a2 pointer -> prop

axiom full_separated_shift1:
  (forall p:'a1 pointer.
    (forall q:'a1 pointer.
      (forall i:int [full_separated(p, q), shift(q, i)].
        (full_separated(p, q) -> full_separated(p, shift(q, i))))))

axiom full_separated_shift2:
  (forall p:'a1 pointer.
    (forall q:'a1 pointer.
      (forall i:int [full_separated(p, q), shift(q, i)].
        (full_separated(p, q) -> full_separated(shift(q, i), p)))))

axiom full_separated_shift3:
  (forall p:'a1 pointer.
    (forall q:'a1 pointer.
      (forall i:int [full_separated(q, p), shift(q, i)].
        (full_separated(q, p) -> full_separated(shift(q, i), p)))))

axiom full_separated_shift4:
  (forall p:'a1 pointer.
    (forall q:'a1 pointer.
      (forall i:int [full_separated(q, p), shift(q, i)].
        (full_separated(q, p) -> full_separated(p, shift(q, i))))))

type 't tag_table

type 't tag_id

logic int_of_tag : 'a1 tag_id -> int

logic typeof : 'a1 tag_table, 'a1 pointer -> 'a1 tag_id

logic parenttag : 'a1 tag_id, 'a1 tag_id -> prop

logic subtag : 'a1 tag_id, 'a1 tag_id -> prop

logic subtag_bool : 'a1 tag_id, 'a1 tag_id -> bool

axiom subtag_bool_def:
  (forall t1:'a1 tag_id.
    (forall t2:'a1 tag_id. ((subtag_bool(t1, t2) = true) <-> subtag(t1, t2))))

axiom subtag_refl: (forall t:'a1 tag_id. subtag(t, t))

axiom subtag_parent:
  (forall t1:'a1 tag_id.
    (forall t2:'a1 tag_id.
      (forall t3:'a1 tag_id.
        (subtag(t1, t2) -> (parenttag(t2, t3) -> subtag(t1, t3))))))

predicate instanceof(a: 'a1 tag_table, p: 'a1 pointer, t: 'a1 tag_id) =
  subtag(typeof(a, p), t)

logic downcast : 'a1 tag_table, 'a1 pointer, 'a1 tag_id -> 'a1 pointer

axiom downcast_instanceof:
  (forall a:'a1 tag_table.
    (forall p:'a1 pointer.
      (forall s:'a1 tag_id. (instanceof(a, p, s) -> (downcast(a, p, s) = p)))))

logic bottom_tag : 'a1 tag_id

axiom bottom_tag_axiom: (forall t:'a1 tag_id. subtag(t, bottom_tag))

predicate root_tag(t: 'a1 tag_id) = parenttag(t, bottom_tag)

axiom root_subtag:
  (forall a:'a1 tag_id.
    (forall b:'a1 tag_id.
      (forall c:'a1 tag_id.
        (root_tag(a) ->
         (root_tag(b) -> ((a <> b) -> (subtag(c, a) -> (not subtag(c, b)))))))))

predicate fully_packed(tag_table: 'a1 tag_table, mutable: ('a1,
  'a1 tag_id) memory, this: 'a1 pointer) = (select(mutable,
  this) = typeof(tag_table, this))

logic bw_compl : int -> int

logic bw_and : int, int -> int

axiom bw_and_not_null:
  (forall a:int.
    (forall b:int. ((bw_and(a, b) <> 0) -> ((a <> 0) and (b <> 0)))))

logic bw_xor : int, int -> int

logic bw_or : int, int -> int

logic lsl : int, int -> int

axiom lsl_left_positive_returns_positive:
  (forall a:int.
    (forall b:int. (((0 <= a) and (0 <= b)) -> (0 <= lsl(a, b)))))

axiom lsl_left_positive_monotone:
  (forall a1:int.
    (forall a2:int.
      (forall b:int.
        (((0 <= a1) and ((a1 <= a2) and (0 <= b))) -> (lsl(a1, b) <= lsl(a2,
         b))))))

logic lsr : int, int -> int

axiom lsr_left_positive_returns_positive:
  (forall a:int.
    (forall b:int. (((0 <= a) and (0 <= b)) -> (0 <= lsr(a, b)))))

axiom lsr_left_positive_decreases:
  (forall a:int.
    (forall b:int. (((0 <= a) and (0 <= b)) -> (lsr(a, b) <= a))))

logic asr : int, int -> int

axiom asr_positive_on_positive:
  (forall a:int.
    (forall b:int. (((0 <= a) and (0 <= b)) -> (0 <= asr(a, b)))))

axiom asr_decreases_on_positive:
  (forall a:int.
    (forall b:int. (((0 <= a) and (0 <= b)) -> (asr(a, b) <= a))))

axiom asr_lsr_same_on_positive:
  (forall a:int.
    (forall b:int. (((0 <= a) and (0 <= b)) -> (asr(a, b) = lsr(a, b)))))

axiom lsl_of_lsr_decreases_on_positive:
  (forall a:int.
    (forall b:int. (((0 <= a) and (0 <= b)) -> (lsl(lsr(a, b), b) <= a))))

axiom lsr_of_lsl_identity_on_positive:
  (forall a:int.
    (forall b:int. (((0 <= a) and (0 <= b)) -> (lsr(lsl(a, b), b) = a))))

logic alloc_extends : 'a1 alloc_table, 'a1 alloc_table -> prop

predicate alloc_fresh(a: 'a1 alloc_table, p: 'a1 pointer, n: int) =
  (forall i:int. (((0 <= i) and (i < n)) -> (not valid(a, shift(p, i)))))

axiom alloc_extends_offset_min:
  (forall a1:'a1 alloc_table.
    (forall a2:'a1 alloc_table [alloc_extends(a1, a2)].
      (alloc_extends(a1, a2) ->
       (forall p:'a1 pointer.
         (valid(a1, p) -> (offset_min(a1, p) = offset_min(a2, p)))))))

axiom alloc_extends_offset_max:
  (forall a1:'a1 alloc_table.
    (forall a2:'a1 alloc_table [alloc_extends(a1, a2)].
      (alloc_extends(a1, a2) ->
       (forall p:'a1 pointer.
         (valid(a1, p) -> (offset_max(a1, p) = offset_max(a2, p)))))))

axiom alloc_extends_not_assigns_empty:
  (forall a1:'a1 alloc_table.
    (forall a2:'a1 alloc_table.
      (forall m1:('a1, 'a2) memory.
        (forall m2:('a1, 'a2) memory.
          (forall l:'a1 pset.
            (forall p:'a1 pointer.
              (forall n:int [alloc_extends(a1, a2), alloc_fresh(a1, p, n),
                not_assigns(a2, m1, m2, l)].
                ((alloc_extends(a1, a2) and
                  (alloc_fresh(a1, p, n) and
                   (not_assigns(a2, m1, m2, l) and pset_included(l,
                    pset_all(pset_singleton(p)))))) ->
                 not_assigns(a1, m1, m2, pset_empty)))))))))

logic alloc_extends_except : 'a1 alloc_table, 'a1 alloc_table,
'a1 pset -> prop

axiom alloc_extends_except_offset_min:
  (forall a1:'a1 alloc_table.
    (forall a2:'a1 alloc_table.
      (forall l:'a1 pset [alloc_extends_except(a1, a2, l)].
        (alloc_extends_except(a1, a2, l) ->
         (forall p:'a1 pointer.
           ((valid(a1, p) and (not in_pset(p, l))) -> (offset_min(a1,
            p) = offset_min(a2, p))))))))

axiom alloc_extends_except_offset_max:
  (forall a1:'a1 alloc_table.
    (forall a2:'a1 alloc_table.
      (forall l:'a1 pset [alloc_extends_except(a1, a2, l)].
        (alloc_extends_except(a1, a2, l) ->
         (forall p:'a1 pointer.
           ((valid(a1, p) and (not in_pset(p, l))) -> (offset_max(a1,
            p) = offset_max(a2, p))))))))

type 'a mybag

logic in_mybag : 'a1, 'a1 mybag -> prop

logic disj_mybag : 'a1 mybag, 'a1 mybag -> prop

axiom disj_sym:
  (forall s1:'a1 mybag.
    (forall s2:'a1 mybag [disj_mybag(s1, s2)].
      (disj_mybag(s1, s2) -> disj_mybag(s2, s1))))

logic sub_mybag : 'a1 mybag, 'a1 mybag -> prop

axiom sub_refl:
  (forall sa:'a1 pointer mybag [sub_mybag(sa, sa)]. sub_mybag(sa, sa))

axiom sub_disj:
  (forall s1:'a1 mybag.
    (forall s2:'a1 mybag.
      (forall s3:'a1 mybag [disj_mybag(s1, s2), sub_mybag(s2, s3)|
        disj_mybag(s1, s3), sub_mybag(s2, s3)].
        (disj_mybag(s1, s3) -> (sub_mybag(s2, s3) -> disj_mybag(s1, s2))))))

axiom sub_in:
  (forall s1:'a1 mybag.
    (forall s2:'a1 mybag.
      (forall p:'a1 [in_mybag(p, s1), sub_mybag(s1, s2)| in_mybag(p, s2),
        sub_mybag(s1, s2)].
        ((not in_mybag(p, s2)) ->
         (sub_mybag(s1, s2) -> (not in_mybag(p, s1)))))))

axiom sub_sub:
  (forall s1:'a1 mybag.
    (forall s2:'a1 mybag.
      (forall s3:'a1 mybag [sub_mybag(s1, s3), sub_mybag(s2, s3)|
        sub_mybag(s1, s3), sub_mybag(s1, s2)].
        (sub_mybag(s1, s2) -> (sub_mybag(s2, s3) -> sub_mybag(s1, s3))))))

logic frame_between : 'a1 pointer mybag, ('a1, 'a2) memory, ('a1,
'a2) memory -> prop

axiom frame_between_refl:
  (forall sa:'a1 pointer mybag.
    (forall m:('a1, 'a2) memory [frame_between(sa, m, m)]. frame_between(sa,
      m, m)))

axiom frame_between_gen:
  (forall sa:'a1 pointer mybag.
    (forall m1:('a1, 'a2) memory.
      (forall m2:('a1, 'a2) memory.
        (forall p:'a1 pointer.
          (forall v:'a2 [frame_between(sa, m1, store(m2, p, v))].
            (frame_between(sa, m1, m2) ->
             (in_mybag(p, sa) -> frame_between(sa, store(m1, p, v), m2))))))))

axiom frame_between_gen2:
  (forall sa:'a1 pointer mybag.
    (forall m1:('a1, 'a2) memory.
      (forall m2:('a1, 'a2) memory.
        (forall m3:('a1, 'a2) memory [frame_between(sa, m1, m2),
          frame_between(sa, m1, m3)| frame_between(sa, m2, m3),
          frame_between(sa, m1, m3)].
          (frame_between(sa, m1, m2) ->
           (frame_between(sa, m2, m3) -> frame_between(sa, m1, m3)))))))

axiom frame_between_gen_sub1:
  (forall s12:'a1 pointer mybag.
    (forall s23:'a1 pointer mybag.
      (forall s13:'a1 pointer mybag.
        (forall m1:('a1, 'a2) memory.
          (forall m2:('a1, 'a2) memory.
            (forall m3:('a1, 'a2) memory [frame_between(s12, m1, m2),
              frame_between(s13, m1, m3)].
              (sub_mybag(s12, s13) ->
               (frame_between(s12, m1, m2) ->
                (frame_between(s23, m2, m3) -> frame_between(s13, m1, m3))))))))))

axiom frame_between_gen_sub2:
  (forall s12:'a1 pointer mybag.
    (forall s23:'a1 pointer mybag.
      (forall s13:'a1 pointer mybag.
        (forall m1:('a1, 'a2) memory.
          (forall m2:('a1, 'a2) memory.
            (forall m3:('a1, 'a2) memory [frame_between(s23, m2, m3),
              frame_between(s13, m1, m3)].
              (frame_between(s12, m1, m2) ->
               (sub_mybag(s23, s13) ->
                (frame_between(s23, m2, m3) -> frame_between(s13, m1, m3))))))))))

axiom frame_between_pointer:
  (forall sa:'a1 pointer mybag.
    (forall m1:('a1, 'a2) memory.
      (forall m2:('a1, 'a2) memory.
        (forall p:'a1 pointer.
          (forall v:'a2 [frame_between(sa, m1, m2), select(m1, p)|
            frame_between(sa, m1, m2), select(m2, p)].
            (frame_between(sa, m1, m2) ->
             ((not in_mybag(p, sa)) -> (select(m1, p) = select(m2, p)))))))))

axiom frame_between_sub:
  (forall sa:'a1 pointer mybag.
    (forall sb:'a1 pointer mybag.
      (forall m1:('a1, 'a2) memory.
        (forall m2:('a1, 'a2) memory [frame_between(sa, m1, m2),
          sub_mybag(sa, sb)].
          (frame_between(sa, m1, m2) ->
           (sub_mybag(sa, sb) -> frame_between(sb, m1, m2)))))))

type charP

type int32

type int8

type intP

type padding

type uint8

type unsigned_charP

type voidP

logic integer_of_int32 : int32 -> int

predicate bubble_sorted(a_0_0: intP pointer, start_i: int, end_i: int,
  intP_intM_a_0_3: (intP, int32) memory) =
  (forall k1:int.
    (((start_i <= k1) and (k1 < end_i)) ->
     (integer_of_int32(select(intP_intM_a_0_3, shift(a_0_0,
     k1))) <= integer_of_int32(select(intP_intM_a_0_3, shift(a_0_0,
     (k1 + 1)))))))

logic charP_tag : charP tag_id

axiom charP_int: (int_of_tag(charP_tag) = 1)

logic charP_of_pointer_address : unit pointer -> charP pointer

axiom charP_of_pointer_address_of_pointer_addr:
  (forall p:charP pointer.
    (p = charP_of_pointer_address(pointer_address(p))))

axiom charP_parenttag_bottom: parenttag(charP_tag, bottom_tag)

axiom charP_tags:
  (forall x:charP pointer.
    (forall charP_tag_table:charP tag_table. instanceof(charP_tag_table, x,
      charP_tag)))

predicate dom(k_0: int, n: int) = ((k_0 >= 0) and (k_0 <= (n - 1)))

predicate eq_int32(x: int32, y: int32) =
  (integer_of_int32(x) = integer_of_int32(y))

logic integer_of_int8 : int8 -> int

predicate eq_int8(x: int8, y: int8) =
  (integer_of_int8(x) = integer_of_int8(y))

logic integer_of_uint8 : uint8 -> int

predicate eq_uint8(x: uint8, y: uint8) =
  (integer_of_uint8(x) = integer_of_uint8(y))

logic int32_of_integer : int -> int32

axiom int32_coerce:
  (forall x:int.
    ((((-2147483648) <= x) and (x <= 2147483647)) ->
     (integer_of_int32(int32_of_integer(x)) = x)))

axiom int32_extensionality:
  (forall x:int32.
    (forall y:int32.
      ((integer_of_int32(x) = integer_of_int32(y)) -> (x = y))))

axiom int32_range:
  (forall x:int32.
    (((-2147483648) <= integer_of_int32(x)) and
     (integer_of_int32(x) <= 2147483647)))

logic int8_of_integer : int -> int8

axiom int8_coerce:
  (forall x:int.
    ((((-128) <= x) and (x <= 127)) ->
     (integer_of_int8(int8_of_integer(x)) = x)))

axiom int8_extensionality:
  (forall x:int8.
    (forall y:int8. ((integer_of_int8(x) = integer_of_int8(y)) -> (x = y))))

axiom int8_range:
  (forall x:int8.
    (((-128) <= integer_of_int8(x)) and (integer_of_int8(x) <= 127)))

logic intP_tag : intP tag_id

axiom intP_int: (int_of_tag(intP_tag) = 1)

logic intP_of_pointer_address : unit pointer -> intP pointer

axiom intP_of_pointer_address_of_pointer_addr:
  (forall p:intP pointer. (p = intP_of_pointer_address(pointer_address(p))))

axiom intP_parenttag_bottom: parenttag(intP_tag, bottom_tag)

axiom intP_tags:
  (forall x:intP pointer.
    (forall intP_tag_table:intP tag_table. instanceof(intP_tag_table, x,
      intP_tag)))

predicate left_valid_struct_charP(p: charP pointer, a: int,
  charP_alloc_table: charP alloc_table) = (offset_min(charP_alloc_table,
  p) <= a)

predicate left_valid_struct_intP(p: intP pointer, a: int,
  intP_alloc_table: intP alloc_table) = (offset_min(intP_alloc_table,
  p) <= a)

predicate left_valid_struct_unsigned_charP(p: unsigned_charP pointer, a: int,
  unsigned_charP_alloc_table: unsigned_charP alloc_table) =
  (offset_min(unsigned_charP_alloc_table, p) <= a)

predicate left_valid_struct_voidP(p: voidP pointer, a: int,
  voidP_alloc_table: voidP alloc_table) = (offset_min(voidP_alloc_table,
  p) <= a)

axiom pointer_addr_of_charP_of_pointer_address:
  (forall p:unit pointer. (p = pointer_address(charP_of_pointer_address(p))))

axiom pointer_addr_of_intP_of_pointer_address:
  (forall p:unit pointer. (p = pointer_address(intP_of_pointer_address(p))))

logic unsigned_charP_of_pointer_address : unit pointer -> unsigned_charP pointer

axiom pointer_addr_of_unsigned_charP_of_pointer_address:
  (forall p:unit pointer.
    (p = pointer_address(unsigned_charP_of_pointer_address(p))))

logic voidP_of_pointer_address : unit pointer -> voidP pointer

axiom pointer_addr_of_voidP_of_pointer_address:
  (forall p:unit pointer. (p = pointer_address(voidP_of_pointer_address(p))))

predicate right_valid_struct_charP(p: charP pointer, b: int,
  charP_alloc_table: charP alloc_table) = (offset_max(charP_alloc_table,
  p) >= b)

predicate right_valid_struct_intP(p: intP pointer, b: int,
  intP_alloc_table: intP alloc_table) = (offset_max(intP_alloc_table,
  p) >= b)

predicate right_valid_struct_unsigned_charP(p: unsigned_charP pointer,
  b: int, unsigned_charP_alloc_table: unsigned_charP alloc_table) =
  (offset_max(unsigned_charP_alloc_table, p) >= b)

predicate right_valid_struct_voidP(p: voidP pointer, b: int,
  voidP_alloc_table: voidP alloc_table) = (offset_max(voidP_alloc_table,
  p) >= b)

predicate strict_valid_root_charP(p: charP pointer, a: int, b: int,
  charP_alloc_table: charP alloc_table) =
  ((offset_min(charP_alloc_table, p) = a) and (offset_max(charP_alloc_table,
   p) = b))

predicate strict_valid_root_intP(p: intP pointer, a: int, b: int,
  intP_alloc_table: intP alloc_table) =
  ((offset_min(intP_alloc_table, p) = a) and (offset_max(intP_alloc_table,
   p) = b))

predicate strict_valid_root_unsigned_charP(p: unsigned_charP pointer, a: int,
  b: int, unsigned_charP_alloc_table: unsigned_charP alloc_table) =
  ((offset_min(unsigned_charP_alloc_table, p) = a) and
   (offset_max(unsigned_charP_alloc_table, p) = b))

predicate strict_valid_root_voidP(p: voidP pointer, a: int, b: int,
  voidP_alloc_table: voidP alloc_table) =
  ((offset_min(voidP_alloc_table, p) = a) and (offset_max(voidP_alloc_table,
   p) = b))

predicate strict_valid_struct_charP(p: charP pointer, a: int, b: int,
  charP_alloc_table: charP alloc_table) =
  ((offset_min(charP_alloc_table, p) = a) and (offset_max(charP_alloc_table,
   p) = b))

predicate strict_valid_struct_intP(p: intP pointer, a: int, b: int,
  intP_alloc_table: intP alloc_table) =
  ((offset_min(intP_alloc_table, p) = a) and (offset_max(intP_alloc_table,
   p) = b))

predicate strict_valid_struct_unsigned_charP(p: unsigned_charP pointer,
  a: int, b: int, unsigned_charP_alloc_table: unsigned_charP alloc_table) =
  ((offset_min(unsigned_charP_alloc_table, p) = a) and
   (offset_max(unsigned_charP_alloc_table, p) = b))

predicate strict_valid_struct_voidP(p: voidP pointer, a: int, b: int,
  voidP_alloc_table: voidP alloc_table) =
  ((offset_min(voidP_alloc_table, p) = a) and (offset_max(voidP_alloc_table,
   p) = b))

predicate swapped(a: intP pointer, i_1: int, j_0: int,
  intP_intM_a_1_at_L2: (intP, int32) memory, intP_intM_a_1_at_L1: (intP,
  int32) memory) =
  ((integer_of_int32(select(intP_intM_a_1_at_L1, shift(a,
   i_1))) = integer_of_int32(select(intP_intM_a_1_at_L2, shift(a, j_0)))) and
   ((integer_of_int32(select(intP_intM_a_1_at_L1, shift(a,
    j_0))) = integer_of_int32(select(intP_intM_a_1_at_L2, shift(a,
    i_1)))) and
    (forall k:int.
      (((k <> i_1) and (k <> j_0)) ->
       (integer_of_int32(select(intP_intM_a_1_at_L1, shift(a,
       k))) = integer_of_int32(select(intP_intM_a_1_at_L2, shift(a, k))))))))

logic uint8_of_integer : int -> uint8

axiom uint8_coerce:
  (forall x:int.
    (((0 <= x) and (x <= 255)) -> (integer_of_uint8(uint8_of_integer(x)) = x)))

axiom uint8_extensionality:
  (forall x:uint8.
    (forall y:uint8.
      ((integer_of_uint8(x) = integer_of_uint8(y)) -> (x = y))))

axiom uint8_range:
  (forall x:uint8.
    ((0 <= integer_of_uint8(x)) and (integer_of_uint8(x) <= 255)))

logic unsigned_charP_tag : unsigned_charP tag_id

axiom unsigned_charP_int: (int_of_tag(unsigned_charP_tag) = 1)

axiom unsigned_charP_of_pointer_address_of_pointer_addr:
  (forall p:unsigned_charP pointer.
    (p = unsigned_charP_of_pointer_address(pointer_address(p))))

axiom unsigned_charP_parenttag_bottom: parenttag(unsigned_charP_tag,
  bottom_tag)

axiom unsigned_charP_tags:
  (forall x:unsigned_charP pointer.
    (forall unsigned_charP_tag_table:unsigned_charP tag_table.
      instanceof(unsigned_charP_tag_table, x, unsigned_charP_tag)))

predicate valid_root_charP(p: charP pointer, a: int, b: int,
  charP_alloc_table: charP alloc_table) =
  ((offset_min(charP_alloc_table, p) <= a) and (offset_max(charP_alloc_table,
   p) >= b))

predicate valid_root_intP(p: intP pointer, a: int, b: int,
  intP_alloc_table: intP alloc_table) =
  ((offset_min(intP_alloc_table, p) <= a) and (offset_max(intP_alloc_table,
   p) >= b))

predicate valid_root_unsigned_charP(p: unsigned_charP pointer, a: int,
  b: int, unsigned_charP_alloc_table: unsigned_charP alloc_table) =
  ((offset_min(unsigned_charP_alloc_table, p) <= a) and
   (offset_max(unsigned_charP_alloc_table, p) >= b))

predicate valid_root_voidP(p: voidP pointer, a: int, b: int,
  voidP_alloc_table: voidP alloc_table) =
  ((offset_min(voidP_alloc_table, p) <= a) and (offset_max(voidP_alloc_table,
   p) >= b))

predicate valid_struct_charP(p: charP pointer, a: int, b: int,
  charP_alloc_table: charP alloc_table) =
  ((offset_min(charP_alloc_table, p) <= a) and (offset_max(charP_alloc_table,
   p) >= b))

predicate valid_struct_intP(p: intP pointer, a: int, b: int,
  intP_alloc_table: intP alloc_table) =
  ((offset_min(intP_alloc_table, p) <= a) and (offset_max(intP_alloc_table,
   p) >= b))

predicate valid_struct_unsigned_charP(p: unsigned_charP pointer, a: int,
  b: int, unsigned_charP_alloc_table: unsigned_charP alloc_table) =
  ((offset_min(unsigned_charP_alloc_table, p) <= a) and
   (offset_max(unsigned_charP_alloc_table, p) >= b))

predicate valid_struct_voidP(p: voidP pointer, a: int, b: int,
  voidP_alloc_table: voidP alloc_table) =
  ((offset_min(voidP_alloc_table, p) <= a) and (offset_max(voidP_alloc_table,
   p) >= b))

logic voidP_tag : voidP tag_id

axiom voidP_int: (int_of_tag(voidP_tag) = 1)

axiom voidP_of_pointer_address_of_pointer_addr:
  (forall p:voidP pointer.
    (p = voidP_of_pointer_address(pointer_address(p))))

axiom voidP_parenttag_bottom: parenttag(voidP_tag, bottom_tag)

axiom voidP_tags:
  (forall x:voidP pointer.
    (forall voidP_tag_table:voidP tag_table. instanceof(voidP_tag_table, x,
      voidP_tag)))

goal bubble_ensures_bubble_sorted_po_1:
  forall a_1:intP pointer.
  forall n_1:int32.
  forall intP_a_4_alloc_table:intP alloc_table.
  ("JC_49":
  (("JC_46": (0 <= integer_of_int32(n_1))) and
   (("JC_47": (offset_min(intP_a_4_alloc_table, a_1) <= 0)) and
    ("JC_48": (offset_max(intP_a_4_alloc_table,
    a_1) >= (integer_of_int32(n_1) - 1)))))) ->
  forall k_2:int32.
  (k_2 = n_1) ->
  forall intP_intM_a_4:(intP,
  int32) memory.
  forall k_2_0:int32.
  ("JC_122": true) ->
  (("JC_115":
   (forall i2_1:int.
     (forall i1_2:int.
       (((i2_1 >= 0) and
         ((i2_1 < integer_of_int32(k_2_0)) and
          ((i1_2 >= integer_of_int32(k_2_0)) and
           (i1_2 < integer_of_int32(n_1))))) ->
        (integer_of_int32(select(intP_intM_a_4, shift(a_1,
        i1_2))) >= integer_of_int32(select(intP_intM_a_4, shift(a_1, i2_1)))))))) and
   (("JC_116":
    ((integer_of_int32(k_2_0) = integer_of_int32(n_1)) or
     (forall i1_1:int.
       (((i1_1 > integer_of_int32(k_2_0)) and (i1_1 < integer_of_int32(n_1))) ->
        (integer_of_int32(select(intP_intM_a_4, shift(a_1,
        integer_of_int32(k_2_0)))) <= integer_of_int32(select(intP_intM_a_4,
        shift(a_1, i1_1)))))))) and
    (("JC_117": bubble_sorted(a_1, integer_of_int32(k_2_0),
     (integer_of_int32(n_1) - 1), intP_intM_a_4)) and
     ("JC_120":
     (("JC_118": (integer_of_int32(k_2_0) >= 0)) and
      ("JC_119": (integer_of_int32(k_2_0) <= integer_of_int32(n_1)))))))) ->
  (integer_of_int32(k_2_0) <= 0) ->
  ("JC_57": bubble_sorted(a_1, 0, (integer_of_int32(n_1) - 1),
  intP_intM_a_4))

goal bubble_ensures_default_po_1:
  forall a_1:intP pointer.
  forall n_1:int32.
  forall intP_a_4_alloc_table:intP alloc_table.
  forall intP_intM_a_4:(intP,
  int32) memory.
  ("JC_49":
  (("JC_46": (0 <= integer_of_int32(n_1))) and
   (("JC_47": (offset_min(intP_a_4_alloc_table, a_1) <= 0)) and
    ("JC_48": (offset_max(intP_a_4_alloc_table,
    a_1) >= (integer_of_int32(n_1) - 1)))))) ->
  forall k_2:int32.
  (k_2 = n_1) ->
  forall i2_1:int.
  forall i1_2:int.
  ((i2_1 >= 0) and
   ((i2_1 < integer_of_int32(k_2)) and
    ((i1_2 >= integer_of_int32(k_2)) and (i1_2 < integer_of_int32(n_1))))) ->
  ("JC_91": (integer_of_int32(select(intP_intM_a_4, shift(a_1,
  i1_2))) >= integer_of_int32(select(intP_intM_a_4, shift(a_1, i2_1)))))

goal bubble_ensures_default_po_2:
  forall a_1:intP pointer.
  forall n_1:int32.
  forall intP_a_4_alloc_table:intP alloc_table.
  forall intP_intM_a_4:(intP,
  int32) memory.
  ("JC_49":
  (("JC_46": (0 <= integer_of_int32(n_1))) and
   (("JC_47": (offset_min(intP_a_4_alloc_table, a_1) <= 0)) and
    ("JC_48": (offset_max(intP_a_4_alloc_table,
    a_1) >= (integer_of_int32(n_1) - 1)))))) ->
  forall k_2:int32.
  (k_2 = n_1) ->
  ("JC_92":
  ((integer_of_int32(k_2) = integer_of_int32(n_1)) or
   (forall i1_1:int.
     (((i1_1 > integer_of_int32(k_2)) and (i1_1 < integer_of_int32(n_1))) ->
      (integer_of_int32(select(intP_intM_a_4, shift(a_1,
      integer_of_int32(k_2)))) <= integer_of_int32(select(intP_intM_a_4,
      shift(a_1, i1_1))))))))

goal bubble_ensures_default_po_3:
  forall a_1:intP pointer.
  forall n_1:int32.
  forall intP_a_4_alloc_table:intP alloc_table.
  forall intP_intM_a_4:(intP,
  int32) memory.
  ("JC_49":
  (("JC_46": (0 <= integer_of_int32(n_1))) and
   (("JC_47": (offset_min(intP_a_4_alloc_table, a_1) <= 0)) and
    ("JC_48": (offset_max(intP_a_4_alloc_table,
    a_1) >= (integer_of_int32(n_1) - 1)))))) ->
  forall k_2:int32.
  (k_2 = n_1) ->
  ("JC_93": bubble_sorted(a_1, integer_of_int32(k_2),
  (integer_of_int32(n_1) - 1), intP_intM_a_4))

goal bubble_ensures_default_po_4:
  forall a_1:intP pointer.
  forall n_1:int32.
  forall intP_a_4_alloc_table:intP alloc_table.
  ("JC_49":
  (("JC_46": (0 <= integer_of_int32(n_1))) and
   (("JC_47": (offset_min(intP_a_4_alloc_table, a_1) <= 0)) and
    ("JC_48": (offset_max(intP_a_4_alloc_table,
    a_1) >= (integer_of_int32(n_1) - 1)))))) ->
  forall k_2:int32.
  (k_2 = n_1) ->
  ("JC_96": ("JC_94": (integer_of_int32(k_2) >= 0)))

goal bubble_ensures_default_po_5:
  forall a_1:intP pointer.
  forall n_1:int32.
  forall intP_a_4_alloc_table:intP alloc_table.
  ("JC_49":
  (("JC_46": (0 <= integer_of_int32(n_1))) and
   (("JC_47": (offset_min(intP_a_4_alloc_table, a_1) <= 0)) and
    ("JC_48": (offset_max(intP_a_4_alloc_table,
    a_1) >= (integer_of_int32(n_1) - 1)))))) ->
  forall k_2:int32.
  (k_2 = n_1) ->
  ("JC_96": ("JC_95": (integer_of_int32(k_2) <= integer_of_int32(n_1))))

goal bubble_ensures_default_po_6:
  forall a_1:intP pointer.
  forall n_1:int32.
  forall intP_a_4_alloc_table:intP alloc_table.
  forall intP_intM_a_4:(intP,
  int32) memory.
  ("JC_49":
  (("JC_46": (0 <= integer_of_int32(n_1))) and
   (("JC_47": (offset_min(intP_a_4_alloc_table, a_1) <= 0)) and
    ("JC_48": (offset_max(intP_a_4_alloc_table,
    a_1) >= (integer_of_int32(n_1) - 1)))))) ->
  forall k_2:int32.
  (k_2 = n_1) ->
  ("JC_98": not_assigns(intP_a_4_alloc_table, intP_intM_a_4, intP_intM_a_4,
  pset_range(pset_singleton(a_1), 0, (integer_of_int32(n_1) - 1))))

goal bubble_ensures_default_po_7:
  forall a_1:intP pointer.
  forall n_1:int32.
  forall intP_a_4_alloc_table:intP alloc_table.
  forall intP_intM_a_4:(intP,
  int32) memory.
  ("JC_49":
  (("JC_46": (0 <= integer_of_int32(n_1))) and
   (("JC_47": (offset_min(intP_a_4_alloc_table, a_1) <= 0)) and
    ("JC_48": (offset_max(intP_a_4_alloc_table,
    a_1) >= (integer_of_int32(n_1) - 1)))))) ->
  forall k_2:int32.
  (k_2 = n_1) ->
  forall intP_intM_a_4_0:(intP,
  int32) memory.
  forall k_2_0:int32.
  ((("JC_91":
    (forall i2_1:int.
      (forall i1_2:int.
        (((i2_1 >= 0) and
          ((i2_1 < integer_of_int32(k_2_0)) and
           ((i1_2 >= integer_of_int32(k_2_0)) and
            (i1_2 < integer_of_int32(n_1))))) ->
         (integer_of_int32(select(intP_intM_a_4_0, shift(a_1,
         i1_2))) >= integer_of_int32(select(intP_intM_a_4_0, shift(a_1,
         i2_1)))))))) and
    (("JC_92":
     ((integer_of_int32(k_2_0) = integer_of_int32(n_1)) or
      (forall i1_1:int.
        (((i1_1 > integer_of_int32(k_2_0)) and (i1_1 < integer_of_int32(n_1))) ->
         (integer_of_int32(select(intP_intM_a_4_0, shift(a_1,
         integer_of_int32(k_2_0)))) <= integer_of_int32(select(intP_intM_a_4_0,
         shift(a_1, i1_1)))))))) and
     (("JC_93": bubble_sorted(a_1, integer_of_int32(k_2_0),
      (integer_of_int32(n_1) - 1), intP_intM_a_4_0)) and
      ("JC_96":
      (("JC_94": (integer_of_int32(k_2_0) >= 0)) and
       ("JC_95": (integer_of_int32(k_2_0) <= integer_of_int32(n_1)))))))) and
   ("JC_98": not_assigns(intP_a_4_alloc_table, intP_intM_a_4,
   intP_intM_a_4_0, pset_range(pset_singleton(a_1), 0,
   (integer_of_int32(n_1) - 1))))) ->
  (integer_of_int32(k_2_0) > 0) ->
  forall result:int32.
  (integer_of_int32(result) = 0) ->
  forall i_0:int32.
  (i_0 = result) ->
  forall i1_0:int.
  forall i2_0:int.
  ((i2_0 >= 0) and
   ((i2_0 < integer_of_int32(k_2_0)) and
    ((i1_0 >= integer_of_int32(k_2_0)) and
     (i1_0 <= (integer_of_int32(n_1) - 1))))) ->
  ("JC_100": (integer_of_int32(select(intP_intM_a_4_0, shift(a_1,
  i1_0))) >= integer_of_int32(select(intP_intM_a_4_0, shift(a_1, i2_0)))))

goal bubble_ensures_default_po_8:
  forall a_1:intP pointer.
  forall n_1:int32.
  forall intP_a_4_alloc_table:intP alloc_table.
  forall intP_intM_a_4:(intP,
  int32) memory.
  ("JC_49":
  (("JC_46": (0 <= integer_of_int32(n_1))) and
   (("JC_47": (offset_min(intP_a_4_alloc_table, a_1) <= 0)) and
    ("JC_48": (offset_max(intP_a_4_alloc_table,
    a_1) >= (integer_of_int32(n_1) - 1)))))) ->
  forall k_2:int32.
  (k_2 = n_1) ->
  forall intP_intM_a_4_0:(intP,
  int32) memory.
  forall k_2_0:int32.
  ((("JC_91":
    (forall i2_1:int.
      (forall i1_2:int.
        (((i2_1 >= 0) and
          ((i2_1 < integer_of_int32(k_2_0)) and
           ((i1_2 >= integer_of_int32(k_2_0)) and
            (i1_2 < integer_of_int32(n_1))))) ->
         (integer_of_int32(select(intP_intM_a_4_0, shift(a_1,
         i1_2))) >= integer_of_int32(select(intP_intM_a_4_0, shift(a_1,
         i2_1)))))))) and
    (("JC_92":
     ((integer_of_int32(k_2_0) = integer_of_int32(n_1)) or
      (forall i1_1:int.
        (((i1_1 > integer_of_int32(k_2_0)) and (i1_1 < integer_of_int32(n_1))) ->
         (integer_of_int32(select(intP_intM_a_4_0, shift(a_1,
         integer_of_int32(k_2_0)))) <= integer_of_int32(select(intP_intM_a_4_0,
         shift(a_1, i1_1)))))))) and
     (("JC_93": bubble_sorted(a_1, integer_of_int32(k_2_0),
      (integer_of_int32(n_1) - 1), intP_intM_a_4_0)) and
      ("JC_96":
      (("JC_94": (integer_of_int32(k_2_0) >= 0)) and
       ("JC_95": (integer_of_int32(k_2_0) <= integer_of_int32(n_1)))))))) and
   ("JC_98": not_assigns(intP_a_4_alloc_table, intP_intM_a_4,
   intP_intM_a_4_0, pset_range(pset_singleton(a_1), 0,
   (integer_of_int32(n_1) - 1))))) ->
  (integer_of_int32(k_2_0) > 0) ->
  forall result:int32.
  (integer_of_int32(result) = 0) ->
  forall i_0:int32.
  (i_0 = result) ->
  ("JC_101": bubble_sorted(a_1, integer_of_int32(k_2_0),
  (integer_of_int32(n_1) - 1), intP_intM_a_4_0))

goal bubble_ensures_default_po_9:
  forall a_1:intP pointer.
  forall n_1:int32.
  forall intP_a_4_alloc_table:intP alloc_table.
  forall intP_intM_a_4:(intP,
  int32) memory.
  ("JC_49":
  (("JC_46": (0 <= integer_of_int32(n_1))) and
   (("JC_47": (offset_min(intP_a_4_alloc_table, a_1) <= 0)) and
    ("JC_48": (offset_max(intP_a_4_alloc_table,
    a_1) >= (integer_of_int32(n_1) - 1)))))) ->
  forall k_2:int32.
  (k_2 = n_1) ->
  forall intP_intM_a_4_0:(intP,
  int32) memory.
  forall k_2_0:int32.
  ((("JC_91":
    (forall i2_1:int.
      (forall i1_2:int.
        (((i2_1 >= 0) and
          ((i2_1 < integer_of_int32(k_2_0)) and
           ((i1_2 >= integer_of_int32(k_2_0)) and
            (i1_2 < integer_of_int32(n_1))))) ->
         (integer_of_int32(select(intP_intM_a_4_0, shift(a_1,
         i1_2))) >= integer_of_int32(select(intP_intM_a_4_0, shift(a_1,
         i2_1)))))))) and
    (("JC_92":
     ((integer_of_int32(k_2_0) = integer_of_int32(n_1)) or
      (forall i1_1:int.
        (((i1_1 > integer_of_int32(k_2_0)) and (i1_1 < integer_of_int32(n_1))) ->
         (integer_of_int32(select(intP_intM_a_4_0, shift(a_1,
         integer_of_int32(k_2_0)))) <= integer_of_int32(select(intP_intM_a_4_0,
         shift(a_1, i1_1)))))))) and
     (("JC_93": bubble_sorted(a_1, integer_of_int32(k_2_0),
      (integer_of_int32(n_1) - 1), intP_intM_a_4_0)) and
      ("JC_96":
      (("JC_94": (integer_of_int32(k_2_0) >= 0)) and
       ("JC_95": (integer_of_int32(k_2_0) <= integer_of_int32(n_1)))))))) and
   ("JC_98": not_assigns(intP_a_4_alloc_table, intP_intM_a_4,
   intP_intM_a_4_0, pset_range(pset_singleton(a_1), 0,
   (integer_of_int32(n_1) - 1))))) ->
  (integer_of_int32(k_2_0) > 0) ->
  forall result:int32.
  (integer_of_int32(result) = 0) ->
  forall i_0:int32.
  (i_0 = result) ->
  forall j_1:int.
  ((j_1 >= 0) and (j_1 < integer_of_int32(i_0))) ->
  ("JC_102": (integer_of_int32(select(intP_intM_a_4_0, shift(a_1,
  j_1))) <= integer_of_int32(select(intP_intM_a_4_0, shift(a_1,
  integer_of_int32(i_0))))))

goal bubble_ensures_default_po_10:
  forall a_1:intP pointer.
  forall n_1:int32.
  forall intP_a_4_alloc_table:intP alloc_table.
  forall intP_intM_a_4:(intP,
  int32) memory.
  ("JC_49":
  (("JC_46": (0 <= integer_of_int32(n_1))) and
   (("JC_47": (offset_min(intP_a_4_alloc_table, a_1) <= 0)) and
    ("JC_48": (offset_max(intP_a_4_alloc_table,
    a_1) >= (integer_of_int32(n_1) - 1)))))) ->
  forall k_2:int32.
  (k_2 = n_1) ->
  forall intP_intM_a_4_0:(intP,
  int32) memory.
  forall k_2_0:int32.
  ((("JC_91":
    (forall i2_1:int.
      (forall i1_2:int.
        (((i2_1 >= 0) and
          ((i2_1 < integer_of_int32(k_2_0)) and
           ((i1_2 >= integer_of_int32(k_2_0)) and
            (i1_2 < integer_of_int32(n_1))))) ->
         (integer_of_int32(select(intP_intM_a_4_0, shift(a_1,
         i1_2))) >= integer_of_int32(select(intP_intM_a_4_0, shift(a_1,
         i2_1)))))))) and
    (("JC_92":
     ((integer_of_int32(k_2_0) = integer_of_int32(n_1)) or
      (forall i1_1:int.
        (((i1_1 > integer_of_int32(k_2_0)) and (i1_1 < integer_of_int32(n_1))) ->
         (integer_of_int32(select(intP_intM_a_4_0, shift(a_1,
         integer_of_int32(k_2_0)))) <= integer_of_int32(select(intP_intM_a_4_0,
         shift(a_1, i1_1)))))))) and
     (("JC_93": bubble_sorted(a_1, integer_of_int32(k_2_0),
      (integer_of_int32(n_1) - 1), intP_intM_a_4_0)) and
      ("JC_96":
      (("JC_94": (integer_of_int32(k_2_0) >= 0)) and
       ("JC_95": (integer_of_int32(k_2_0) <= integer_of_int32(n_1)))))))) and
   ("JC_98": not_assigns(intP_a_4_alloc_table, intP_intM_a_4,
   intP_intM_a_4_0, pset_range(pset_singleton(a_1), 0,
   (integer_of_int32(n_1) - 1))))) ->
  (integer_of_int32(k_2_0) > 0) ->
  forall result:int32.
  (integer_of_int32(result) = 0) ->
  forall i_0:int32.
  (i_0 = result) ->
  ("JC_106": ("JC_103": (integer_of_int32(i_0) >= 0)))

goal bubble_ensures_default_po_11:
  forall a_1:intP pointer.
  forall n_1:int32.
  forall intP_a_4_alloc_table:intP alloc_table.
  forall intP_intM_a_4:(intP,
  int32) memory.
  ("JC_49":
  (("JC_46": (0 <= integer_of_int32(n_1))) and
   (("JC_47": (offset_min(intP_a_4_alloc_table, a_1) <= 0)) and
    ("JC_48": (offset_max(intP_a_4_alloc_table,
    a_1) >= (integer_of_int32(n_1) - 1)))))) ->
  forall k_2:int32.
  (k_2 = n_1) ->
  forall intP_intM_a_4_0:(intP,
  int32) memory.
  forall k_2_0:int32.
  ((("JC_91":
    (forall i2_1:int.
      (forall i1_2:int.
        (((i2_1 >= 0) and
          ((i2_1 < integer_of_int32(k_2_0)) and
           ((i1_2 >= integer_of_int32(k_2_0)) and
            (i1_2 < integer_of_int32(n_1))))) ->
         (integer_of_int32(select(intP_intM_a_4_0, shift(a_1,
         i1_2))) >= integer_of_int32(select(intP_intM_a_4_0, shift(a_1,
         i2_1)))))))) and
    (("JC_92":
     ((integer_of_int32(k_2_0) = integer_of_int32(n_1)) or
      (forall i1_1:int.
        (((i1_1 > integer_of_int32(k_2_0)) and (i1_1 < integer_of_int32(n_1))) ->
         (integer_of_int32(select(intP_intM_a_4_0, shift(a_1,
         integer_of_int32(k_2_0)))) <= integer_of_int32(select(intP_intM_a_4_0,
         shift(a_1, i1_1)))))))) and
     (("JC_93": bubble_sorted(a_1, integer_of_int32(k_2_0),
      (integer_of_int32(n_1) - 1), intP_intM_a_4_0)) and
      ("JC_96":
      (("JC_94": (integer_of_int32(k_2_0) >= 0)) and
       ("JC_95": (integer_of_int32(k_2_0) <= integer_of_int32(n_1)))))))) and
   ("JC_98": not_assigns(intP_a_4_alloc_table, intP_intM_a_4,
   intP_intM_a_4_0, pset_range(pset_singleton(a_1), 0,
   (integer_of_int32(n_1) - 1))))) ->
  (integer_of_int32(k_2_0) > 0) ->
  forall result:int32.
  (integer_of_int32(result) = 0) ->
  forall i_0:int32.
  (i_0 = result) ->
  ("JC_106": ("JC_104": (integer_of_int32(i_0) < integer_of_int32(k_2_0))))

goal bubble_ensures_default_po_12:
  forall a_1:intP pointer.
  forall n_1:int32.
  forall intP_a_4_alloc_table:intP alloc_table.
  forall intP_intM_a_4:(intP,
  int32) memory.
  ("JC_49":
  (("JC_46": (0 <= integer_of_int32(n_1))) and
   (("JC_47": (offset_min(intP_a_4_alloc_table, a_1) <= 0)) and
    ("JC_48": (offset_max(intP_a_4_alloc_table,
    a_1) >= (integer_of_int32(n_1) - 1)))))) ->
  forall k_2:int32.
  (k_2 = n_1) ->
  forall intP_intM_a_4_0:(intP,
  int32) memory.
  forall k_2_0:int32.
  ((("JC_91":
    (forall i2_1:int.
      (forall i1_2:int.
        (((i2_1 >= 0) and
          ((i2_1 < integer_of_int32(k_2_0)) and
           ((i1_2 >= integer_of_int32(k_2_0)) and
            (i1_2 < integer_of_int32(n_1))))) ->
         (integer_of_int32(select(intP_intM_a_4_0, shift(a_1,
         i1_2))) >= integer_of_int32(select(intP_intM_a_4_0, shift(a_1,
         i2_1)))))))) and
    (("JC_92":
     ((integer_of_int32(k_2_0) = integer_of_int32(n_1)) or
      (forall i1_1:int.
        (((i1_1 > integer_of_int32(k_2_0)) and (i1_1 < integer_of_int32(n_1))) ->
         (integer_of_int32(select(intP_intM_a_4_0, shift(a_1,
         integer_of_int32(k_2_0)))) <= integer_of_int32(select(intP_intM_a_4_0,
         shift(a_1, i1_1)))))))) and
     (("JC_93": bubble_sorted(a_1, integer_of_int32(k_2_0),
      (integer_of_int32(n_1) - 1), intP_intM_a_4_0)) and
      ("JC_96":
      (("JC_94": (integer_of_int32(k_2_0) >= 0)) and
       ("JC_95": (integer_of_int32(k_2_0) <= integer_of_int32(n_1)))))))) and
   ("JC_98": not_assigns(intP_a_4_alloc_table, intP_intM_a_4,
   intP_intM_a_4_0, pset_range(pset_singleton(a_1), 0,
   (integer_of_int32(n_1) - 1))))) ->
  (integer_of_int32(k_2_0) > 0) ->
  forall result:int32.
  (integer_of_int32(result) = 0) ->
  forall i_0:int32.
  (i_0 = result) ->
  ("JC_106": ("JC_105": (integer_of_int32(i_0) <= integer_of_int32(n_1))))

goal bubble_ensures_default_po_13:
  forall a_1:intP pointer.
  forall n_1:int32.
  forall intP_a_4_alloc_table:intP alloc_table.
  forall intP_intM_a_4:(intP,
  int32) memory.
  ("JC_49":
  (("JC_46": (0 <= integer_of_int32(n_1))) and
   (("JC_47": (offset_min(intP_a_4_alloc_table, a_1) <= 0)) and
    ("JC_48": (offset_max(intP_a_4_alloc_table,
    a_1) >= (integer_of_int32(n_1) - 1)))))) ->
  forall k_2:int32.
  (k_2 = n_1) ->
  forall intP_intM_a_4_0:(intP,
  int32) memory.
  forall k_2_0:int32.
  ((("JC_91":
    (forall i2_1:int.
      (forall i1_2:int.
        (((i2_1 >= 0) and
          ((i2_1 < integer_of_int32(k_2_0)) and
           ((i1_2 >= integer_of_int32(k_2_0)) and
            (i1_2 < integer_of_int32(n_1))))) ->
         (integer_of_int32(select(intP_intM_a_4_0, shift(a_1,
         i1_2))) >= integer_of_int32(select(intP_intM_a_4_0, shift(a_1,
         i2_1)))))))) and
    (("JC_92":
     ((integer_of_int32(k_2_0) = integer_of_int32(n_1)) or
      (forall i1_1:int.
        (((i1_1 > integer_of_int32(k_2_0)) and (i1_1 < integer_of_int32(n_1))) ->
         (integer_of_int32(select(intP_intM_a_4_0, shift(a_1,
         integer_of_int32(k_2_0)))) <= integer_of_int32(select(intP_intM_a_4_0,
         shift(a_1, i1_1)))))))) and
     (("JC_93": bubble_sorted(a_1, integer_of_int32(k_2_0),
      (integer_of_int32(n_1) - 1), intP_intM_a_4_0)) and
      ("JC_96":
      (("JC_94": (integer_of_int32(k_2_0) >= 0)) and
       ("JC_95": (integer_of_int32(k_2_0) <= integer_of_int32(n_1)))))))) and
   ("JC_98": not_assigns(intP_a_4_alloc_table, intP_intM_a_4,
   intP_intM_a_4_0, pset_range(pset_singleton(a_1), 0,
   (integer_of_int32(n_1) - 1))))) ->
  (integer_of_int32(k_2_0) > 0) ->
  forall result:int32.
  (integer_of_int32(result) = 0) ->
  forall i_0:int32.
  (i_0 = result) ->
  forall i_0_0:int32.
  forall intP_intM_a_4_1:(intP,
  int32) memory.
  ((("JC_100":
    (forall i1_0:int.
      (forall i2_0:int.
        (((i2_0 >= 0) and
          ((i2_0 < integer_of_int32(k_2_0)) and
           ((i1_0 >= integer_of_int32(k_2_0)) and
            (i1_0 <= (integer_of_int32(n_1) - 1))))) ->
         (integer_of_int32(select(intP_intM_a_4_1, shift(a_1,
         i1_0))) >= integer_of_int32(select(intP_intM_a_4_1, shift(a_1,
         i2_0)))))))) and
    (("JC_101": bubble_sorted(a_1, integer_of_int32(k_2_0),
     (integer_of_int32(n_1) - 1), intP_intM_a_4_1)) and
     (("JC_102":
      (forall j_1:int.
        (((j_1 >= 0) and (j_1 < integer_of_int32(i_0_0))) ->
         (integer_of_int32(select(intP_intM_a_4_1, shift(a_1,
         j_1))) <= integer_of_int32(select(intP_intM_a_4_1, shift(a_1,
         integer_of_int32(i_0_0)))))))) and
      ("JC_106":
      (("JC_103": (integer_of_int32(i_0_0) >= 0)) and
       (("JC_104": (integer_of_int32(i_0_0) < integer_of_int32(k_2_0))) and
        ("JC_105": (integer_of_int32(i_0_0) <= integer_of_int32(n_1))))))))) and
   ("JC_108": not_assigns(intP_a_4_alloc_table, intP_intM_a_4,
   intP_intM_a_4_1, pset_range(pset_singleton(a_1), 0,
   (integer_of_int32(n_1) - 1))))) ->
  forall result0:int32.
  (integer_of_int32(result0) = (integer_of_int32(k_2_0) - 1)) ->
  (integer_of_int32(i_0_0) < integer_of_int32(result0)) ->
  forall result1:int32.
  (result1 = select(intP_intM_a_4_1, shift(a_1, integer_of_int32(i_0_0)))) ->
  forall result2:int32.
  (result2 = select(intP_intM_a_4_1, shift(shift(a_1,
  integer_of_int32(i_0_0)), 1))) ->
  (integer_of_int32(result1) > integer_of_int32(result2)) ->
  ("JC_110": (integer_of_int32(n_1) >= 0))

goal bubble_ensures_default_po_14:
  forall a_1:intP pointer.
  forall n_1:int32.
  forall intP_a_4_alloc_table:intP alloc_table.
  forall intP_intM_a_4:(intP,
  int32) memory.
  ("JC_49":
  (("JC_46": (0 <= integer_of_int32(n_1))) and
   (("JC_47": (offset_min(intP_a_4_alloc_table, a_1) <= 0)) and
    ("JC_48": (offset_max(intP_a_4_alloc_table,
    a_1) >= (integer_of_int32(n_1) - 1)))))) ->
  forall k_2:int32.
  (k_2 = n_1) ->
  forall intP_intM_a_4_0:(intP,
  int32) memory.
  forall k_2_0:int32.
  ((("JC_91":
    (forall i2_1:int.
      (forall i1_2:int.
        (((i2_1 >= 0) and
          ((i2_1 < integer_of_int32(k_2_0)) and
           ((i1_2 >= integer_of_int32(k_2_0)) and
            (i1_2 < integer_of_int32(n_1))))) ->
         (integer_of_int32(select(intP_intM_a_4_0, shift(a_1,
         i1_2))) >= integer_of_int32(select(intP_intM_a_4_0, shift(a_1,
         i2_1)))))))) and
    (("JC_92":
     ((integer_of_int32(k_2_0) = integer_of_int32(n_1)) or
      (forall i1_1:int.
        (((i1_1 > integer_of_int32(k_2_0)) and (i1_1 < integer_of_int32(n_1))) ->
         (integer_of_int32(select(intP_intM_a_4_0, shift(a_1,
         integer_of_int32(k_2_0)))) <= integer_of_int32(select(intP_intM_a_4_0,
         shift(a_1, i1_1)))))))) and
     (("JC_93": bubble_sorted(a_1, integer_of_int32(k_2_0),
      (integer_of_int32(n_1) - 1), intP_intM_a_4_0)) and
      ("JC_96":
      (("JC_94": (integer_of_int32(k_2_0) >= 0)) and
       ("JC_95": (integer_of_int32(k_2_0) <= integer_of_int32(n_1)))))))) and
   ("JC_98": not_assigns(intP_a_4_alloc_table, intP_intM_a_4,
   intP_intM_a_4_0, pset_range(pset_singleton(a_1), 0,
   (integer_of_int32(n_1) - 1))))) ->
  (integer_of_int32(k_2_0) > 0) ->
  forall result:int32.
  (integer_of_int32(result) = 0) ->
  forall i_0:int32.
  (i_0 = result) ->
  forall i_0_0:int32.
  forall intP_intM_a_4_1:(intP,
  int32) memory.
  ((("JC_100":
    (forall i1_0:int.
      (forall i2_0:int.
        (((i2_0 >= 0) and
          ((i2_0 < integer_of_int32(k_2_0)) and
           ((i1_0 >= integer_of_int32(k_2_0)) and
            (i1_0 <= (integer_of_int32(n_1) - 1))))) ->
         (integer_of_int32(select(intP_intM_a_4_1, shift(a_1,
         i1_0))) >= integer_of_int32(select(intP_intM_a_4_1, shift(a_1,
         i2_0)))))))) and
    (("JC_101": bubble_sorted(a_1, integer_of_int32(k_2_0),
     (integer_of_int32(n_1) - 1), intP_intM_a_4_1)) and
     (("JC_102":
      (forall j_1:int.
        (((j_1 >= 0) and (j_1 < integer_of_int32(i_0_0))) ->
         (integer_of_int32(select(intP_intM_a_4_1, shift(a_1,
         j_1))) <= integer_of_int32(select(intP_intM_a_4_1, shift(a_1,
         integer_of_int32(i_0_0)))))))) and
      ("JC_106":
      (("JC_103": (integer_of_int32(i_0_0) >= 0)) and
       (("JC_104": (integer_of_int32(i_0_0) < integer_of_int32(k_2_0))) and
        ("JC_105": (integer_of_int32(i_0_0) <= integer_of_int32(n_1))))))))) and
   ("JC_108": not_assigns(intP_a_4_alloc_table, intP_intM_a_4,
   intP_intM_a_4_1, pset_range(pset_singleton(a_1), 0,
   (integer_of_int32(n_1) - 1))))) ->
  forall result0:int32.
  (integer_of_int32(result0) = (integer_of_int32(k_2_0) - 1)) ->
  (integer_of_int32(i_0_0) < integer_of_int32(result0)) ->
  forall result1:int32.
  (result1 = select(intP_intM_a_4_1, shift(a_1, integer_of_int32(i_0_0)))) ->
  forall result2:int32.
  (result2 = select(intP_intM_a_4_1, shift(shift(a_1,
  integer_of_int32(i_0_0)), 1))) ->
  (integer_of_int32(result1) > integer_of_int32(result2)) ->
  ("JC_110": (integer_of_int32(n_1) >= 0)) ->
  ("JC_111": (integer_of_int32(i_0_0) >= 0))

goal bubble_ensures_default_po_15:
  forall a_1:intP pointer.
  forall n_1:int32.
  forall intP_a_4_alloc_table:intP alloc_table.
  forall intP_intM_a_4:(intP,
  int32) memory.
  ("JC_49":
  (("JC_46": (0 <= integer_of_int32(n_1))) and
   (("JC_47": (offset_min(intP_a_4_alloc_table, a_1) <= 0)) and
    ("JC_48": (offset_max(intP_a_4_alloc_table,
    a_1) >= (integer_of_int32(n_1) - 1)))))) ->
  forall k_2:int32.
  (k_2 = n_1) ->
  forall intP_intM_a_4_0:(intP,
  int32) memory.
  forall k_2_0:int32.
  ((("JC_91":
    (forall i2_1:int.
      (forall i1_2:int.
        (((i2_1 >= 0) and
          ((i2_1 < integer_of_int32(k_2_0)) and
           ((i1_2 >= integer_of_int32(k_2_0)) and
            (i1_2 < integer_of_int32(n_1))))) ->
         (integer_of_int32(select(intP_intM_a_4_0, shift(a_1,
         i1_2))) >= integer_of_int32(select(intP_intM_a_4_0, shift(a_1,
         i2_1)))))))) and
    (("JC_92":
     ((integer_of_int32(k_2_0) = integer_of_int32(n_1)) or
      (forall i1_1:int.
        (((i1_1 > integer_of_int32(k_2_0)) and (i1_1 < integer_of_int32(n_1))) ->
         (integer_of_int32(select(intP_intM_a_4_0, shift(a_1,
         integer_of_int32(k_2_0)))) <= integer_of_int32(select(intP_intM_a_4_0,
         shift(a_1, i1_1)))))))) and
     (("JC_93": bubble_sorted(a_1, integer_of_int32(k_2_0),
      (integer_of_int32(n_1) - 1), intP_intM_a_4_0)) and
      ("JC_96":
      (("JC_94": (integer_of_int32(k_2_0) >= 0)) and
       ("JC_95": (integer_of_int32(k_2_0) <= integer_of_int32(n_1)))))))) and
   ("JC_98": not_assigns(intP_a_4_alloc_table, intP_intM_a_4,
   intP_intM_a_4_0, pset_range(pset_singleton(a_1), 0,
   (integer_of_int32(n_1) - 1))))) ->
  (integer_of_int32(k_2_0) > 0) ->
  forall result:int32.
  (integer_of_int32(result) = 0) ->
  forall i_0:int32.
  (i_0 = result) ->
  forall i_0_0:int32.
  forall intP_intM_a_4_1:(intP,
  int32) memory.
  ((("JC_100":
    (forall i1_0:int.
      (forall i2_0:int.
        (((i2_0 >= 0) and
          ((i2_0 < integer_of_int32(k_2_0)) and
           ((i1_0 >= integer_of_int32(k_2_0)) and
            (i1_0 <= (integer_of_int32(n_1) - 1))))) ->
         (integer_of_int32(select(intP_intM_a_4_1, shift(a_1,
         i1_0))) >= integer_of_int32(select(intP_intM_a_4_1, shift(a_1,
         i2_0)))))))) and
    (("JC_101": bubble_sorted(a_1, integer_of_int32(k_2_0),
     (integer_of_int32(n_1) - 1), intP_intM_a_4_1)) and
     (("JC_102":
      (forall j_1:int.
        (((j_1 >= 0) and (j_1 < integer_of_int32(i_0_0))) ->
         (integer_of_int32(select(intP_intM_a_4_1, shift(a_1,
         j_1))) <= integer_of_int32(select(intP_intM_a_4_1, shift(a_1,
         integer_of_int32(i_0_0)))))))) and
      ("JC_106":
      (("JC_103": (integer_of_int32(i_0_0) >= 0)) and
       (("JC_104": (integer_of_int32(i_0_0) < integer_of_int32(k_2_0))) and
        ("JC_105": (integer_of_int32(i_0_0) <= integer_of_int32(n_1))))))))) and
   ("JC_108": not_assigns(intP_a_4_alloc_table, intP_intM_a_4,
   intP_intM_a_4_1, pset_range(pset_singleton(a_1), 0,
   (integer_of_int32(n_1) - 1))))) ->
  forall result0:int32.
  (integer_of_int32(result0) = (integer_of_int32(k_2_0) - 1)) ->
  (integer_of_int32(i_0_0) < integer_of_int32(result0)) ->
  forall result1:int32.
  (result1 = select(intP_intM_a_4_1, shift(a_1, integer_of_int32(i_0_0)))) ->
  forall result2:int32.
  (result2 = select(intP_intM_a_4_1, shift(shift(a_1,
  integer_of_int32(i_0_0)), 1))) ->
  (integer_of_int32(result1) > integer_of_int32(result2)) ->
  ("JC_110": (integer_of_int32(n_1) >= 0)) ->
  ("JC_111": (integer_of_int32(i_0_0) <= (integer_of_int32(n_1) - 1)))

goal bubble_ensures_default_po_16:
  forall a_1:intP pointer.
  forall n_1:int32.
  forall intP_a_4_alloc_table:intP alloc_table.
  forall intP_intM_a_4:(intP,
  int32) memory.
  ("JC_49":
  (("JC_46": (0 <= integer_of_int32(n_1))) and
   (("JC_47": (offset_min(intP_a_4_alloc_table, a_1) <= 0)) and
    ("JC_48": (offset_max(intP_a_4_alloc_table,
    a_1) >= (integer_of_int32(n_1) - 1)))))) ->
  forall k_2:int32.
  (k_2 = n_1) ->
  forall intP_intM_a_4_0:(intP,
  int32) memory.
  forall k_2_0:int32.
  ((("JC_91":
    (forall i2_1:int.
      (forall i1_2:int.
        (((i2_1 >= 0) and
          ((i2_1 < integer_of_int32(k_2_0)) and
           ((i1_2 >= integer_of_int32(k_2_0)) and
            (i1_2 < integer_of_int32(n_1))))) ->
         (integer_of_int32(select(intP_intM_a_4_0, shift(a_1,
         i1_2))) >= integer_of_int32(select(intP_intM_a_4_0, shift(a_1,
         i2_1)))))))) and
    (("JC_92":
     ((integer_of_int32(k_2_0) = integer_of_int32(n_1)) or
      (forall i1_1:int.
        (((i1_1 > integer_of_int32(k_2_0)) and (i1_1 < integer_of_int32(n_1))) ->
         (integer_of_int32(select(intP_intM_a_4_0, shift(a_1,
         integer_of_int32(k_2_0)))) <= integer_of_int32(select(intP_intM_a_4_0,
         shift(a_1, i1_1)))))))) and
     (("JC_93": bubble_sorted(a_1, integer_of_int32(k_2_0),
      (integer_of_int32(n_1) - 1), intP_intM_a_4_0)) and
      ("JC_96":
      (("JC_94": (integer_of_int32(k_2_0) >= 0)) and
       ("JC_95": (integer_of_int32(k_2_0) <= integer_of_int32(n_1)))))))) and
   ("JC_98": not_assigns(intP_a_4_alloc_table, intP_intM_a_4,
   intP_intM_a_4_0, pset_range(pset_singleton(a_1), 0,
   (integer_of_int32(n_1) - 1))))) ->
  (integer_of_int32(k_2_0) > 0) ->
  forall result:int32.
  (integer_of_int32(result) = 0) ->
  forall i_0:int32.
  (i_0 = result) ->
  forall i_0_0:int32.
  forall intP_intM_a_4_1:(intP,
  int32) memory.
  ((("JC_100":
    (forall i1_0:int.
      (forall i2_0:int.
        (((i2_0 >= 0) and
          ((i2_0 < integer_of_int32(k_2_0)) and
           ((i1_0 >= integer_of_int32(k_2_0)) and
            (i1_0 <= (integer_of_int32(n_1) - 1))))) ->
         (integer_of_int32(select(intP_intM_a_4_1, shift(a_1,
         i1_0))) >= integer_of_int32(select(intP_intM_a_4_1, shift(a_1,
         i2_0)))))))) and
    (("JC_101": bubble_sorted(a_1, integer_of_int32(k_2_0),
     (integer_of_int32(n_1) - 1), intP_intM_a_4_1)) and
     (("JC_102":
      (forall j_1:int.
        (((j_1 >= 0) and (j_1 < integer_of_int32(i_0_0))) ->
         (integer_of_int32(select(intP_intM_a_4_1, shift(a_1,
         j_1))) <= integer_of_int32(select(intP_intM_a_4_1, shift(a_1,
         integer_of_int32(i_0_0)))))))) and
      ("JC_106":
      (("JC_103": (integer_of_int32(i_0_0) >= 0)) and
       (("JC_104": (integer_of_int32(i_0_0) < integer_of_int32(k_2_0))) and
        ("JC_105": (integer_of_int32(i_0_0) <= integer_of_int32(n_1))))))))) and
   ("JC_108": not_assigns(intP_a_4_alloc_table, intP_intM_a_4,
   intP_intM_a_4_1, pset_range(pset_singleton(a_1), 0,
   (integer_of_int32(n_1) - 1))))) ->
  forall result0:int32.
  (integer_of_int32(result0) = (integer_of_int32(k_2_0) - 1)) ->
  (integer_of_int32(i_0_0) < integer_of_int32(result0)) ->
  forall result1:int32.
  (result1 = select(intP_intM_a_4_1, shift(a_1, integer_of_int32(i_0_0)))) ->
  forall result2:int32.
  (result2 = select(intP_intM_a_4_1, shift(shift(a_1,
  integer_of_int32(i_0_0)), 1))) ->
  (integer_of_int32(result1) > integer_of_int32(result2)) ->
  ("JC_110": (integer_of_int32(n_1) >= 0)) ->
  ("JC_111":
  ((integer_of_int32(i_0_0) >= 0) and
   (integer_of_int32(i_0_0) <= (integer_of_int32(n_1) - 1)))) ->
  ("JC_112": ((integer_of_int32(i_0_0) + 1) >= 0))

goal bubble_ensures_default_po_17:
  forall a_1:intP pointer.
  forall n_1:int32.
  forall intP_a_4_alloc_table:intP alloc_table.
  forall intP_intM_a_4:(intP,
  int32) memory.
  ("JC_49":
  (("JC_46": (0 <= integer_of_int32(n_1))) and
   (("JC_47": (offset_min(intP_a_4_alloc_table, a_1) <= 0)) and
    ("JC_48": (offset_max(intP_a_4_alloc_table,
    a_1) >= (integer_of_int32(n_1) - 1)))))) ->
  forall k_2:int32.
  (k_2 = n_1) ->
  forall intP_intM_a_4_0:(intP,
  int32) memory.
  forall k_2_0:int32.
  ((("JC_91":
    (forall i2_1:int.
      (forall i1_2:int.
        (((i2_1 >= 0) and
          ((i2_1 < integer_of_int32(k_2_0)) and
           ((i1_2 >= integer_of_int32(k_2_0)) and
            (i1_2 < integer_of_int32(n_1))))) ->
         (integer_of_int32(select(intP_intM_a_4_0, shift(a_1,
         i1_2))) >= integer_of_int32(select(intP_intM_a_4_0, shift(a_1,
         i2_1)))))))) and
    (("JC_92":
     ((integer_of_int32(k_2_0) = integer_of_int32(n_1)) or
      (forall i1_1:int.
        (((i1_1 > integer_of_int32(k_2_0)) and (i1_1 < integer_of_int32(n_1))) ->
         (integer_of_int32(select(intP_intM_a_4_0, shift(a_1,
         integer_of_int32(k_2_0)))) <= integer_of_int32(select(intP_intM_a_4_0,
         shift(a_1, i1_1)))))))) and
     (("JC_93": bubble_sorted(a_1, integer_of_int32(k_2_0),
      (integer_of_int32(n_1) - 1), intP_intM_a_4_0)) and
      ("JC_96":
      (("JC_94": (integer_of_int32(k_2_0) >= 0)) and
       ("JC_95": (integer_of_int32(k_2_0) <= integer_of_int32(n_1)))))))) and
   ("JC_98": not_assigns(intP_a_4_alloc_table, intP_intM_a_4,
   intP_intM_a_4_0, pset_range(pset_singleton(a_1), 0,
   (integer_of_int32(n_1) - 1))))) ->
  (integer_of_int32(k_2_0) > 0) ->
  forall result:int32.
  (integer_of_int32(result) = 0) ->
  forall i_0:int32.
  (i_0 = result) ->
  forall i_0_0:int32.
  forall intP_intM_a_4_1:(intP,
  int32) memory.
  ((("JC_100":
    (forall i1_0:int.
      (forall i2_0:int.
        (((i2_0 >= 0) and
          ((i2_0 < integer_of_int32(k_2_0)) and
           ((i1_0 >= integer_of_int32(k_2_0)) and
            (i1_0 <= (integer_of_int32(n_1) - 1))))) ->
         (integer_of_int32(select(intP_intM_a_4_1, shift(a_1,
         i1_0))) >= integer_of_int32(select(intP_intM_a_4_1, shift(a_1,
         i2_0)))))))) and
    (("JC_101": bubble_sorted(a_1, integer_of_int32(k_2_0),
     (integer_of_int32(n_1) - 1), intP_intM_a_4_1)) and
     (("JC_102":
      (forall j_1:int.
        (((j_1 >= 0) and (j_1 < integer_of_int32(i_0_0))) ->
         (integer_of_int32(select(intP_intM_a_4_1, shift(a_1,
         j_1))) <= integer_of_int32(select(intP_intM_a_4_1, shift(a_1,
         integer_of_int32(i_0_0)))))))) and
      ("JC_106":
      (("JC_103": (integer_of_int32(i_0_0) >= 0)) and
       (("JC_104": (integer_of_int32(i_0_0) < integer_of_int32(k_2_0))) and
        ("JC_105": (integer_of_int32(i_0_0) <= integer_of_int32(n_1))))))))) and
   ("JC_108": not_assigns(intP_a_4_alloc_table, intP_intM_a_4,
   intP_intM_a_4_1, pset_range(pset_singleton(a_1), 0,
   (integer_of_int32(n_1) - 1))))) ->
  forall result0:int32.
  (integer_of_int32(result0) = (integer_of_int32(k_2_0) - 1)) ->
  (integer_of_int32(i_0_0) < integer_of_int32(result0)) ->
  forall result1:int32.
  (result1 = select(intP_intM_a_4_1, shift(a_1, integer_of_int32(i_0_0)))) ->
  forall result2:int32.
  (result2 = select(intP_intM_a_4_1, shift(shift(a_1,
  integer_of_int32(i_0_0)), 1))) ->
  (integer_of_int32(result1) > integer_of_int32(result2)) ->
  ("JC_110": (integer_of_int32(n_1) >= 0)) ->
  ("JC_111":
  ((integer_of_int32(i_0_0) >= 0) and
   (integer_of_int32(i_0_0) <= (integer_of_int32(n_1) - 1)))) ->
  ("JC_112": ((integer_of_int32(i_0_0) + 1) <= (integer_of_int32(n_1) - 1)))

goal bubble_ensures_default_po_18:
  forall a_1:intP pointer.
  forall n_1:int32.
  forall intP_a_4_alloc_table:intP alloc_table.
  forall intP_intM_a_4:(intP,
  int32) memory.
  ("JC_49":
  (("JC_46": (0 <= integer_of_int32(n_1))) and
   (("JC_47": (offset_min(intP_a_4_alloc_table, a_1) <= 0)) and
    ("JC_48": (offset_max(intP_a_4_alloc_table,
    a_1) >= (integer_of_int32(n_1) - 1)))))) ->
  forall k_2:int32.
  (k_2 = n_1) ->
  forall intP_intM_a_4_0:(intP,
  int32) memory.
  forall k_2_0:int32.
  ((("JC_91":
    (forall i2_1:int.
      (forall i1_2:int.
        (((i2_1 >= 0) and
          ((i2_1 < integer_of_int32(k_2_0)) and
           ((i1_2 >= integer_of_int32(k_2_0)) and
            (i1_2 < integer_of_int32(n_1))))) ->
         (integer_of_int32(select(intP_intM_a_4_0, shift(a_1,
         i1_2))) >= integer_of_int32(select(intP_intM_a_4_0, shift(a_1,
         i2_1)))))))) and
    (("JC_92":
     ((integer_of_int32(k_2_0) = integer_of_int32(n_1)) or
      (forall i1_1:int.
        (((i1_1 > integer_of_int32(k_2_0)) and (i1_1 < integer_of_int32(n_1))) ->
         (integer_of_int32(select(intP_intM_a_4_0, shift(a_1,
         integer_of_int32(k_2_0)))) <= integer_of_int32(select(intP_intM_a_4_0,
         shift(a_1, i1_1)))))))) and
     (("JC_93": bubble_sorted(a_1, integer_of_int32(k_2_0),
      (integer_of_int32(n_1) - 1), intP_intM_a_4_0)) and
      ("JC_96":
      (("JC_94": (integer_of_int32(k_2_0) >= 0)) and
       ("JC_95": (integer_of_int32(k_2_0) <= integer_of_int32(n_1)))))))) and
   ("JC_98": not_assigns(intP_a_4_alloc_table, intP_intM_a_4,
   intP_intM_a_4_0, pset_range(pset_singleton(a_1), 0,
   (integer_of_int32(n_1) - 1))))) ->
  (integer_of_int32(k_2_0) > 0) ->
  forall result:int32.
  (integer_of_int32(result) = 0) ->
  forall i_0:int32.
  (i_0 = result) ->
  forall i_0_0:int32.
  forall intP_intM_a_4_1:(intP,
  int32) memory.
  ((("JC_100":
    (forall i1_0:int.
      (forall i2_0:int.
        (((i2_0 >= 0) and
          ((i2_0 < integer_of_int32(k_2_0)) and
           ((i1_0 >= integer_of_int32(k_2_0)) and
            (i1_0 <= (integer_of_int32(n_1) - 1))))) ->
         (integer_of_int32(select(intP_intM_a_4_1, shift(a_1,
         i1_0))) >= integer_of_int32(select(intP_intM_a_4_1, shift(a_1,
         i2_0)))))))) and
    (("JC_101": bubble_sorted(a_1, integer_of_int32(k_2_0),
     (integer_of_int32(n_1) - 1), intP_intM_a_4_1)) and
     (("JC_102":
      (forall j_1:int.
        (((j_1 >= 0) and (j_1 < integer_of_int32(i_0_0))) ->
         (integer_of_int32(select(intP_intM_a_4_1, shift(a_1,
         j_1))) <= integer_of_int32(select(intP_intM_a_4_1, shift(a_1,
         integer_of_int32(i_0_0)))))))) and
      ("JC_106":
      (("JC_103": (integer_of_int32(i_0_0) >= 0)) and
       (("JC_104": (integer_of_int32(i_0_0) < integer_of_int32(k_2_0))) and
        ("JC_105": (integer_of_int32(i_0_0) <= integer_of_int32(n_1))))))))) and
   ("JC_108": not_assigns(intP_a_4_alloc_table, intP_intM_a_4,
   intP_intM_a_4_1, pset_range(pset_singleton(a_1), 0,
   (integer_of_int32(n_1) - 1))))) ->
  forall result0:int32.
  (integer_of_int32(result0) = (integer_of_int32(k_2_0) - 1)) ->
  (integer_of_int32(i_0_0) < integer_of_int32(result0)) ->
  forall result1:int32.
  (result1 = select(intP_intM_a_4_1, shift(a_1, integer_of_int32(i_0_0)))) ->
  forall result2:int32.
  (result2 = select(intP_intM_a_4_1, shift(shift(a_1,
  integer_of_int32(i_0_0)), 1))) ->
  (integer_of_int32(result1) > integer_of_int32(result2)) ->
  ("JC_110": (integer_of_int32(n_1) >= 0)) ->
  ("JC_111":
  ((integer_of_int32(i_0_0) >= 0) and
   (integer_of_int32(i_0_0) <= (integer_of_int32(n_1) - 1)))) ->
  ("JC_112":
  (((integer_of_int32(i_0_0) + 1) >= 0) and
   ((integer_of_int32(i_0_0) + 1) <= (integer_of_int32(n_1) - 1)))) ->
  ("JC_113": (offset_min(intP_a_4_alloc_table, a_1) <= 0))

goal bubble_ensures_default_po_19:
  forall a_1:intP pointer.
  forall n_1:int32.
  forall intP_a_4_alloc_table:intP alloc_table.
  forall intP_intM_a_4:(intP,
  int32) memory.
  ("JC_49":
  (("JC_46": (0 <= integer_of_int32(n_1))) and
   (("JC_47": (offset_min(intP_a_4_alloc_table, a_1) <= 0)) and
    ("JC_48": (offset_max(intP_a_4_alloc_table,
    a_1) >= (integer_of_int32(n_1) - 1)))))) ->
  forall k_2:int32.
  (k_2 = n_1) ->
  forall intP_intM_a_4_0:(intP,
  int32) memory.
  forall k_2_0:int32.
  ((("JC_91":
    (forall i2_1:int.
      (forall i1_2:int.
        (((i2_1 >= 0) and
          ((i2_1 < integer_of_int32(k_2_0)) and
           ((i1_2 >= integer_of_int32(k_2_0)) and
            (i1_2 < integer_of_int32(n_1))))) ->
         (integer_of_int32(select(intP_intM_a_4_0, shift(a_1,
         i1_2))) >= integer_of_int32(select(intP_intM_a_4_0, shift(a_1,
         i2_1)))))))) and
    (("JC_92":
     ((integer_of_int32(k_2_0) = integer_of_int32(n_1)) or
      (forall i1_1:int.
        (((i1_1 > integer_of_int32(k_2_0)) and (i1_1 < integer_of_int32(n_1))) ->
         (integer_of_int32(select(intP_intM_a_4_0, shift(a_1,
         integer_of_int32(k_2_0)))) <= integer_of_int32(select(intP_intM_a_4_0,
         shift(a_1, i1_1)))))))) and
     (("JC_93": bubble_sorted(a_1, integer_of_int32(k_2_0),
      (integer_of_int32(n_1) - 1), intP_intM_a_4_0)) and
      ("JC_96":
      (("JC_94": (integer_of_int32(k_2_0) >= 0)) and
       ("JC_95": (integer_of_int32(k_2_0) <= integer_of_int32(n_1)))))))) and
   ("JC_98": not_assigns(intP_a_4_alloc_table, intP_intM_a_4,
   intP_intM_a_4_0, pset_range(pset_singleton(a_1), 0,
   (integer_of_int32(n_1) - 1))))) ->
  (integer_of_int32(k_2_0) > 0) ->
  forall result:int32.
  (integer_of_int32(result) = 0) ->
  forall i_0:int32.
  (i_0 = result) ->
  forall i_0_0:int32.
  forall intP_intM_a_4_1:(intP,
  int32) memory.
  ((("JC_100":
    (forall i1_0:int.
      (forall i2_0:int.
        (((i2_0 >= 0) and
          ((i2_0 < integer_of_int32(k_2_0)) and
           ((i1_0 >= integer_of_int32(k_2_0)) and
            (i1_0 <= (integer_of_int32(n_1) - 1))))) ->
         (integer_of_int32(select(intP_intM_a_4_1, shift(a_1,
         i1_0))) >= integer_of_int32(select(intP_intM_a_4_1, shift(a_1,
         i2_0)))))))) and
    (("JC_101": bubble_sorted(a_1, integer_of_int32(k_2_0),
     (integer_of_int32(n_1) - 1), intP_intM_a_4_1)) and
     (("JC_102":
      (forall j_1:int.
        (((j_1 >= 0) and (j_1 < integer_of_int32(i_0_0))) ->
         (integer_of_int32(select(intP_intM_a_4_1, shift(a_1,
         j_1))) <= integer_of_int32(select(intP_intM_a_4_1, shift(a_1,
         integer_of_int32(i_0_0)))))))) and
      ("JC_106":
      (("JC_103": (integer_of_int32(i_0_0) >= 0)) and
       (("JC_104": (integer_of_int32(i_0_0) < integer_of_int32(k_2_0))) and
        ("JC_105": (integer_of_int32(i_0_0) <= integer_of_int32(n_1))))))))) and
   ("JC_108": not_assigns(intP_a_4_alloc_table, intP_intM_a_4,
   intP_intM_a_4_1, pset_range(pset_singleton(a_1), 0,
   (integer_of_int32(n_1) - 1))))) ->
  forall result0:int32.
  (integer_of_int32(result0) = (integer_of_int32(k_2_0) - 1)) ->
  (integer_of_int32(i_0_0) < integer_of_int32(result0)) ->
  forall result1:int32.
  (result1 = select(intP_intM_a_4_1, shift(a_1, integer_of_int32(i_0_0)))) ->
  forall result2:int32.
  (result2 = select(intP_intM_a_4_1, shift(shift(a_1,
  integer_of_int32(i_0_0)), 1))) ->
  (integer_of_int32(result1) > integer_of_int32(result2)) ->
  ("JC_110": (integer_of_int32(n_1) >= 0)) ->
  ("JC_111":
  ((integer_of_int32(i_0_0) >= 0) and
   (integer_of_int32(i_0_0) <= (integer_of_int32(n_1) - 1)))) ->
  ("JC_112":
  (((integer_of_int32(i_0_0) + 1) >= 0) and
   ((integer_of_int32(i_0_0) + 1) <= (integer_of_int32(n_1) - 1)))) ->
  ("JC_113": (offset_max(intP_a_4_alloc_table,
  a_1) >= (integer_of_int32(n_1) - 1)))

goal bubble_ensures_default_po_20:
  forall a_1:intP pointer.
  forall n_1:int32.
  forall intP_a_4_alloc_table:intP alloc_table.
  forall intP_intM_a_4:(intP,
  int32) memory.
  ("JC_49":
  (("JC_46": (0 <= integer_of_int32(n_1))) and
   (("JC_47": (offset_min(intP_a_4_alloc_table, a_1) <= 0)) and
    ("JC_48": (offset_max(intP_a_4_alloc_table,
    a_1) >= (integer_of_int32(n_1) - 1)))))) ->
  forall k_2:int32.
  (k_2 = n_1) ->
  forall intP_intM_a_4_0:(intP,
  int32) memory.
  forall k_2_0:int32.
  ((("JC_91":
    (forall i2_1:int.
      (forall i1_2:int.
        (((i2_1 >= 0) and
          ((i2_1 < integer_of_int32(k_2_0)) and
           ((i1_2 >= integer_of_int32(k_2_0)) and
            (i1_2 < integer_of_int32(n_1))))) ->
         (integer_of_int32(select(intP_intM_a_4_0, shift(a_1,
         i1_2))) >= integer_of_int32(select(intP_intM_a_4_0, shift(a_1,
         i2_1)))))))) and
    (("JC_92":
     ((integer_of_int32(k_2_0) = integer_of_int32(n_1)) or
      (forall i1_1:int.
        (((i1_1 > integer_of_int32(k_2_0)) and (i1_1 < integer_of_int32(n_1))) ->
         (integer_of_int32(select(intP_intM_a_4_0, shift(a_1,
         integer_of_int32(k_2_0)))) <= integer_of_int32(select(intP_intM_a_4_0,
         shift(a_1, i1_1)))))))) and
     (("JC_93": bubble_sorted(a_1, integer_of_int32(k_2_0),
      (integer_of_int32(n_1) - 1), intP_intM_a_4_0)) and
      ("JC_96":
      (("JC_94": (integer_of_int32(k_2_0) >= 0)) and
       ("JC_95": (integer_of_int32(k_2_0) <= integer_of_int32(n_1)))))))) and
   ("JC_98": not_assigns(intP_a_4_alloc_table, intP_intM_a_4,
   intP_intM_a_4_0, pset_range(pset_singleton(a_1), 0,
   (integer_of_int32(n_1) - 1))))) ->
  (integer_of_int32(k_2_0) > 0) ->
  forall result:int32.
  (integer_of_int32(result) = 0) ->
  forall i_0:int32.
  (i_0 = result) ->
  forall i_0_0:int32.
  forall intP_intM_a_4_1:(intP,
  int32) memory.
  ((("JC_100":
    (forall i1_0:int.
      (forall i2_0:int.
        (((i2_0 >= 0) and
          ((i2_0 < integer_of_int32(k_2_0)) and
           ((i1_0 >= integer_of_int32(k_2_0)) and
            (i1_0 <= (integer_of_int32(n_1) - 1))))) ->
         (integer_of_int32(select(intP_intM_a_4_1, shift(a_1,
         i1_0))) >= integer_of_int32(select(intP_intM_a_4_1, shift(a_1,
         i2_0)))))))) and
    (("JC_101": bubble_sorted(a_1, integer_of_int32(k_2_0),
     (integer_of_int32(n_1) - 1), intP_intM_a_4_1)) and
     (("JC_102":
      (forall j_1:int.
        (((j_1 >= 0) and (j_1 < integer_of_int32(i_0_0))) ->
         (integer_of_int32(select(intP_intM_a_4_1, shift(a_1,
         j_1))) <= integer_of_int32(select(intP_intM_a_4_1, shift(a_1,
         integer_of_int32(i_0_0)))))))) and
      ("JC_106":
      (("JC_103": (integer_of_int32(i_0_0) >= 0)) and
       (("JC_104": (integer_of_int32(i_0_0) < integer_of_int32(k_2_0))) and
        ("JC_105": (integer_of_int32(i_0_0) <= integer_of_int32(n_1))))))))) and
   ("JC_108": not_assigns(intP_a_4_alloc_table, intP_intM_a_4,
   intP_intM_a_4_1, pset_range(pset_singleton(a_1), 0,
   (integer_of_int32(n_1) - 1))))) ->
  forall result0:int32.
  (integer_of_int32(result0) = (integer_of_int32(k_2_0) - 1)) ->
  (integer_of_int32(i_0_0) < integer_of_int32(result0)) ->
  forall result1:int32.
  (result1 = select(intP_intM_a_4_1, shift(a_1, integer_of_int32(i_0_0)))) ->
  forall result2:int32.
  (result2 = select(intP_intM_a_4_1, shift(shift(a_1,
  integer_of_int32(i_0_0)), 1))) ->
  (integer_of_int32(result1) > integer_of_int32(result2)) ->
  ("JC_110": (integer_of_int32(n_1) >= 0)) ->
  ("JC_111":
  ((integer_of_int32(i_0_0) >= 0) and
   (integer_of_int32(i_0_0) <= (integer_of_int32(n_1) - 1)))) ->
  ("JC_112":
  (((integer_of_int32(i_0_0) + 1) >= 0) and
   ((integer_of_int32(i_0_0) + 1) <= (integer_of_int32(n_1) - 1)))) ->
  ("JC_113":
  ((offset_min(intP_a_4_alloc_table, a_1) <= 0) and
   (offset_max(intP_a_4_alloc_table, a_1) >= (integer_of_int32(n_1) - 1)))) ->
  forall result3:int32.
  (integer_of_int32(result3) = (integer_of_int32(i_0_0) + 1)) ->
  forall intP_intM_a_4_2:(intP,
  int32) memory.
  ("JC_34":
  (("JC_32":
   (("JC_29":
    (forall i1:int.
      (dom(i1, integer_of_int32(n_1)) ->
       (exists i2:int.
         (dom(i2, integer_of_int32(n_1)) and
          (integer_of_int32(select(intP_intM_a_4_1, shift(a_1,
          i1))) = integer_of_int32(select(intP_intM_a_4_2, shift(a_1, i2))))))))) and
    (("JC_30": swapped(a_1, integer_of_int32(i_0_0),
     integer_of_int32(result3), intP_intM_a_4_2, intP_intM_a_4_1)) and
     ("JC_31":
     (forall k_1:int.
       (((0 <= k_1) and
         ((k_1 < integer_of_int32(n_1)) and
          ((k_1 <> integer_of_int32(i_0_0)) and
           (k_1 <> integer_of_int32(result3))))) ->
        (integer_of_int32(select(intP_intM_a_4_2, shift(a_1,
        k_1))) = integer_of_int32(select(intP_intM_a_4_1, shift(a_1, k_1)))))))))) and
   ("JC_33": not_assigns(intP_a_4_alloc_table, intP_intM_a_4_1,
   intP_intM_a_4_2, pset_union(pset_range(pset_singleton(a_1),
   integer_of_int32(result3), integer_of_int32(result3)),
   pset_range(pset_singleton(a_1), integer_of_int32(i_0_0),
   integer_of_int32(i_0_0))))))) ->
  forall result4:int32.
  (integer_of_int32(result4) = (integer_of_int32(i_0_0) + 1)) ->
  forall i_0_1:int32.
  (i_0_1 = result4) ->
  forall i1_0:int.
  forall i2_0:int.
  ((i2_0 >= 0) and
   ((i2_0 < integer_of_int32(k_2_0)) and
    ((i1_0 >= integer_of_int32(k_2_0)) and
     (i1_0 <= (integer_of_int32(n_1) - 1))))) ->
  ("JC_100": (integer_of_int32(select(intP_intM_a_4_2, shift(a_1,
  i1_0))) >= integer_of_int32(select(intP_intM_a_4_2, shift(a_1, i2_0)))))

goal bubble_ensures_default_po_21:
  forall a_1:intP pointer.
  forall n_1:int32.
  forall intP_a_4_alloc_table:intP alloc_table.
  forall intP_intM_a_4:(intP,
  int32) memory.
  ("JC_49":
  (("JC_46": (0 <= integer_of_int32(n_1))) and
   (("JC_47": (offset_min(intP_a_4_alloc_table, a_1) <= 0)) and
    ("JC_48": (offset_max(intP_a_4_alloc_table,
    a_1) >= (integer_of_int32(n_1) - 1)))))) ->
  forall k_2:int32.
  (k_2 = n_1) ->
  forall intP_intM_a_4_0:(intP,
  int32) memory.
  forall k_2_0:int32.
  ((("JC_91":
    (forall i2_1:int.
      (forall i1_2:int.
        (((i2_1 >= 0) and
          ((i2_1 < integer_of_int32(k_2_0)) and
           ((i1_2 >= integer_of_int32(k_2_0)) and
            (i1_2 < integer_of_int32(n_1))))) ->
         (integer_of_int32(select(intP_intM_a_4_0, shift(a_1,
         i1_2))) >= integer_of_int32(select(intP_intM_a_4_0, shift(a_1,
         i2_1)))))))) and
    (("JC_92":
     ((integer_of_int32(k_2_0) = integer_of_int32(n_1)) or
      (forall i1_1:int.
        (((i1_1 > integer_of_int32(k_2_0)) and (i1_1 < integer_of_int32(n_1))) ->
         (integer_of_int32(select(intP_intM_a_4_0, shift(a_1,
         integer_of_int32(k_2_0)))) <= integer_of_int32(select(intP_intM_a_4_0,
         shift(a_1, i1_1)))))))) and
     (("JC_93": bubble_sorted(a_1, integer_of_int32(k_2_0),
      (integer_of_int32(n_1) - 1), intP_intM_a_4_0)) and
      ("JC_96":
      (("JC_94": (integer_of_int32(k_2_0) >= 0)) and
       ("JC_95": (integer_of_int32(k_2_0) <= integer_of_int32(n_1)))))))) and
   ("JC_98": not_assigns(intP_a_4_alloc_table, intP_intM_a_4,
   intP_intM_a_4_0, pset_range(pset_singleton(a_1), 0,
   (integer_of_int32(n_1) - 1))))) ->
  (integer_of_int32(k_2_0) > 0) ->
  forall result:int32.
  (integer_of_int32(result) = 0) ->
  forall i_0:int32.
  (i_0 = result) ->
  forall i_0_0:int32.
  forall intP_intM_a_4_1:(intP,
  int32) memory.
  ((("JC_100":
    (forall i1_0:int.
      (forall i2_0:int.
        (((i2_0 >= 0) and
          ((i2_0 < integer_of_int32(k_2_0)) and
           ((i1_0 >= integer_of_int32(k_2_0)) and
            (i1_0 <= (integer_of_int32(n_1) - 1))))) ->
         (integer_of_int32(select(intP_intM_a_4_1, shift(a_1,
         i1_0))) >= integer_of_int32(select(intP_intM_a_4_1, shift(a_1,
         i2_0)))))))) and
    (("JC_101": bubble_sorted(a_1, integer_of_int32(k_2_0),
     (integer_of_int32(n_1) - 1), intP_intM_a_4_1)) and
     (("JC_102":
      (forall j_1:int.
        (((j_1 >= 0) and (j_1 < integer_of_int32(i_0_0))) ->
         (integer_of_int32(select(intP_intM_a_4_1, shift(a_1,
         j_1))) <= integer_of_int32(select(intP_intM_a_4_1, shift(a_1,
         integer_of_int32(i_0_0)))))))) and
      ("JC_106":
      (("JC_103": (integer_of_int32(i_0_0) >= 0)) and
       (("JC_104": (integer_of_int32(i_0_0) < integer_of_int32(k_2_0))) and
        ("JC_105": (integer_of_int32(i_0_0) <= integer_of_int32(n_1))))))))) and
   ("JC_108": not_assigns(intP_a_4_alloc_table, intP_intM_a_4,
   intP_intM_a_4_1, pset_range(pset_singleton(a_1), 0,
   (integer_of_int32(n_1) - 1))))) ->
  forall result0:int32.
  (integer_of_int32(result0) = (integer_of_int32(k_2_0) - 1)) ->
  (integer_of_int32(i_0_0) < integer_of_int32(result0)) ->
  forall result1:int32.
  (result1 = select(intP_intM_a_4_1, shift(a_1, integer_of_int32(i_0_0)))) ->
  forall result2:int32.
  (result2 = select(intP_intM_a_4_1, shift(shift(a_1,
  integer_of_int32(i_0_0)), 1))) ->
  (integer_of_int32(result1) > integer_of_int32(result2)) ->
  ("JC_110": (integer_of_int32(n_1) >= 0)) ->
  ("JC_111":
  ((integer_of_int32(i_0_0) >= 0) and
   (integer_of_int32(i_0_0) <= (integer_of_int32(n_1) - 1)))) ->
  ("JC_112":
  (((integer_of_int32(i_0_0) + 1) >= 0) and
   ((integer_of_int32(i_0_0) + 1) <= (integer_of_int32(n_1) - 1)))) ->
  ("JC_113":
  ((offset_min(intP_a_4_alloc_table, a_1) <= 0) and
   (offset_max(intP_a_4_alloc_table, a_1) >= (integer_of_int32(n_1) - 1)))) ->
  forall result3:int32.
  (integer_of_int32(result3) = (integer_of_int32(i_0_0) + 1)) ->
  forall intP_intM_a_4_2:(intP,
  int32) memory.
  ("JC_34":
  (("JC_32":
   (("JC_29":
    (forall i1:int.
      (dom(i1, integer_of_int32(n_1)) ->
       (exists i2:int.
         (dom(i2, integer_of_int32(n_1)) and
          (integer_of_int32(select(intP_intM_a_4_1, shift(a_1,
          i1))) = integer_of_int32(select(intP_intM_a_4_2, shift(a_1, i2))))))))) and
    (("JC_30": swapped(a_1, integer_of_int32(i_0_0),
     integer_of_int32(result3), intP_intM_a_4_2, intP_intM_a_4_1)) and
     ("JC_31":
     (forall k_1:int.
       (((0 <= k_1) and
         ((k_1 < integer_of_int32(n_1)) and
          ((k_1 <> integer_of_int32(i_0_0)) and
           (k_1 <> integer_of_int32(result3))))) ->
        (integer_of_int32(select(intP_intM_a_4_2, shift(a_1,
        k_1))) = integer_of_int32(select(intP_intM_a_4_1, shift(a_1, k_1)))))))))) and
   ("JC_33": not_assigns(intP_a_4_alloc_table, intP_intM_a_4_1,
   intP_intM_a_4_2, pset_union(pset_range(pset_singleton(a_1),
   integer_of_int32(result3), integer_of_int32(result3)),
   pset_range(pset_singleton(a_1), integer_of_int32(i_0_0),
   integer_of_int32(i_0_0))))))) ->
  forall result4:int32.
  (integer_of_int32(result4) = (integer_of_int32(i_0_0) + 1)) ->
  forall i_0_1:int32.
  (i_0_1 = result4) ->
  ("JC_101": bubble_sorted(a_1, integer_of_int32(k_2_0),
  (integer_of_int32(n_1) - 1), intP_intM_a_4_2))

goal bubble_ensures_default_po_22:
  forall a_1:intP pointer.
  forall n_1:int32.
  forall intP_a_4_alloc_table:intP alloc_table.
  forall intP_intM_a_4:(intP,
  int32) memory.
  ("JC_49":
  (("JC_46": (0 <= integer_of_int32(n_1))) and
   (("JC_47": (offset_min(intP_a_4_alloc_table, a_1) <= 0)) and
    ("JC_48": (offset_max(intP_a_4_alloc_table,
    a_1) >= (integer_of_int32(n_1) - 1)))))) ->
  forall k_2:int32.
  (k_2 = n_1) ->
  forall intP_intM_a_4_0:(intP,
  int32) memory.
  forall k_2_0:int32.
  ((("JC_91":
    (forall i2_1:int.
      (forall i1_2:int.
        (((i2_1 >= 0) and
          ((i2_1 < integer_of_int32(k_2_0)) and
           ((i1_2 >= integer_of_int32(k_2_0)) and
            (i1_2 < integer_of_int32(n_1))))) ->
         (integer_of_int32(select(intP_intM_a_4_0, shift(a_1,
         i1_2))) >= integer_of_int32(select(intP_intM_a_4_0, shift(a_1,
         i2_1)))))))) and
    (("JC_92":
     ((integer_of_int32(k_2_0) = integer_of_int32(n_1)) or
      (forall i1_1:int.
        (((i1_1 > integer_of_int32(k_2_0)) and (i1_1 < integer_of_int32(n_1))) ->
         (integer_of_int32(select(intP_intM_a_4_0, shift(a_1,
         integer_of_int32(k_2_0)))) <= integer_of_int32(select(intP_intM_a_4_0,
         shift(a_1, i1_1)))))))) and
     (("JC_93": bubble_sorted(a_1, integer_of_int32(k_2_0),
      (integer_of_int32(n_1) - 1), intP_intM_a_4_0)) and
      ("JC_96":
      (("JC_94": (integer_of_int32(k_2_0) >= 0)) and
       ("JC_95": (integer_of_int32(k_2_0) <= integer_of_int32(n_1)))))))) and
   ("JC_98": not_assigns(intP_a_4_alloc_table, intP_intM_a_4,
   intP_intM_a_4_0, pset_range(pset_singleton(a_1), 0,
   (integer_of_int32(n_1) - 1))))) ->
  (integer_of_int32(k_2_0) > 0) ->
  forall result:int32.
  (integer_of_int32(result) = 0) ->
  forall i_0:int32.
  (i_0 = result) ->
  forall i_0_0:int32.
  forall intP_intM_a_4_1:(intP,
  int32) memory.
  ((("JC_100":
    (forall i1_0:int.
      (forall i2_0:int.
        (((i2_0 >= 0) and
          ((i2_0 < integer_of_int32(k_2_0)) and
           ((i1_0 >= integer_of_int32(k_2_0)) and
            (i1_0 <= (integer_of_int32(n_1) - 1))))) ->
         (integer_of_int32(select(intP_intM_a_4_1, shift(a_1,
         i1_0))) >= integer_of_int32(select(intP_intM_a_4_1, shift(a_1,
         i2_0)))))))) and
    (("JC_101": bubble_sorted(a_1, integer_of_int32(k_2_0),
     (integer_of_int32(n_1) - 1), intP_intM_a_4_1)) and
     (("JC_102":
      (forall j_1:int.
        (((j_1 >= 0) and (j_1 < integer_of_int32(i_0_0))) ->
         (integer_of_int32(select(intP_intM_a_4_1, shift(a_1,
         j_1))) <= integer_of_int32(select(intP_intM_a_4_1, shift(a_1,
         integer_of_int32(i_0_0)))))))) and
      ("JC_106":
      (("JC_103": (integer_of_int32(i_0_0) >= 0)) and
       (("JC_104": (integer_of_int32(i_0_0) < integer_of_int32(k_2_0))) and
        ("JC_105": (integer_of_int32(i_0_0) <= integer_of_int32(n_1))))))))) and
   ("JC_108": not_assigns(intP_a_4_alloc_table, intP_intM_a_4,
   intP_intM_a_4_1, pset_range(pset_singleton(a_1), 0,
   (integer_of_int32(n_1) - 1))))) ->
  forall result0:int32.
  (integer_of_int32(result0) = (integer_of_int32(k_2_0) - 1)) ->
  (integer_of_int32(i_0_0) < integer_of_int32(result0)) ->
  forall result1:int32.
  (result1 = select(intP_intM_a_4_1, shift(a_1, integer_of_int32(i_0_0)))) ->
  forall result2:int32.
  (result2 = select(intP_intM_a_4_1, shift(shift(a_1,
  integer_of_int32(i_0_0)), 1))) ->
  (integer_of_int32(result1) > integer_of_int32(result2)) ->
  ("JC_110": (integer_of_int32(n_1) >= 0)) ->
  ("JC_111":
  ((integer_of_int32(i_0_0) >= 0) and
   (integer_of_int32(i_0_0) <= (integer_of_int32(n_1) - 1)))) ->
  ("JC_112":
  (((integer_of_int32(i_0_0) + 1) >= 0) and
   ((integer_of_int32(i_0_0) + 1) <= (integer_of_int32(n_1) - 1)))) ->
  ("JC_113":
  ((offset_min(intP_a_4_alloc_table, a_1) <= 0) and
   (offset_max(intP_a_4_alloc_table, a_1) >= (integer_of_int32(n_1) - 1)))) ->
  forall result3:int32.
  (integer_of_int32(result3) = (integer_of_int32(i_0_0) + 1)) ->
  forall intP_intM_a_4_2:(intP,
  int32) memory.
  ("JC_34":
  (("JC_32":
   (("JC_29":
    (forall i1:int.
      (dom(i1, integer_of_int32(n_1)) ->
       (exists i2:int.
         (dom(i2, integer_of_int32(n_1)) and
          (integer_of_int32(select(intP_intM_a_4_1, shift(a_1,
          i1))) = integer_of_int32(select(intP_intM_a_4_2, shift(a_1, i2))))))))) and
    (("JC_30": swapped(a_1, integer_of_int32(i_0_0),
     integer_of_int32(result3), intP_intM_a_4_2, intP_intM_a_4_1)) and
     ("JC_31":
     (forall k_1:int.
       (((0 <= k_1) and
         ((k_1 < integer_of_int32(n_1)) and
          ((k_1 <> integer_of_int32(i_0_0)) and
           (k_1 <> integer_of_int32(result3))))) ->
        (integer_of_int32(select(intP_intM_a_4_2, shift(a_1,
        k_1))) = integer_of_int32(select(intP_intM_a_4_1, shift(a_1, k_1)))))))))) and
   ("JC_33": not_assigns(intP_a_4_alloc_table, intP_intM_a_4_1,
   intP_intM_a_4_2, pset_union(pset_range(pset_singleton(a_1),
   integer_of_int32(result3), integer_of_int32(result3)),
   pset_range(pset_singleton(a_1), integer_of_int32(i_0_0),
   integer_of_int32(i_0_0))))))) ->
  forall result4:int32.
  (integer_of_int32(result4) = (integer_of_int32(i_0_0) + 1)) ->
  forall i_0_1:int32.
  (i_0_1 = result4) ->
  forall j_1:int.
  ((j_1 >= 0) and (j_1 < integer_of_int32(i_0_1))) ->
  ("JC_102": (integer_of_int32(select(intP_intM_a_4_2, shift(a_1,
  j_1))) <= integer_of_int32(select(intP_intM_a_4_2, shift(a_1,
  integer_of_int32(i_0_1))))))

goal bubble_ensures_default_po_23:
  forall a_1:intP pointer.
  forall n_1:int32.
  forall intP_a_4_alloc_table:intP alloc_table.
  forall intP_intM_a_4:(intP,
  int32) memory.
  ("JC_49":
  (("JC_46": (0 <= integer_of_int32(n_1))) and
   (("JC_47": (offset_min(intP_a_4_alloc_table, a_1) <= 0)) and
    ("JC_48": (offset_max(intP_a_4_alloc_table,
    a_1) >= (integer_of_int32(n_1) - 1)))))) ->
  forall k_2:int32.
  (k_2 = n_1) ->
  forall intP_intM_a_4_0:(intP,
  int32) memory.
  forall k_2_0:int32.
  ((("JC_91":
    (forall i2_1:int.
      (forall i1_2:int.
        (((i2_1 >= 0) and
          ((i2_1 < integer_of_int32(k_2_0)) and
           ((i1_2 >= integer_of_int32(k_2_0)) and
            (i1_2 < integer_of_int32(n_1))))) ->
         (integer_of_int32(select(intP_intM_a_4_0, shift(a_1,
         i1_2))) >= integer_of_int32(select(intP_intM_a_4_0, shift(a_1,
         i2_1)))))))) and
    (("JC_92":
     ((integer_of_int32(k_2_0) = integer_of_int32(n_1)) or
      (forall i1_1:int.
        (((i1_1 > integer_of_int32(k_2_0)) and (i1_1 < integer_of_int32(n_1))) ->
         (integer_of_int32(select(intP_intM_a_4_0, shift(a_1,
         integer_of_int32(k_2_0)))) <= integer_of_int32(select(intP_intM_a_4_0,
         shift(a_1, i1_1)))))))) and
     (("JC_93": bubble_sorted(a_1, integer_of_int32(k_2_0),
      (integer_of_int32(n_1) - 1), intP_intM_a_4_0)) and
      ("JC_96":
      (("JC_94": (integer_of_int32(k_2_0) >= 0)) and
       ("JC_95": (integer_of_int32(k_2_0) <= integer_of_int32(n_1)))))))) and
   ("JC_98": not_assigns(intP_a_4_alloc_table, intP_intM_a_4,
   intP_intM_a_4_0, pset_range(pset_singleton(a_1), 0,
   (integer_of_int32(n_1) - 1))))) ->
  (integer_of_int32(k_2_0) > 0) ->
  forall result:int32.
  (integer_of_int32(result) = 0) ->
  forall i_0:int32.
  (i_0 = result) ->
  forall i_0_0:int32.
  forall intP_intM_a_4_1:(intP,
  int32) memory.
  ((("JC_100":
    (forall i1_0:int.
      (forall i2_0:int.
        (((i2_0 >= 0) and
          ((i2_0 < integer_of_int32(k_2_0)) and
           ((i1_0 >= integer_of_int32(k_2_0)) and
            (i1_0 <= (integer_of_int32(n_1) - 1))))) ->
         (integer_of_int32(select(intP_intM_a_4_1, shift(a_1,
         i1_0))) >= integer_of_int32(select(intP_intM_a_4_1, shift(a_1,
         i2_0)))))))) and
    (("JC_101": bubble_sorted(a_1, integer_of_int32(k_2_0),
     (integer_of_int32(n_1) - 1), intP_intM_a_4_1)) and
     (("JC_102":
      (forall j_1:int.
        (((j_1 >= 0) and (j_1 < integer_of_int32(i_0_0))) ->
         (integer_of_int32(select(intP_intM_a_4_1, shift(a_1,
         j_1))) <= integer_of_int32(select(intP_intM_a_4_1, shift(a_1,
         integer_of_int32(i_0_0)))))))) and
      ("JC_106":
      (("JC_103": (integer_of_int32(i_0_0) >= 0)) and
       (("JC_104": (integer_of_int32(i_0_0) < integer_of_int32(k_2_0))) and
        ("JC_105": (integer_of_int32(i_0_0) <= integer_of_int32(n_1))))))))) and
   ("JC_108": not_assigns(intP_a_4_alloc_table, intP_intM_a_4,
   intP_intM_a_4_1, pset_range(pset_singleton(a_1), 0,
   (integer_of_int32(n_1) - 1))))) ->
  forall result0:int32.
  (integer_of_int32(result0) = (integer_of_int32(k_2_0) - 1)) ->
  (integer_of_int32(i_0_0) < integer_of_int32(result0)) ->
  forall result1:int32.
  (result1 = select(intP_intM_a_4_1, shift(a_1, integer_of_int32(i_0_0)))) ->
  forall result2:int32.
  (result2 = select(intP_intM_a_4_1, shift(shift(a_1,
  integer_of_int32(i_0_0)), 1))) ->
  (integer_of_int32(result1) > integer_of_int32(result2)) ->
  ("JC_110": (integer_of_int32(n_1) >= 0)) ->
  ("JC_111":
  ((integer_of_int32(i_0_0) >= 0) and
   (integer_of_int32(i_0_0) <= (integer_of_int32(n_1) - 1)))) ->
  ("JC_112":
  (((integer_of_int32(i_0_0) + 1) >= 0) and
   ((integer_of_int32(i_0_0) + 1) <= (integer_of_int32(n_1) - 1)))) ->
  ("JC_113":
  ((offset_min(intP_a_4_alloc_table, a_1) <= 0) and
   (offset_max(intP_a_4_alloc_table, a_1) >= (integer_of_int32(n_1) - 1)))) ->
  forall result3:int32.
  (integer_of_int32(result3) = (integer_of_int32(i_0_0) + 1)) ->
  forall intP_intM_a_4_2:(intP,
  int32) memory.
  ("JC_34":
  (("JC_32":
   (("JC_29":
    (forall i1:int.
      (dom(i1, integer_of_int32(n_1)) ->
       (exists i2:int.
         (dom(i2, integer_of_int32(n_1)) and
          (integer_of_int32(select(intP_intM_a_4_1, shift(a_1,
          i1))) = integer_of_int32(select(intP_intM_a_4_2, shift(a_1, i2))))))))) and
    (("JC_30": swapped(a_1, integer_of_int32(i_0_0),
     integer_of_int32(result3), intP_intM_a_4_2, intP_intM_a_4_1)) and
     ("JC_31":
     (forall k_1:int.
       (((0 <= k_1) and
         ((k_1 < integer_of_int32(n_1)) and
          ((k_1 <> integer_of_int32(i_0_0)) and
           (k_1 <> integer_of_int32(result3))))) ->
        (integer_of_int32(select(intP_intM_a_4_2, shift(a_1,
        k_1))) = integer_of_int32(select(intP_intM_a_4_1, shift(a_1, k_1)))))))))) and
   ("JC_33": not_assigns(intP_a_4_alloc_table, intP_intM_a_4_1,
   intP_intM_a_4_2, pset_union(pset_range(pset_singleton(a_1),
   integer_of_int32(result3), integer_of_int32(result3)),
   pset_range(pset_singleton(a_1), integer_of_int32(i_0_0),
   integer_of_int32(i_0_0))))))) ->
  forall result4:int32.
  (integer_of_int32(result4) = (integer_of_int32(i_0_0) + 1)) ->
  forall i_0_1:int32.
  (i_0_1 = result4) ->
  ("JC_106": ("JC_103": (integer_of_int32(i_0_1) >= 0)))

goal bubble_ensures_default_po_24:
  forall a_1:intP pointer.
  forall n_1:int32.
  forall intP_a_4_alloc_table:intP alloc_table.
  forall intP_intM_a_4:(intP,
  int32) memory.
  ("JC_49":
  (("JC_46": (0 <= integer_of_int32(n_1))) and
   (("JC_47": (offset_min(intP_a_4_alloc_table, a_1) <= 0)) and
    ("JC_48": (offset_max(intP_a_4_alloc_table,
    a_1) >= (integer_of_int32(n_1) - 1)))))) ->
  forall k_2:int32.
  (k_2 = n_1) ->
  forall intP_intM_a_4_0:(intP,
  int32) memory.
  forall k_2_0:int32.
  ((("JC_91":
    (forall i2_1:int.
      (forall i1_2:int.
        (((i2_1 >= 0) and
          ((i2_1 < integer_of_int32(k_2_0)) and
           ((i1_2 >= integer_of_int32(k_2_0)) and
            (i1_2 < integer_of_int32(n_1))))) ->
         (integer_of_int32(select(intP_intM_a_4_0, shift(a_1,
         i1_2))) >= integer_of_int32(select(intP_intM_a_4_0, shift(a_1,
         i2_1)))))))) and
    (("JC_92":
     ((integer_of_int32(k_2_0) = integer_of_int32(n_1)) or
      (forall i1_1:int.
        (((i1_1 > integer_of_int32(k_2_0)) and (i1_1 < integer_of_int32(n_1))) ->
         (integer_of_int32(select(intP_intM_a_4_0, shift(a_1,
         integer_of_int32(k_2_0)))) <= integer_of_int32(select(intP_intM_a_4_0,
         shift(a_1, i1_1)))))))) and
     (("JC_93": bubble_sorted(a_1, integer_of_int32(k_2_0),
      (integer_of_int32(n_1) - 1), intP_intM_a_4_0)) and
      ("JC_96":
      (("JC_94": (integer_of_int32(k_2_0) >= 0)) and
       ("JC_95": (integer_of_int32(k_2_0) <= integer_of_int32(n_1)))))))) and
   ("JC_98": not_assigns(intP_a_4_alloc_table, intP_intM_a_4,
   intP_intM_a_4_0, pset_range(pset_singleton(a_1), 0,
   (integer_of_int32(n_1) - 1))))) ->
  (integer_of_int32(k_2_0) > 0) ->
  forall result:int32.
  (integer_of_int32(result) = 0) ->
  forall i_0:int32.
  (i_0 = result) ->
  forall i_0_0:int32.
  forall intP_intM_a_4_1:(intP,
  int32) memory.
  ((("JC_100":
    (forall i1_0:int.
      (forall i2_0:int.
        (((i2_0 >= 0) and
          ((i2_0 < integer_of_int32(k_2_0)) and
           ((i1_0 >= integer_of_int32(k_2_0)) and
            (i1_0 <= (integer_of_int32(n_1) - 1))))) ->
         (integer_of_int32(select(intP_intM_a_4_1, shift(a_1,
         i1_0))) >= integer_of_int32(select(intP_intM_a_4_1, shift(a_1,
         i2_0)))))))) and
    (("JC_101": bubble_sorted(a_1, integer_of_int32(k_2_0),
     (integer_of_int32(n_1) - 1), intP_intM_a_4_1)) and
     (("JC_102":
      (forall j_1:int.
        (((j_1 >= 0) and (j_1 < integer_of_int32(i_0_0))) ->
         (integer_of_int32(select(intP_intM_a_4_1, shift(a_1,
         j_1))) <= integer_of_int32(select(intP_intM_a_4_1, shift(a_1,
         integer_of_int32(i_0_0)))))))) and
      ("JC_106":
      (("JC_103": (integer_of_int32(i_0_0) >= 0)) and
       (("JC_104": (integer_of_int32(i_0_0) < integer_of_int32(k_2_0))) and
        ("JC_105": (integer_of_int32(i_0_0) <= integer_of_int32(n_1))))))))) and
   ("JC_108": not_assigns(intP_a_4_alloc_table, intP_intM_a_4,
   intP_intM_a_4_1, pset_range(pset_singleton(a_1), 0,
   (integer_of_int32(n_1) - 1))))) ->
  forall result0:int32.
  (integer_of_int32(result0) = (integer_of_int32(k_2_0) - 1)) ->
  (integer_of_int32(i_0_0) < integer_of_int32(result0)) ->
  forall result1:int32.
  (result1 = select(intP_intM_a_4_1, shift(a_1, integer_of_int32(i_0_0)))) ->
  forall result2:int32.
  (result2 = select(intP_intM_a_4_1, shift(shift(a_1,
  integer_of_int32(i_0_0)), 1))) ->
  (integer_of_int32(result1) > integer_of_int32(result2)) ->
  ("JC_110": (integer_of_int32(n_1) >= 0)) ->
  ("JC_111":
  ((integer_of_int32(i_0_0) >= 0) and
   (integer_of_int32(i_0_0) <= (integer_of_int32(n_1) - 1)))) ->
  ("JC_112":
  (((integer_of_int32(i_0_0) + 1) >= 0) and
   ((integer_of_int32(i_0_0) + 1) <= (integer_of_int32(n_1) - 1)))) ->
  ("JC_113":
  ((offset_min(intP_a_4_alloc_table, a_1) <= 0) and
   (offset_max(intP_a_4_alloc_table, a_1) >= (integer_of_int32(n_1) - 1)))) ->
  forall result3:int32.
  (integer_of_int32(result3) = (integer_of_int32(i_0_0) + 1)) ->
  forall intP_intM_a_4_2:(intP,
  int32) memory.
  ("JC_34":
  (("JC_32":
   (("JC_29":
    (forall i1:int.
      (dom(i1, integer_of_int32(n_1)) ->
       (exists i2:int.
         (dom(i2, integer_of_int32(n_1)) and
          (integer_of_int32(select(intP_intM_a_4_1, shift(a_1,
          i1))) = integer_of_int32(select(intP_intM_a_4_2, shift(a_1, i2))))))))) and
    (("JC_30": swapped(a_1, integer_of_int32(i_0_0),
     integer_of_int32(result3), intP_intM_a_4_2, intP_intM_a_4_1)) and
     ("JC_31":
     (forall k_1:int.
       (((0 <= k_1) and
         ((k_1 < integer_of_int32(n_1)) and
          ((k_1 <> integer_of_int32(i_0_0)) and
           (k_1 <> integer_of_int32(result3))))) ->
        (integer_of_int32(select(intP_intM_a_4_2, shift(a_1,
        k_1))) = integer_of_int32(select(intP_intM_a_4_1, shift(a_1, k_1)))))))))) and
   ("JC_33": not_assigns(intP_a_4_alloc_table, intP_intM_a_4_1,
   intP_intM_a_4_2, pset_union(pset_range(pset_singleton(a_1),
   integer_of_int32(result3), integer_of_int32(result3)),
   pset_range(pset_singleton(a_1), integer_of_int32(i_0_0),
   integer_of_int32(i_0_0))))))) ->
  forall result4:int32.
  (integer_of_int32(result4) = (integer_of_int32(i_0_0) + 1)) ->
  forall i_0_1:int32.
  (i_0_1 = result4) ->
  ("JC_106": ("JC_104": (integer_of_int32(i_0_1) < integer_of_int32(k_2_0))))

goal bubble_ensures_default_po_25:
  forall a_1:intP pointer.
  forall n_1:int32.
  forall intP_a_4_alloc_table:intP alloc_table.
  forall intP_intM_a_4:(intP,
  int32) memory.
  ("JC_49":
  (("JC_46": (0 <= integer_of_int32(n_1))) and
   (("JC_47": (offset_min(intP_a_4_alloc_table, a_1) <= 0)) and
    ("JC_48": (offset_max(intP_a_4_alloc_table,
    a_1) >= (integer_of_int32(n_1) - 1)))))) ->
  forall k_2:int32.
  (k_2 = n_1) ->
  forall intP_intM_a_4_0:(intP,
  int32) memory.
  forall k_2_0:int32.
  ((("JC_91":
    (forall i2_1:int.
      (forall i1_2:int.
        (((i2_1 >= 0) and
          ((i2_1 < integer_of_int32(k_2_0)) and
           ((i1_2 >= integer_of_int32(k_2_0)) and
            (i1_2 < integer_of_int32(n_1))))) ->
         (integer_of_int32(select(intP_intM_a_4_0, shift(a_1,
         i1_2))) >= integer_of_int32(select(intP_intM_a_4_0, shift(a_1,
         i2_1)))))))) and
    (("JC_92":
     ((integer_of_int32(k_2_0) = integer_of_int32(n_1)) or
      (forall i1_1:int.
        (((i1_1 > integer_of_int32(k_2_0)) and (i1_1 < integer_of_int32(n_1))) ->
         (integer_of_int32(select(intP_intM_a_4_0, shift(a_1,
         integer_of_int32(k_2_0)))) <= integer_of_int32(select(intP_intM_a_4_0,
         shift(a_1, i1_1)))))))) and
     (("JC_93": bubble_sorted(a_1, integer_of_int32(k_2_0),
      (integer_of_int32(n_1) - 1), intP_intM_a_4_0)) and
      ("JC_96":
      (("JC_94": (integer_of_int32(k_2_0) >= 0)) and
       ("JC_95": (integer_of_int32(k_2_0) <= integer_of_int32(n_1)))))))) and
   ("JC_98": not_assigns(intP_a_4_alloc_table, intP_intM_a_4,
   intP_intM_a_4_0, pset_range(pset_singleton(a_1), 0,
   (integer_of_int32(n_1) - 1))))) ->
  (integer_of_int32(k_2_0) > 0) ->
  forall result:int32.
  (integer_of_int32(result) = 0) ->
  forall i_0:int32.
  (i_0 = result) ->
  forall i_0_0:int32.
  forall intP_intM_a_4_1:(intP,
  int32) memory.
  ((("JC_100":
    (forall i1_0:int.
      (forall i2_0:int.
        (((i2_0 >= 0) and
          ((i2_0 < integer_of_int32(k_2_0)) and
           ((i1_0 >= integer_of_int32(k_2_0)) and
            (i1_0 <= (integer_of_int32(n_1) - 1))))) ->
         (integer_of_int32(select(intP_intM_a_4_1, shift(a_1,
         i1_0))) >= integer_of_int32(select(intP_intM_a_4_1, shift(a_1,
         i2_0)))))))) and
    (("JC_101": bubble_sorted(a_1, integer_of_int32(k_2_0),
     (integer_of_int32(n_1) - 1), intP_intM_a_4_1)) and
     (("JC_102":
      (forall j_1:int.
        (((j_1 >= 0) and (j_1 < integer_of_int32(i_0_0))) ->
         (integer_of_int32(select(intP_intM_a_4_1, shift(a_1,
         j_1))) <= integer_of_int32(select(intP_intM_a_4_1, shift(a_1,
         integer_of_int32(i_0_0)))))))) and
      ("JC_106":
      (("JC_103": (integer_of_int32(i_0_0) >= 0)) and
       (("JC_104": (integer_of_int32(i_0_0) < integer_of_int32(k_2_0))) and
        ("JC_105": (integer_of_int32(i_0_0) <= integer_of_int32(n_1))))))))) and
   ("JC_108": not_assigns(intP_a_4_alloc_table, intP_intM_a_4,
   intP_intM_a_4_1, pset_range(pset_singleton(a_1), 0,
   (integer_of_int32(n_1) - 1))))) ->
  forall result0:int32.
  (integer_of_int32(result0) = (integer_of_int32(k_2_0) - 1)) ->
  (integer_of_int32(i_0_0) < integer_of_int32(result0)) ->
  forall result1:int32.
  (result1 = select(intP_intM_a_4_1, shift(a_1, integer_of_int32(i_0_0)))) ->
  forall result2:int32.
  (result2 = select(intP_intM_a_4_1, shift(shift(a_1,
  integer_of_int32(i_0_0)), 1))) ->
  (integer_of_int32(result1) > integer_of_int32(result2)) ->
  ("JC_110": (integer_of_int32(n_1) >= 0)) ->
  ("JC_111":
  ((integer_of_int32(i_0_0) >= 0) and
   (integer_of_int32(i_0_0) <= (integer_of_int32(n_1) - 1)))) ->
  ("JC_112":
  (((integer_of_int32(i_0_0) + 1) >= 0) and
   ((integer_of_int32(i_0_0) + 1) <= (integer_of_int32(n_1) - 1)))) ->
  ("JC_113":
  ((offset_min(intP_a_4_alloc_table, a_1) <= 0) and
   (offset_max(intP_a_4_alloc_table, a_1) >= (integer_of_int32(n_1) - 1)))) ->
  forall result3:int32.
  (integer_of_int32(result3) = (integer_of_int32(i_0_0) + 1)) ->
  forall intP_intM_a_4_2:(intP,
  int32) memory.
  ("JC_34":
  (("JC_32":
   (("JC_29":
    (forall i1:int.
      (dom(i1, integer_of_int32(n_1)) ->
       (exists i2:int.
         (dom(i2, integer_of_int32(n_1)) and
          (integer_of_int32(select(intP_intM_a_4_1, shift(a_1,
          i1))) = integer_of_int32(select(intP_intM_a_4_2, shift(a_1, i2))))))))) and
    (("JC_30": swapped(a_1, integer_of_int32(i_0_0),
     integer_of_int32(result3), intP_intM_a_4_2, intP_intM_a_4_1)) and
     ("JC_31":
     (forall k_1:int.
       (((0 <= k_1) and
         ((k_1 < integer_of_int32(n_1)) and
          ((k_1 <> integer_of_int32(i_0_0)) and
           (k_1 <> integer_of_int32(result3))))) ->
        (integer_of_int32(select(intP_intM_a_4_2, shift(a_1,
        k_1))) = integer_of_int32(select(intP_intM_a_4_1, shift(a_1, k_1)))))))))) and
   ("JC_33": not_assigns(intP_a_4_alloc_table, intP_intM_a_4_1,
   intP_intM_a_4_2, pset_union(pset_range(pset_singleton(a_1),
   integer_of_int32(result3), integer_of_int32(result3)),
   pset_range(pset_singleton(a_1), integer_of_int32(i_0_0),
   integer_of_int32(i_0_0))))))) ->
  forall result4:int32.
  (integer_of_int32(result4) = (integer_of_int32(i_0_0) + 1)) ->
  forall i_0_1:int32.
  (i_0_1 = result4) ->
  ("JC_106": ("JC_105": (integer_of_int32(i_0_1) <= integer_of_int32(n_1))))

goal bubble_ensures_default_po_26:
  forall a_1:intP pointer.
  forall n_1:int32.
  forall intP_a_4_alloc_table:intP alloc_table.
  forall intP_intM_a_4:(intP,
  int32) memory.
  ("JC_49":
  (("JC_46": (0 <= integer_of_int32(n_1))) and
   (("JC_47": (offset_min(intP_a_4_alloc_table, a_1) <= 0)) and
    ("JC_48": (offset_max(intP_a_4_alloc_table,
    a_1) >= (integer_of_int32(n_1) - 1)))))) ->
  forall k_2:int32.
  (k_2 = n_1) ->
  forall intP_intM_a_4_0:(intP,
  int32) memory.
  forall k_2_0:int32.
  ((("JC_91":
    (forall i2_1:int.
      (forall i1_2:int.
        (((i2_1 >= 0) and
          ((i2_1 < integer_of_int32(k_2_0)) and
           ((i1_2 >= integer_of_int32(k_2_0)) and
            (i1_2 < integer_of_int32(n_1))))) ->
         (integer_of_int32(select(intP_intM_a_4_0, shift(a_1,
         i1_2))) >= integer_of_int32(select(intP_intM_a_4_0, shift(a_1,
         i2_1)))))))) and
    (("JC_92":
     ((integer_of_int32(k_2_0) = integer_of_int32(n_1)) or
      (forall i1_1:int.
        (((i1_1 > integer_of_int32(k_2_0)) and (i1_1 < integer_of_int32(n_1))) ->
         (integer_of_int32(select(intP_intM_a_4_0, shift(a_1,
         integer_of_int32(k_2_0)))) <= integer_of_int32(select(intP_intM_a_4_0,
         shift(a_1, i1_1)))))))) and
     (("JC_93": bubble_sorted(a_1, integer_of_int32(k_2_0),
      (integer_of_int32(n_1) - 1), intP_intM_a_4_0)) and
      ("JC_96":
      (("JC_94": (integer_of_int32(k_2_0) >= 0)) and
       ("JC_95": (integer_of_int32(k_2_0) <= integer_of_int32(n_1)))))))) and
   ("JC_98": not_assigns(intP_a_4_alloc_table, intP_intM_a_4,
   intP_intM_a_4_0, pset_range(pset_singleton(a_1), 0,
   (integer_of_int32(n_1) - 1))))) ->
  (integer_of_int32(k_2_0) > 0) ->
  forall result:int32.
  (integer_of_int32(result) = 0) ->
  forall i_0:int32.
  (i_0 = result) ->
  forall i_0_0:int32.
  forall intP_intM_a_4_1:(intP,
  int32) memory.
  ((("JC_100":
    (forall i1_0:int.
      (forall i2_0:int.
        (((i2_0 >= 0) and
          ((i2_0 < integer_of_int32(k_2_0)) and
           ((i1_0 >= integer_of_int32(k_2_0)) and
            (i1_0 <= (integer_of_int32(n_1) - 1))))) ->
         (integer_of_int32(select(intP_intM_a_4_1, shift(a_1,
         i1_0))) >= integer_of_int32(select(intP_intM_a_4_1, shift(a_1,
         i2_0)))))))) and
    (("JC_101": bubble_sorted(a_1, integer_of_int32(k_2_0),
     (integer_of_int32(n_1) - 1), intP_intM_a_4_1)) and
     (("JC_102":
      (forall j_1:int.
        (((j_1 >= 0) and (j_1 < integer_of_int32(i_0_0))) ->
         (integer_of_int32(select(intP_intM_a_4_1, shift(a_1,
         j_1))) <= integer_of_int32(select(intP_intM_a_4_1, shift(a_1,
         integer_of_int32(i_0_0)))))))) and
      ("JC_106":
      (("JC_103": (integer_of_int32(i_0_0) >= 0)) and
       (("JC_104": (integer_of_int32(i_0_0) < integer_of_int32(k_2_0))) and
        ("JC_105": (integer_of_int32(i_0_0) <= integer_of_int32(n_1))))))))) and
   ("JC_108": not_assigns(intP_a_4_alloc_table, intP_intM_a_4,
   intP_intM_a_4_1, pset_range(pset_singleton(a_1), 0,
   (integer_of_int32(n_1) - 1))))) ->
  forall result0:int32.
  (integer_of_int32(result0) = (integer_of_int32(k_2_0) - 1)) ->
  (integer_of_int32(i_0_0) < integer_of_int32(result0)) ->
  forall result1:int32.
  (result1 = select(intP_intM_a_4_1, shift(a_1, integer_of_int32(i_0_0)))) ->
  forall result2:int32.
  (result2 = select(intP_intM_a_4_1, shift(shift(a_1,
  integer_of_int32(i_0_0)), 1))) ->
  (integer_of_int32(result1) > integer_of_int32(result2)) ->
  ("JC_110": (integer_of_int32(n_1) >= 0)) ->
  ("JC_111":
  ((integer_of_int32(i_0_0) >= 0) and
   (integer_of_int32(i_0_0) <= (integer_of_int32(n_1) - 1)))) ->
  ("JC_112":
  (((integer_of_int32(i_0_0) + 1) >= 0) and
   ((integer_of_int32(i_0_0) + 1) <= (integer_of_int32(n_1) - 1)))) ->
  ("JC_113":
  ((offset_min(intP_a_4_alloc_table, a_1) <= 0) and
   (offset_max(intP_a_4_alloc_table, a_1) >= (integer_of_int32(n_1) - 1)))) ->
  forall result3:int32.
  (integer_of_int32(result3) = (integer_of_int32(i_0_0) + 1)) ->
  forall intP_intM_a_4_2:(intP,
  int32) memory.
  ("JC_34":
  (("JC_32":
   (("JC_29":
    (forall i1:int.
      (dom(i1, integer_of_int32(n_1)) ->
       (exists i2:int.
         (dom(i2, integer_of_int32(n_1)) and
          (integer_of_int32(select(intP_intM_a_4_1, shift(a_1,
          i1))) = integer_of_int32(select(intP_intM_a_4_2, shift(a_1, i2))))))))) and
    (("JC_30": swapped(a_1, integer_of_int32(i_0_0),
     integer_of_int32(result3), intP_intM_a_4_2, intP_intM_a_4_1)) and
     ("JC_31":
     (forall k_1:int.
       (((0 <= k_1) and
         ((k_1 < integer_of_int32(n_1)) and
          ((k_1 <> integer_of_int32(i_0_0)) and
           (k_1 <> integer_of_int32(result3))))) ->
        (integer_of_int32(select(intP_intM_a_4_2, shift(a_1,
        k_1))) = integer_of_int32(select(intP_intM_a_4_1, shift(a_1, k_1)))))))))) and
   ("JC_33": not_assigns(intP_a_4_alloc_table, intP_intM_a_4_1,
   intP_intM_a_4_2, pset_union(pset_range(pset_singleton(a_1),
   integer_of_int32(result3), integer_of_int32(result3)),
   pset_range(pset_singleton(a_1), integer_of_int32(i_0_0),
   integer_of_int32(i_0_0))))))) ->
  forall result4:int32.
  (integer_of_int32(result4) = (integer_of_int32(i_0_0) + 1)) ->
  forall i_0_1:int32.
  (i_0_1 = result4) ->
  ("JC_108": not_assigns(intP_a_4_alloc_table, intP_intM_a_4,
  intP_intM_a_4_2, pset_range(pset_singleton(a_1), 0,
  (integer_of_int32(n_1) - 1))))

goal bubble_ensures_default_po_27:
  forall a_1:intP pointer.
  forall n_1:int32.
  forall intP_a_4_alloc_table:intP alloc_table.
  forall intP_intM_a_4:(intP,
  int32) memory.
  ("JC_49":
  (("JC_46": (0 <= integer_of_int32(n_1))) and
   (("JC_47": (offset_min(intP_a_4_alloc_table, a_1) <= 0)) and
    ("JC_48": (offset_max(intP_a_4_alloc_table,
    a_1) >= (integer_of_int32(n_1) - 1)))))) ->
  forall k_2:int32.
  (k_2 = n_1) ->
  forall intP_intM_a_4_0:(intP,
  int32) memory.
  forall k_2_0:int32.
  ((("JC_91":
    (forall i2_1:int.
      (forall i1_2:int.
        (((i2_1 >= 0) and
          ((i2_1 < integer_of_int32(k_2_0)) and
           ((i1_2 >= integer_of_int32(k_2_0)) and
            (i1_2 < integer_of_int32(n_1))))) ->
         (integer_of_int32(select(intP_intM_a_4_0, shift(a_1,
         i1_2))) >= integer_of_int32(select(intP_intM_a_4_0, shift(a_1,
         i2_1)))))))) and
    (("JC_92":
     ((integer_of_int32(k_2_0) = integer_of_int32(n_1)) or
      (forall i1_1:int.
        (((i1_1 > integer_of_int32(k_2_0)) and (i1_1 < integer_of_int32(n_1))) ->
         (integer_of_int32(select(intP_intM_a_4_0, shift(a_1,
         integer_of_int32(k_2_0)))) <= integer_of_int32(select(intP_intM_a_4_0,
         shift(a_1, i1_1)))))))) and
     (("JC_93": bubble_sorted(a_1, integer_of_int32(k_2_0),
      (integer_of_int32(n_1) - 1), intP_intM_a_4_0)) and
      ("JC_96":
      (("JC_94": (integer_of_int32(k_2_0) >= 0)) and
       ("JC_95": (integer_of_int32(k_2_0) <= integer_of_int32(n_1)))))))) and
   ("JC_98": not_assigns(intP_a_4_alloc_table, intP_intM_a_4,
   intP_intM_a_4_0, pset_range(pset_singleton(a_1), 0,
   (integer_of_int32(n_1) - 1))))) ->
  (integer_of_int32(k_2_0) > 0) ->
  forall result:int32.
  (integer_of_int32(result) = 0) ->
  forall i_0:int32.
  (i_0 = result) ->
  forall i_0_0:int32.
  forall intP_intM_a_4_1:(intP,
  int32) memory.
  ((("JC_100":
    (forall i1_0:int.
      (forall i2_0:int.
        (((i2_0 >= 0) and
          ((i2_0 < integer_of_int32(k_2_0)) and
           ((i1_0 >= integer_of_int32(k_2_0)) and
            (i1_0 <= (integer_of_int32(n_1) - 1))))) ->
         (integer_of_int32(select(intP_intM_a_4_1, shift(a_1,
         i1_0))) >= integer_of_int32(select(intP_intM_a_4_1, shift(a_1,
         i2_0)))))))) and
    (("JC_101": bubble_sorted(a_1, integer_of_int32(k_2_0),
     (integer_of_int32(n_1) - 1), intP_intM_a_4_1)) and
     (("JC_102":
      (forall j_1:int.
        (((j_1 >= 0) and (j_1 < integer_of_int32(i_0_0))) ->
         (integer_of_int32(select(intP_intM_a_4_1, shift(a_1,
         j_1))) <= integer_of_int32(select(intP_intM_a_4_1, shift(a_1,
         integer_of_int32(i_0_0)))))))) and
      ("JC_106":
      (("JC_103": (integer_of_int32(i_0_0) >= 0)) and
       (("JC_104": (integer_of_int32(i_0_0) < integer_of_int32(k_2_0))) and
        ("JC_105": (integer_of_int32(i_0_0) <= integer_of_int32(n_1))))))))) and
   ("JC_108": not_assigns(intP_a_4_alloc_table, intP_intM_a_4,
   intP_intM_a_4_1, pset_range(pset_singleton(a_1), 0,
   (integer_of_int32(n_1) - 1))))) ->
  forall result0:int32.
  (integer_of_int32(result0) = (integer_of_int32(k_2_0) - 1)) ->
  (integer_of_int32(i_0_0) < integer_of_int32(result0)) ->
  forall result1:int32.
  (result1 = select(intP_intM_a_4_1, shift(a_1, integer_of_int32(i_0_0)))) ->
  forall result2:int32.
  (result2 = select(intP_intM_a_4_1, shift(shift(a_1,
  integer_of_int32(i_0_0)), 1))) ->
  (integer_of_int32(result1) <= integer_of_int32(result2)) ->
  forall result3:int32.
  (integer_of_int32(result3) = (integer_of_int32(i_0_0) + 1)) ->
  forall i_0_1:int32.
  (i_0_1 = result3) ->
  forall i1_0:int.
  forall i2_0:int.
  ((i2_0 >= 0) and
   ((i2_0 < integer_of_int32(k_2_0)) and
    ((i1_0 >= integer_of_int32(k_2_0)) and
     (i1_0 <= (integer_of_int32(n_1) - 1))))) ->
  ("JC_100": (integer_of_int32(select(intP_intM_a_4_1, shift(a_1,
  i1_0))) >= integer_of_int32(select(intP_intM_a_4_1, shift(a_1, i2_0)))))

goal bubble_ensures_default_po_28:
  forall a_1:intP pointer.
  forall n_1:int32.
  forall intP_a_4_alloc_table:intP alloc_table.
  forall intP_intM_a_4:(intP,
  int32) memory.
  ("JC_49":
  (("JC_46": (0 <= integer_of_int32(n_1))) and
   (("JC_47": (offset_min(intP_a_4_alloc_table, a_1) <= 0)) and
    ("JC_48": (offset_max(intP_a_4_alloc_table,
    a_1) >= (integer_of_int32(n_1) - 1)))))) ->
  forall k_2:int32.
  (k_2 = n_1) ->
  forall intP_intM_a_4_0:(intP,
  int32) memory.
  forall k_2_0:int32.
  ((("JC_91":
    (forall i2_1:int.
      (forall i1_2:int.
        (((i2_1 >= 0) and
          ((i2_1 < integer_of_int32(k_2_0)) and
           ((i1_2 >= integer_of_int32(k_2_0)) and
            (i1_2 < integer_of_int32(n_1))))) ->
         (integer_of_int32(select(intP_intM_a_4_0, shift(a_1,
         i1_2))) >= integer_of_int32(select(intP_intM_a_4_0, shift(a_1,
         i2_1)))))))) and
    (("JC_92":
     ((integer_of_int32(k_2_0) = integer_of_int32(n_1)) or
      (forall i1_1:int.
        (((i1_1 > integer_of_int32(k_2_0)) and (i1_1 < integer_of_int32(n_1))) ->
         (integer_of_int32(select(intP_intM_a_4_0, shift(a_1,
         integer_of_int32(k_2_0)))) <= integer_of_int32(select(intP_intM_a_4_0,
         shift(a_1, i1_1)))))))) and
     (("JC_93": bubble_sorted(a_1, integer_of_int32(k_2_0),
      (integer_of_int32(n_1) - 1), intP_intM_a_4_0)) and
      ("JC_96":
      (("JC_94": (integer_of_int32(k_2_0) >= 0)) and
       ("JC_95": (integer_of_int32(k_2_0) <= integer_of_int32(n_1)))))))) and
   ("JC_98": not_assigns(intP_a_4_alloc_table, intP_intM_a_4,
   intP_intM_a_4_0, pset_range(pset_singleton(a_1), 0,
   (integer_of_int32(n_1) - 1))))) ->
  (integer_of_int32(k_2_0) > 0) ->
  forall result:int32.
  (integer_of_int32(result) = 0) ->
  forall i_0:int32.
  (i_0 = result) ->
  forall i_0_0:int32.
  forall intP_intM_a_4_1:(intP,
  int32) memory.
  ((("JC_100":
    (forall i1_0:int.
      (forall i2_0:int.
        (((i2_0 >= 0) and
          ((i2_0 < integer_of_int32(k_2_0)) and
           ((i1_0 >= integer_of_int32(k_2_0)) and
            (i1_0 <= (integer_of_int32(n_1) - 1))))) ->
         (integer_of_int32(select(intP_intM_a_4_1, shift(a_1,
         i1_0))) >= integer_of_int32(select(intP_intM_a_4_1, shift(a_1,
         i2_0)))))))) and
    (("JC_101": bubble_sorted(a_1, integer_of_int32(k_2_0),
     (integer_of_int32(n_1) - 1), intP_intM_a_4_1)) and
     (("JC_102":
      (forall j_1:int.
        (((j_1 >= 0) and (j_1 < integer_of_int32(i_0_0))) ->
         (integer_of_int32(select(intP_intM_a_4_1, shift(a_1,
         j_1))) <= integer_of_int32(select(intP_intM_a_4_1, shift(a_1,
         integer_of_int32(i_0_0)))))))) and
      ("JC_106":
      (("JC_103": (integer_of_int32(i_0_0) >= 0)) and
       (("JC_104": (integer_of_int32(i_0_0) < integer_of_int32(k_2_0))) and
        ("JC_105": (integer_of_int32(i_0_0) <= integer_of_int32(n_1))))))))) and
   ("JC_108": not_assigns(intP_a_4_alloc_table, intP_intM_a_4,
   intP_intM_a_4_1, pset_range(pset_singleton(a_1), 0,
   (integer_of_int32(n_1) - 1))))) ->
  forall result0:int32.
  (integer_of_int32(result0) = (integer_of_int32(k_2_0) - 1)) ->
  (integer_of_int32(i_0_0) < integer_of_int32(result0)) ->
  forall result1:int32.
  (result1 = select(intP_intM_a_4_1, shift(a_1, integer_of_int32(i_0_0)))) ->
  forall result2:int32.
  (result2 = select(intP_intM_a_4_1, shift(shift(a_1,
  integer_of_int32(i_0_0)), 1))) ->
  (integer_of_int32(result1) <= integer_of_int32(result2)) ->
  forall result3:int32.
  (integer_of_int32(result3) = (integer_of_int32(i_0_0) + 1)) ->
  forall i_0_1:int32.
  (i_0_1 = result3) ->
  ("JC_101": bubble_sorted(a_1, integer_of_int32(k_2_0),
  (integer_of_int32(n_1) - 1), intP_intM_a_4_1))

goal bubble_ensures_default_po_29:
  forall a_1:intP pointer.
  forall n_1:int32.
  forall intP_a_4_alloc_table:intP alloc_table.
  forall intP_intM_a_4:(intP,
  int32) memory.
  ("JC_49":
  (("JC_46": (0 <= integer_of_int32(n_1))) and
   (("JC_47": (offset_min(intP_a_4_alloc_table, a_1) <= 0)) and
    ("JC_48": (offset_max(intP_a_4_alloc_table,
    a_1) >= (integer_of_int32(n_1) - 1)))))) ->
  forall k_2:int32.
  (k_2 = n_1) ->
  forall intP_intM_a_4_0:(intP,
  int32) memory.
  forall k_2_0:int32.
  ((("JC_91":
    (forall i2_1:int.
      (forall i1_2:int.
        (((i2_1 >= 0) and
          ((i2_1 < integer_of_int32(k_2_0)) and
           ((i1_2 >= integer_of_int32(k_2_0)) and
            (i1_2 < integer_of_int32(n_1))))) ->
         (integer_of_int32(select(intP_intM_a_4_0, shift(a_1,
         i1_2))) >= integer_of_int32(select(intP_intM_a_4_0, shift(a_1,
         i2_1)))))))) and
    (("JC_92":
     ((integer_of_int32(k_2_0) = integer_of_int32(n_1)) or
      (forall i1_1:int.
        (((i1_1 > integer_of_int32(k_2_0)) and (i1_1 < integer_of_int32(n_1))) ->
         (integer_of_int32(select(intP_intM_a_4_0, shift(a_1,
         integer_of_int32(k_2_0)))) <= integer_of_int32(select(intP_intM_a_4_0,
         shift(a_1, i1_1)))))))) and
     (("JC_93": bubble_sorted(a_1, integer_of_int32(k_2_0),
      (integer_of_int32(n_1) - 1), intP_intM_a_4_0)) and
      ("JC_96":
      (("JC_94": (integer_of_int32(k_2_0) >= 0)) and
       ("JC_95": (integer_of_int32(k_2_0) <= integer_of_int32(n_1)))))))) and
   ("JC_98": not_assigns(intP_a_4_alloc_table, intP_intM_a_4,
   intP_intM_a_4_0, pset_range(pset_singleton(a_1), 0,
   (integer_of_int32(n_1) - 1))))) ->
  (integer_of_int32(k_2_0) > 0) ->
  forall result:int32.
  (integer_of_int32(result) = 0) ->
  forall i_0:int32.
  (i_0 = result) ->
  forall i_0_0:int32.
  forall intP_intM_a_4_1:(intP,
  int32) memory.
  ((("JC_100":
    (forall i1_0:int.
      (forall i2_0:int.
        (((i2_0 >= 0) and
          ((i2_0 < integer_of_int32(k_2_0)) and
           ((i1_0 >= integer_of_int32(k_2_0)) and
            (i1_0 <= (integer_of_int32(n_1) - 1))))) ->
         (integer_of_int32(select(intP_intM_a_4_1, shift(a_1,
         i1_0))) >= integer_of_int32(select(intP_intM_a_4_1, shift(a_1,
         i2_0)))))))) and
    (("JC_101": bubble_sorted(a_1, integer_of_int32(k_2_0),
     (integer_of_int32(n_1) - 1), intP_intM_a_4_1)) and
     (("JC_102":
      (forall j_1:int.
        (((j_1 >= 0) and (j_1 < integer_of_int32(i_0_0))) ->
         (integer_of_int32(select(intP_intM_a_4_1, shift(a_1,
         j_1))) <= integer_of_int32(select(intP_intM_a_4_1, shift(a_1,
         integer_of_int32(i_0_0)))))))) and
      ("JC_106":
      (("JC_103": (integer_of_int32(i_0_0) >= 0)) and
       (("JC_104": (integer_of_int32(i_0_0) < integer_of_int32(k_2_0))) and
        ("JC_105": (integer_of_int32(i_0_0) <= integer_of_int32(n_1))))))))) and
   ("JC_108": not_assigns(intP_a_4_alloc_table, intP_intM_a_4,
   intP_intM_a_4_1, pset_range(pset_singleton(a_1), 0,
   (integer_of_int32(n_1) - 1))))) ->
  forall result0:int32.
  (integer_of_int32(result0) = (integer_of_int32(k_2_0) - 1)) ->
  (integer_of_int32(i_0_0) < integer_of_int32(result0)) ->
  forall result1:int32.
  (result1 = select(intP_intM_a_4_1, shift(a_1, integer_of_int32(i_0_0)))) ->
  forall result2:int32.
  (result2 = select(intP_intM_a_4_1, shift(shift(a_1,
  integer_of_int32(i_0_0)), 1))) ->
  (integer_of_int32(result1) <= integer_of_int32(result2)) ->
  forall result3:int32.
  (integer_of_int32(result3) = (integer_of_int32(i_0_0) + 1)) ->
  forall i_0_1:int32.
  (i_0_1 = result3) ->
  forall j_1:int.
  ((j_1 >= 0) and (j_1 < integer_of_int32(i_0_1))) ->
  ("JC_102": (integer_of_int32(select(intP_intM_a_4_1, shift(a_1,
  j_1))) <= integer_of_int32(select(intP_intM_a_4_1, shift(a_1,
  integer_of_int32(i_0_1))))))

goal bubble_ensures_default_po_30:
  forall a_1:intP pointer.
  forall n_1:int32.
  forall intP_a_4_alloc_table:intP alloc_table.
  forall intP_intM_a_4:(intP,
  int32) memory.
  ("JC_49":
  (("JC_46": (0 <= integer_of_int32(n_1))) and
   (("JC_47": (offset_min(intP_a_4_alloc_table, a_1) <= 0)) and
    ("JC_48": (offset_max(intP_a_4_alloc_table,
    a_1) >= (integer_of_int32(n_1) - 1)))))) ->
  forall k_2:int32.
  (k_2 = n_1) ->
  forall intP_intM_a_4_0:(intP,
  int32) memory.
  forall k_2_0:int32.
  ((("JC_91":
    (forall i2_1:int.
      (forall i1_2:int.
        (((i2_1 >= 0) and
          ((i2_1 < integer_of_int32(k_2_0)) and
           ((i1_2 >= integer_of_int32(k_2_0)) and
            (i1_2 < integer_of_int32(n_1))))) ->
         (integer_of_int32(select(intP_intM_a_4_0, shift(a_1,
         i1_2))) >= integer_of_int32(select(intP_intM_a_4_0, shift(a_1,
         i2_1)))))))) and
    (("JC_92":
     ((integer_of_int32(k_2_0) = integer_of_int32(n_1)) or
      (forall i1_1:int.
        (((i1_1 > integer_of_int32(k_2_0)) and (i1_1 < integer_of_int32(n_1))) ->
         (integer_of_int32(select(intP_intM_a_4_0, shift(a_1,
         integer_of_int32(k_2_0)))) <= integer_of_int32(select(intP_intM_a_4_0,
         shift(a_1, i1_1)))))))) and
     (("JC_93": bubble_sorted(a_1, integer_of_int32(k_2_0),
      (integer_of_int32(n_1) - 1), intP_intM_a_4_0)) and
      ("JC_96":
      (("JC_94": (integer_of_int32(k_2_0) >= 0)) and
       ("JC_95": (integer_of_int32(k_2_0) <= integer_of_int32(n_1)))))))) and
   ("JC_98": not_assigns(intP_a_4_alloc_table, intP_intM_a_4,
   intP_intM_a_4_0, pset_range(pset_singleton(a_1), 0,
   (integer_of_int32(n_1) - 1))))) ->
  (integer_of_int32(k_2_0) > 0) ->
  forall result:int32.
  (integer_of_int32(result) = 0) ->
  forall i_0:int32.
  (i_0 = result) ->
  forall i_0_0:int32.
  forall intP_intM_a_4_1:(intP,
  int32) memory.
  ((("JC_100":
    (forall i1_0:int.
      (forall i2_0:int.
        (((i2_0 >= 0) and
          ((i2_0 < integer_of_int32(k_2_0)) and
           ((i1_0 >= integer_of_int32(k_2_0)) and
            (i1_0 <= (integer_of_int32(n_1) - 1))))) ->
         (integer_of_int32(select(intP_intM_a_4_1, shift(a_1,
         i1_0))) >= integer_of_int32(select(intP_intM_a_4_1, shift(a_1,
         i2_0)))))))) and
    (("JC_101": bubble_sorted(a_1, integer_of_int32(k_2_0),
     (integer_of_int32(n_1) - 1), intP_intM_a_4_1)) and
     (("JC_102":
      (forall j_1:int.
        (((j_1 >= 0) and (j_1 < integer_of_int32(i_0_0))) ->
         (integer_of_int32(select(intP_intM_a_4_1, shift(a_1,
         j_1))) <= integer_of_int32(select(intP_intM_a_4_1, shift(a_1,
         integer_of_int32(i_0_0)))))))) and
      ("JC_106":
      (("JC_103": (integer_of_int32(i_0_0) >= 0)) and
       (("JC_104": (integer_of_int32(i_0_0) < integer_of_int32(k_2_0))) and
        ("JC_105": (integer_of_int32(i_0_0) <= integer_of_int32(n_1))))))))) and
   ("JC_108": not_assigns(intP_a_4_alloc_table, intP_intM_a_4,
   intP_intM_a_4_1, pset_range(pset_singleton(a_1), 0,
   (integer_of_int32(n_1) - 1))))) ->
  forall result0:int32.
  (integer_of_int32(result0) = (integer_of_int32(k_2_0) - 1)) ->
  (integer_of_int32(i_0_0) < integer_of_int32(result0)) ->
  forall result1:int32.
  (result1 = select(intP_intM_a_4_1, shift(a_1, integer_of_int32(i_0_0)))) ->
  forall result2:int32.
  (result2 = select(intP_intM_a_4_1, shift(shift(a_1,
  integer_of_int32(i_0_0)), 1))) ->
  (integer_of_int32(result1) <= integer_of_int32(result2)) ->
  forall result3:int32.
  (integer_of_int32(result3) = (integer_of_int32(i_0_0) + 1)) ->
  forall i_0_1:int32.
  (i_0_1 = result3) ->
  ("JC_106": ("JC_103": (integer_of_int32(i_0_1) >= 0)))

goal bubble_ensures_default_po_31:
  forall a_1:intP pointer.
  forall n_1:int32.
  forall intP_a_4_alloc_table:intP alloc_table.
  forall intP_intM_a_4:(intP,
  int32) memory.
  ("JC_49":
  (("JC_46": (0 <= integer_of_int32(n_1))) and
   (("JC_47": (offset_min(intP_a_4_alloc_table, a_1) <= 0)) and
    ("JC_48": (offset_max(intP_a_4_alloc_table,
    a_1) >= (integer_of_int32(n_1) - 1)))))) ->
  forall k_2:int32.
  (k_2 = n_1) ->
  forall intP_intM_a_4_0:(intP,
  int32) memory.
  forall k_2_0:int32.
  ((("JC_91":
    (forall i2_1:int.
      (forall i1_2:int.
        (((i2_1 >= 0) and
          ((i2_1 < integer_of_int32(k_2_0)) and
           ((i1_2 >= integer_of_int32(k_2_0)) and
            (i1_2 < integer_of_int32(n_1))))) ->
         (integer_of_int32(select(intP_intM_a_4_0, shift(a_1,
         i1_2))) >= integer_of_int32(select(intP_intM_a_4_0, shift(a_1,
         i2_1)))))))) and
    (("JC_92":
     ((integer_of_int32(k_2_0) = integer_of_int32(n_1)) or
      (forall i1_1:int.
        (((i1_1 > integer_of_int32(k_2_0)) and (i1_1 < integer_of_int32(n_1))) ->
         (integer_of_int32(select(intP_intM_a_4_0, shift(a_1,
         integer_of_int32(k_2_0)))) <= integer_of_int32(select(intP_intM_a_4_0,
         shift(a_1, i1_1)))))))) and
     (("JC_93": bubble_sorted(a_1, integer_of_int32(k_2_0),
      (integer_of_int32(n_1) - 1), intP_intM_a_4_0)) and
      ("JC_96":
      (("JC_94": (integer_of_int32(k_2_0) >= 0)) and
       ("JC_95": (integer_of_int32(k_2_0) <= integer_of_int32(n_1)))))))) and
   ("JC_98": not_assigns(intP_a_4_alloc_table, intP_intM_a_4,
   intP_intM_a_4_0, pset_range(pset_singleton(a_1), 0,
   (integer_of_int32(n_1) - 1))))) ->
  (integer_of_int32(k_2_0) > 0) ->
  forall result:int32.
  (integer_of_int32(result) = 0) ->
  forall i_0:int32.
  (i_0 = result) ->
  forall i_0_0:int32.
  forall intP_intM_a_4_1:(intP,
  int32) memory.
  ((("JC_100":
    (forall i1_0:int.
      (forall i2_0:int.
        (((i2_0 >= 0) and
          ((i2_0 < integer_of_int32(k_2_0)) and
           ((i1_0 >= integer_of_int32(k_2_0)) and
            (i1_0 <= (integer_of_int32(n_1) - 1))))) ->
         (integer_of_int32(select(intP_intM_a_4_1, shift(a_1,
         i1_0))) >= integer_of_int32(select(intP_intM_a_4_1, shift(a_1,
         i2_0)))))))) and
    (("JC_101": bubble_sorted(a_1, integer_of_int32(k_2_0),
     (integer_of_int32(n_1) - 1), intP_intM_a_4_1)) and
     (("JC_102":
      (forall j_1:int.
        (((j_1 >= 0) and (j_1 < integer_of_int32(i_0_0))) ->
         (integer_of_int32(select(intP_intM_a_4_1, shift(a_1,
         j_1))) <= integer_of_int32(select(intP_intM_a_4_1, shift(a_1,
         integer_of_int32(i_0_0)))))))) and
      ("JC_106":
      (("JC_103": (integer_of_int32(i_0_0) >= 0)) and
       (("JC_104": (integer_of_int32(i_0_0) < integer_of_int32(k_2_0))) and
        ("JC_105": (integer_of_int32(i_0_0) <= integer_of_int32(n_1))))))))) and
   ("JC_108": not_assigns(intP_a_4_alloc_table, intP_intM_a_4,
   intP_intM_a_4_1, pset_range(pset_singleton(a_1), 0,
   (integer_of_int32(n_1) - 1))))) ->
  forall result0:int32.
  (integer_of_int32(result0) = (integer_of_int32(k_2_0) - 1)) ->
  (integer_of_int32(i_0_0) < integer_of_int32(result0)) ->
  forall result1:int32.
  (result1 = select(intP_intM_a_4_1, shift(a_1, integer_of_int32(i_0_0)))) ->
  forall result2:int32.
  (result2 = select(intP_intM_a_4_1, shift(shift(a_1,
  integer_of_int32(i_0_0)), 1))) ->
  (integer_of_int32(result1) <= integer_of_int32(result2)) ->
  forall result3:int32.
  (integer_of_int32(result3) = (integer_of_int32(i_0_0) + 1)) ->
  forall i_0_1:int32.
  (i_0_1 = result3) ->
  ("JC_106": ("JC_104": (integer_of_int32(i_0_1) < integer_of_int32(k_2_0))))

goal bubble_ensures_default_po_32:
  forall a_1:intP pointer.
  forall n_1:int32.
  forall intP_a_4_alloc_table:intP alloc_table.
  forall intP_intM_a_4:(intP,
  int32) memory.
  ("JC_49":
  (("JC_46": (0 <= integer_of_int32(n_1))) and
   (("JC_47": (offset_min(intP_a_4_alloc_table, a_1) <= 0)) and
    ("JC_48": (offset_max(intP_a_4_alloc_table,
    a_1) >= (integer_of_int32(n_1) - 1)))))) ->
  forall k_2:int32.
  (k_2 = n_1) ->
  forall intP_intM_a_4_0:(intP,
  int32) memory.
  forall k_2_0:int32.
  ((("JC_91":
    (forall i2_1:int.
      (forall i1_2:int.
        (((i2_1 >= 0) and
          ((i2_1 < integer_of_int32(k_2_0)) and
           ((i1_2 >= integer_of_int32(k_2_0)) and
            (i1_2 < integer_of_int32(n_1))))) ->
         (integer_of_int32(select(intP_intM_a_4_0, shift(a_1,
         i1_2))) >= integer_of_int32(select(intP_intM_a_4_0, shift(a_1,
         i2_1)))))))) and
    (("JC_92":
     ((integer_of_int32(k_2_0) = integer_of_int32(n_1)) or
      (forall i1_1:int.
        (((i1_1 > integer_of_int32(k_2_0)) and (i1_1 < integer_of_int32(n_1))) ->
         (integer_of_int32(select(intP_intM_a_4_0, shift(a_1,
         integer_of_int32(k_2_0)))) <= integer_of_int32(select(intP_intM_a_4_0,
         shift(a_1, i1_1)))))))) and
     (("JC_93": bubble_sorted(a_1, integer_of_int32(k_2_0),
      (integer_of_int32(n_1) - 1), intP_intM_a_4_0)) and
      ("JC_96":
      (("JC_94": (integer_of_int32(k_2_0) >= 0)) and
       ("JC_95": (integer_of_int32(k_2_0) <= integer_of_int32(n_1)))))))) and
   ("JC_98": not_assigns(intP_a_4_alloc_table, intP_intM_a_4,
   intP_intM_a_4_0, pset_range(pset_singleton(a_1), 0,
   (integer_of_int32(n_1) - 1))))) ->
  (integer_of_int32(k_2_0) > 0) ->
  forall result:int32.
  (integer_of_int32(result) = 0) ->
  forall i_0:int32.
  (i_0 = result) ->
  forall i_0_0:int32.
  forall intP_intM_a_4_1:(intP,
  int32) memory.
  ((("JC_100":
    (forall i1_0:int.
      (forall i2_0:int.
        (((i2_0 >= 0) and
          ((i2_0 < integer_of_int32(k_2_0)) and
           ((i1_0 >= integer_of_int32(k_2_0)) and
            (i1_0 <= (integer_of_int32(n_1) - 1))))) ->
         (integer_of_int32(select(intP_intM_a_4_1, shift(a_1,
         i1_0))) >= integer_of_int32(select(intP_intM_a_4_1, shift(a_1,
         i2_0)))))))) and
    (("JC_101": bubble_sorted(a_1, integer_of_int32(k_2_0),
     (integer_of_int32(n_1) - 1), intP_intM_a_4_1)) and
     (("JC_102":
      (forall j_1:int.
        (((j_1 >= 0) and (j_1 < integer_of_int32(i_0_0))) ->
         (integer_of_int32(select(intP_intM_a_4_1, shift(a_1,
         j_1))) <= integer_of_int32(select(intP_intM_a_4_1, shift(a_1,
         integer_of_int32(i_0_0)))))))) and
      ("JC_106":
      (("JC_103": (integer_of_int32(i_0_0) >= 0)) and
       (("JC_104": (integer_of_int32(i_0_0) < integer_of_int32(k_2_0))) and
        ("JC_105": (integer_of_int32(i_0_0) <= integer_of_int32(n_1))))))))) and
   ("JC_108": not_assigns(intP_a_4_alloc_table, intP_intM_a_4,
   intP_intM_a_4_1, pset_range(pset_singleton(a_1), 0,
   (integer_of_int32(n_1) - 1))))) ->
  forall result0:int32.
  (integer_of_int32(result0) = (integer_of_int32(k_2_0) - 1)) ->
  (integer_of_int32(i_0_0) < integer_of_int32(result0)) ->
  forall result1:int32.
  (result1 = select(intP_intM_a_4_1, shift(a_1, integer_of_int32(i_0_0)))) ->
  forall result2:int32.
  (result2 = select(intP_intM_a_4_1, shift(shift(a_1,
  integer_of_int32(i_0_0)), 1))) ->
  (integer_of_int32(result1) <= integer_of_int32(result2)) ->
  forall result3:int32.
  (integer_of_int32(result3) = (integer_of_int32(i_0_0) + 1)) ->
  forall i_0_1:int32.
  (i_0_1 = result3) ->
  ("JC_106": ("JC_105": (integer_of_int32(i_0_1) <= integer_of_int32(n_1))))

goal bubble_ensures_default_po_33:
  forall a_1:intP pointer.
  forall n_1:int32.
  forall intP_a_4_alloc_table:intP alloc_table.
  forall intP_intM_a_4:(intP,
  int32) memory.
  ("JC_49":
  (("JC_46": (0 <= integer_of_int32(n_1))) and
   (("JC_47": (offset_min(intP_a_4_alloc_table, a_1) <= 0)) and
    ("JC_48": (offset_max(intP_a_4_alloc_table,
    a_1) >= (integer_of_int32(n_1) - 1)))))) ->
  forall k_2:int32.
  (k_2 = n_1) ->
  forall intP_intM_a_4_0:(intP,
  int32) memory.
  forall k_2_0:int32.
  ((("JC_91":
    (forall i2_1:int.
      (forall i1_2:int.
        (((i2_1 >= 0) and
          ((i2_1 < integer_of_int32(k_2_0)) and
           ((i1_2 >= integer_of_int32(k_2_0)) and
            (i1_2 < integer_of_int32(n_1))))) ->
         (integer_of_int32(select(intP_intM_a_4_0, shift(a_1,
         i1_2))) >= integer_of_int32(select(intP_intM_a_4_0, shift(a_1,
         i2_1)))))))) and
    (("JC_92":
     ((integer_of_int32(k_2_0) = integer_of_int32(n_1)) or
      (forall i1_1:int.
        (((i1_1 > integer_of_int32(k_2_0)) and (i1_1 < integer_of_int32(n_1))) ->
         (integer_of_int32(select(intP_intM_a_4_0, shift(a_1,
         integer_of_int32(k_2_0)))) <= integer_of_int32(select(intP_intM_a_4_0,
         shift(a_1, i1_1)))))))) and
     (("JC_93": bubble_sorted(a_1, integer_of_int32(k_2_0),
      (integer_of_int32(n_1) - 1), intP_intM_a_4_0)) and
      ("JC_96":
      (("JC_94": (integer_of_int32(k_2_0) >= 0)) and
       ("JC_95": (integer_of_int32(k_2_0) <= integer_of_int32(n_1)))))))) and
   ("JC_98": not_assigns(intP_a_4_alloc_table, intP_intM_a_4,
   intP_intM_a_4_0, pset_range(pset_singleton(a_1), 0,
   (integer_of_int32(n_1) - 1))))) ->
  (integer_of_int32(k_2_0) > 0) ->
  forall result:int32.
  (integer_of_int32(result) = 0) ->
  forall i_0:int32.
  (i_0 = result) ->
  forall i_0_0:int32.
  forall intP_intM_a_4_1:(intP,
  int32) memory.
  ((("JC_100":
    (forall i1_0:int.
      (forall i2_0:int.
        (((i2_0 >= 0) and
          ((i2_0 < integer_of_int32(k_2_0)) and
           ((i1_0 >= integer_of_int32(k_2_0)) and
            (i1_0 <= (integer_of_int32(n_1) - 1))))) ->
         (integer_of_int32(select(intP_intM_a_4_1, shift(a_1,
         i1_0))) >= integer_of_int32(select(intP_intM_a_4_1, shift(a_1,
         i2_0)))))))) and
    (("JC_101": bubble_sorted(a_1, integer_of_int32(k_2_0),
     (integer_of_int32(n_1) - 1), intP_intM_a_4_1)) and
     (("JC_102":
      (forall j_1:int.
        (((j_1 >= 0) and (j_1 < integer_of_int32(i_0_0))) ->
         (integer_of_int32(select(intP_intM_a_4_1, shift(a_1,
         j_1))) <= integer_of_int32(select(intP_intM_a_4_1, shift(a_1,
         integer_of_int32(i_0_0)))))))) and
      ("JC_106":
      (("JC_103": (integer_of_int32(i_0_0) >= 0)) and
       (("JC_104": (integer_of_int32(i_0_0) < integer_of_int32(k_2_0))) and
        ("JC_105": (integer_of_int32(i_0_0) <= integer_of_int32(n_1))))))))) and
   ("JC_108": not_assigns(intP_a_4_alloc_table, intP_intM_a_4,
   intP_intM_a_4_1, pset_range(pset_singleton(a_1), 0,
   (integer_of_int32(n_1) - 1))))) ->
  forall result0:int32.
  (integer_of_int32(result0) = (integer_of_int32(k_2_0) - 1)) ->
  (integer_of_int32(i_0_0) >= integer_of_int32(result0)) ->
  forall result1:int32.
  (integer_of_int32(result1) = (integer_of_int32(k_2_0) - 1)) ->
  forall k_2_1:int32.
  (k_2_1 = result1) ->
  forall i2_1:int.
  forall i1_2:int.
  ((i2_1 >= 0) and
   ((i2_1 < integer_of_int32(k_2_1)) and
    ((i1_2 >= integer_of_int32(k_2_1)) and (i1_2 < integer_of_int32(n_1))))) ->
  ("JC_91": (integer_of_int32(select(intP_intM_a_4_1, shift(a_1,
  i1_2))) >= integer_of_int32(select(intP_intM_a_4_1, shift(a_1, i2_1)))))

goal bubble_ensures_default_po_34:
  forall a_1:intP pointer.
  forall n_1:int32.
  forall intP_a_4_alloc_table:intP alloc_table.
  forall intP_intM_a_4:(intP,
  int32) memory.
  ("JC_49":
  (("JC_46": (0 <= integer_of_int32(n_1))) and
   (("JC_47": (offset_min(intP_a_4_alloc_table, a_1) <= 0)) and
    ("JC_48": (offset_max(intP_a_4_alloc_table,
    a_1) >= (integer_of_int32(n_1) - 1)))))) ->
  forall k_2:int32.
  (k_2 = n_1) ->
  forall intP_intM_a_4_0:(intP,
  int32) memory.
  forall k_2_0:int32.
  ((("JC_91":
    (forall i2_1:int.
      (forall i1_2:int.
        (((i2_1 >= 0) and
          ((i2_1 < integer_of_int32(k_2_0)) and
           ((i1_2 >= integer_of_int32(k_2_0)) and
            (i1_2 < integer_of_int32(n_1))))) ->
         (integer_of_int32(select(intP_intM_a_4_0, shift(a_1,
         i1_2))) >= integer_of_int32(select(intP_intM_a_4_0, shift(a_1,
         i2_1)))))))) and
    (("JC_92":
     ((integer_of_int32(k_2_0) = integer_of_int32(n_1)) or
      (forall i1_1:int.
        (((i1_1 > integer_of_int32(k_2_0)) and (i1_1 < integer_of_int32(n_1))) ->
         (integer_of_int32(select(intP_intM_a_4_0, shift(a_1,
         integer_of_int32(k_2_0)))) <= integer_of_int32(select(intP_intM_a_4_0,
         shift(a_1, i1_1)))))))) and
     (("JC_93": bubble_sorted(a_1, integer_of_int32(k_2_0),
      (integer_of_int32(n_1) - 1), intP_intM_a_4_0)) and
      ("JC_96":
      (("JC_94": (integer_of_int32(k_2_0) >= 0)) and
       ("JC_95": (integer_of_int32(k_2_0) <= integer_of_int32(n_1)))))))) and
   ("JC_98": not_assigns(intP_a_4_alloc_table, intP_intM_a_4,
   intP_intM_a_4_0, pset_range(pset_singleton(a_1), 0,
   (integer_of_int32(n_1) - 1))))) ->
  (integer_of_int32(k_2_0) > 0) ->
  forall result:int32.
  (integer_of_int32(result) = 0) ->
  forall i_0:int32.
  (i_0 = result) ->
  forall i_0_0:int32.
  forall intP_intM_a_4_1:(intP,
  int32) memory.
  ((("JC_100":
    (forall i1_0:int.
      (forall i2_0:int.
        (((i2_0 >= 0) and
          ((i2_0 < integer_of_int32(k_2_0)) and
           ((i1_0 >= integer_of_int32(k_2_0)) and
            (i1_0 <= (integer_of_int32(n_1) - 1))))) ->
         (integer_of_int32(select(intP_intM_a_4_1, shift(a_1,
         i1_0))) >= integer_of_int32(select(intP_intM_a_4_1, shift(a_1,
         i2_0)))))))) and
    (("JC_101": bubble_sorted(a_1, integer_of_int32(k_2_0),
     (integer_of_int32(n_1) - 1), intP_intM_a_4_1)) and
     (("JC_102":
      (forall j_1:int.
        (((j_1 >= 0) and (j_1 < integer_of_int32(i_0_0))) ->
         (integer_of_int32(select(intP_intM_a_4_1, shift(a_1,
         j_1))) <= integer_of_int32(select(intP_intM_a_4_1, shift(a_1,
         integer_of_int32(i_0_0)))))))) and
      ("JC_106":
      (("JC_103": (integer_of_int32(i_0_0) >= 0)) and
       (("JC_104": (integer_of_int32(i_0_0) < integer_of_int32(k_2_0))) and
        ("JC_105": (integer_of_int32(i_0_0) <= integer_of_int32(n_1))))))))) and
   ("JC_108": not_assigns(intP_a_4_alloc_table, intP_intM_a_4,
   intP_intM_a_4_1, pset_range(pset_singleton(a_1), 0,
   (integer_of_int32(n_1) - 1))))) ->
  forall result0:int32.
  (integer_of_int32(result0) = (integer_of_int32(k_2_0) - 1)) ->
  (integer_of_int32(i_0_0) >= integer_of_int32(result0)) ->
  forall result1:int32.
  (integer_of_int32(result1) = (integer_of_int32(k_2_0) - 1)) ->
  forall k_2_1:int32.
  (k_2_1 = result1) ->
  ("JC_92":
  ((integer_of_int32(k_2_1) = integer_of_int32(n_1)) or
   (forall i1_1:int.
     (((i1_1 > integer_of_int32(k_2_1)) and (i1_1 < integer_of_int32(n_1))) ->
      (integer_of_int32(select(intP_intM_a_4_1, shift(a_1,
      integer_of_int32(k_2_1)))) <= integer_of_int32(select(intP_intM_a_4_1,
      shift(a_1, i1_1))))))))

goal bubble_ensures_default_po_35:
  forall a_1:intP pointer.
  forall n_1:int32.
  forall intP_a_4_alloc_table:intP alloc_table.
  forall intP_intM_a_4:(intP,
  int32) memory.
  ("JC_49":
  (("JC_46": (0 <= integer_of_int32(n_1))) and
   (("JC_47": (offset_min(intP_a_4_alloc_table, a_1) <= 0)) and
    ("JC_48": (offset_max(intP_a_4_alloc_table,
    a_1) >= (integer_of_int32(n_1) - 1)))))) ->
  forall k_2:int32.
  (k_2 = n_1) ->
  forall intP_intM_a_4_0:(intP,
  int32) memory.
  forall k_2_0:int32.
  ((("JC_91":
    (forall i2_1:int.
      (forall i1_2:int.
        (((i2_1 >= 0) and
          ((i2_1 < integer_of_int32(k_2_0)) and
           ((i1_2 >= integer_of_int32(k_2_0)) and
            (i1_2 < integer_of_int32(n_1))))) ->
         (integer_of_int32(select(intP_intM_a_4_0, shift(a_1,
         i1_2))) >= integer_of_int32(select(intP_intM_a_4_0, shift(a_1,
         i2_1)))))))) and
    (("JC_92":
     ((integer_of_int32(k_2_0) = integer_of_int32(n_1)) or
      (forall i1_1:int.
        (((i1_1 > integer_of_int32(k_2_0)) and (i1_1 < integer_of_int32(n_1))) ->
         (integer_of_int32(select(intP_intM_a_4_0, shift(a_1,
         integer_of_int32(k_2_0)))) <= integer_of_int32(select(intP_intM_a_4_0,
         shift(a_1, i1_1)))))))) and
     (("JC_93": bubble_sorted(a_1, integer_of_int32(k_2_0),
      (integer_of_int32(n_1) - 1), intP_intM_a_4_0)) and
      ("JC_96":
      (("JC_94": (integer_of_int32(k_2_0) >= 0)) and
       ("JC_95": (integer_of_int32(k_2_0) <= integer_of_int32(n_1)))))))) and
   ("JC_98": not_assigns(intP_a_4_alloc_table, intP_intM_a_4,
   intP_intM_a_4_0, pset_range(pset_singleton(a_1), 0,
   (integer_of_int32(n_1) - 1))))) ->
  (integer_of_int32(k_2_0) > 0) ->
  forall result:int32.
  (integer_of_int32(result) = 0) ->
  forall i_0:int32.
  (i_0 = result) ->
  forall i_0_0:int32.
  forall intP_intM_a_4_1:(intP,
  int32) memory.
  ((("JC_100":
    (forall i1_0:int.
      (forall i2_0:int.
        (((i2_0 >= 0) and
          ((i2_0 < integer_of_int32(k_2_0)) and
           ((i1_0 >= integer_of_int32(k_2_0)) and
            (i1_0 <= (integer_of_int32(n_1) - 1))))) ->
         (integer_of_int32(select(intP_intM_a_4_1, shift(a_1,
         i1_0))) >= integer_of_int32(select(intP_intM_a_4_1, shift(a_1,
         i2_0)))))))) and
    (("JC_101": bubble_sorted(a_1, integer_of_int32(k_2_0),
     (integer_of_int32(n_1) - 1), intP_intM_a_4_1)) and
     (("JC_102":
      (forall j_1:int.
        (((j_1 >= 0) and (j_1 < integer_of_int32(i_0_0))) ->
         (integer_of_int32(select(intP_intM_a_4_1, shift(a_1,
         j_1))) <= integer_of_int32(select(intP_intM_a_4_1, shift(a_1,
         integer_of_int32(i_0_0)))))))) and
      ("JC_106":
      (("JC_103": (integer_of_int32(i_0_0) >= 0)) and
       (("JC_104": (integer_of_int32(i_0_0) < integer_of_int32(k_2_0))) and
        ("JC_105": (integer_of_int32(i_0_0) <= integer_of_int32(n_1))))))))) and
   ("JC_108": not_assigns(intP_a_4_alloc_table, intP_intM_a_4,
   intP_intM_a_4_1, pset_range(pset_singleton(a_1), 0,
   (integer_of_int32(n_1) - 1))))) ->
  forall result0:int32.
  (integer_of_int32(result0) = (integer_of_int32(k_2_0) - 1)) ->
  (integer_of_int32(i_0_0) >= integer_of_int32(result0)) ->
  forall result1:int32.
  (integer_of_int32(result1) = (integer_of_int32(k_2_0) - 1)) ->
  forall k_2_1:int32.
  (k_2_1 = result1) ->
  ("JC_93": bubble_sorted(a_1, integer_of_int32(k_2_1),
  (integer_of_int32(n_1) - 1), intP_intM_a_4_1))

goal bubble_ensures_default_po_36:
  forall a_1:intP pointer.
  forall n_1:int32.
  forall intP_a_4_alloc_table:intP alloc_table.
  forall intP_intM_a_4:(intP,
  int32) memory.
  ("JC_49":
  (("JC_46": (0 <= integer_of_int32(n_1))) and
   (("JC_47": (offset_min(intP_a_4_alloc_table, a_1) <= 0)) and
    ("JC_48": (offset_max(intP_a_4_alloc_table,
    a_1) >= (integer_of_int32(n_1) - 1)))))) ->
  forall k_2:int32.
  (k_2 = n_1) ->
  forall intP_intM_a_4_0:(intP,
  int32) memory.
  forall k_2_0:int32.
  ((("JC_91":
    (forall i2_1:int.
      (forall i1_2:int.
        (((i2_1 >= 0) and
          ((i2_1 < integer_of_int32(k_2_0)) and
           ((i1_2 >= integer_of_int32(k_2_0)) and
            (i1_2 < integer_of_int32(n_1))))) ->
         (integer_of_int32(select(intP_intM_a_4_0, shift(a_1,
         i1_2))) >= integer_of_int32(select(intP_intM_a_4_0, shift(a_1,
         i2_1)))))))) and
    (("JC_92":
     ((integer_of_int32(k_2_0) = integer_of_int32(n_1)) or
      (forall i1_1:int.
        (((i1_1 > integer_of_int32(k_2_0)) and (i1_1 < integer_of_int32(n_1))) ->
         (integer_of_int32(select(intP_intM_a_4_0, shift(a_1,
         integer_of_int32(k_2_0)))) <= integer_of_int32(select(intP_intM_a_4_0,
         shift(a_1, i1_1)))))))) and
     (("JC_93": bubble_sorted(a_1, integer_of_int32(k_2_0),
      (integer_of_int32(n_1) - 1), intP_intM_a_4_0)) and
      ("JC_96":
      (("JC_94": (integer_of_int32(k_2_0) >= 0)) and
       ("JC_95": (integer_of_int32(k_2_0) <= integer_of_int32(n_1)))))))) and
   ("JC_98": not_assigns(intP_a_4_alloc_table, intP_intM_a_4,
   intP_intM_a_4_0, pset_range(pset_singleton(a_1), 0,
   (integer_of_int32(n_1) - 1))))) ->
  (integer_of_int32(k_2_0) > 0) ->
  forall result:int32.
  (integer_of_int32(result) = 0) ->
  forall i_0:int32.
  (i_0 = result) ->
  forall i_0_0:int32.
  forall intP_intM_a_4_1:(intP,
  int32) memory.
  ((("JC_100":
    (forall i1_0:int.
      (forall i2_0:int.
        (((i2_0 >= 0) and
          ((i2_0 < integer_of_int32(k_2_0)) and
           ((i1_0 >= integer_of_int32(k_2_0)) and
            (i1_0 <= (integer_of_int32(n_1) - 1))))) ->
         (integer_of_int32(select(intP_intM_a_4_1, shift(a_1,
         i1_0))) >= integer_of_int32(select(intP_intM_a_4_1, shift(a_1,
         i2_0)))))))) and
    (("JC_101": bubble_sorted(a_1, integer_of_int32(k_2_0),
     (integer_of_int32(n_1) - 1), intP_intM_a_4_1)) and
     (("JC_102":
      (forall j_1:int.
        (((j_1 >= 0) and (j_1 < integer_of_int32(i_0_0))) ->
         (integer_of_int32(select(intP_intM_a_4_1, shift(a_1,
         j_1))) <= integer_of_int32(select(intP_intM_a_4_1, shift(a_1,
         integer_of_int32(i_0_0)))))))) and
      ("JC_106":
      (("JC_103": (integer_of_int32(i_0_0) >= 0)) and
       (("JC_104": (integer_of_int32(i_0_0) < integer_of_int32(k_2_0))) and
        ("JC_105": (integer_of_int32(i_0_0) <= integer_of_int32(n_1))))))))) and
   ("JC_108": not_assigns(intP_a_4_alloc_table, intP_intM_a_4,
   intP_intM_a_4_1, pset_range(pset_singleton(a_1), 0,
   (integer_of_int32(n_1) - 1))))) ->
  forall result0:int32.
  (integer_of_int32(result0) = (integer_of_int32(k_2_0) - 1)) ->
  (integer_of_int32(i_0_0) >= integer_of_int32(result0)) ->
  forall result1:int32.
  (integer_of_int32(result1) = (integer_of_int32(k_2_0) - 1)) ->
  forall k_2_1:int32.
  (k_2_1 = result1) ->
  ("JC_96": ("JC_94": (integer_of_int32(k_2_1) >= 0)))

goal bubble_ensures_default_po_37:
  forall a_1:intP pointer.
  forall n_1:int32.
  forall intP_a_4_alloc_table:intP alloc_table.
  forall intP_intM_a_4:(intP,
  int32) memory.
  ("JC_49":
  (("JC_46": (0 <= integer_of_int32(n_1))) and
   (("JC_47": (offset_min(intP_a_4_alloc_table, a_1) <= 0)) and
    ("JC_48": (offset_max(intP_a_4_alloc_table,
    a_1) >= (integer_of_int32(n_1) - 1)))))) ->
  forall k_2:int32.
  (k_2 = n_1) ->
  forall intP_intM_a_4_0:(intP,
  int32) memory.
  forall k_2_0:int32.
  ((("JC_91":
    (forall i2_1:int.
      (forall i1_2:int.
        (((i2_1 >= 0) and
          ((i2_1 < integer_of_int32(k_2_0)) and
           ((i1_2 >= integer_of_int32(k_2_0)) and
            (i1_2 < integer_of_int32(n_1))))) ->
         (integer_of_int32(select(intP_intM_a_4_0, shift(a_1,
         i1_2))) >= integer_of_int32(select(intP_intM_a_4_0, shift(a_1,
         i2_1)))))))) and
    (("JC_92":
     ((integer_of_int32(k_2_0) = integer_of_int32(n_1)) or
      (forall i1_1:int.
        (((i1_1 > integer_of_int32(k_2_0)) and (i1_1 < integer_of_int32(n_1))) ->
         (integer_of_int32(select(intP_intM_a_4_0, shift(a_1,
         integer_of_int32(k_2_0)))) <= integer_of_int32(select(intP_intM_a_4_0,
         shift(a_1, i1_1)))))))) and
     (("JC_93": bubble_sorted(a_1, integer_of_int32(k_2_0),
      (integer_of_int32(n_1) - 1), intP_intM_a_4_0)) and
      ("JC_96":
      (("JC_94": (integer_of_int32(k_2_0) >= 0)) and
       ("JC_95": (integer_of_int32(k_2_0) <= integer_of_int32(n_1)))))))) and
   ("JC_98": not_assigns(intP_a_4_alloc_table, intP_intM_a_4,
   intP_intM_a_4_0, pset_range(pset_singleton(a_1), 0,
   (integer_of_int32(n_1) - 1))))) ->
  (integer_of_int32(k_2_0) > 0) ->
  forall result:int32.
  (integer_of_int32(result) = 0) ->
  forall i_0:int32.
  (i_0 = result) ->
  forall i_0_0:int32.
  forall intP_intM_a_4_1:(intP,
  int32) memory.
  ((("JC_100":
    (forall i1_0:int.
      (forall i2_0:int.
        (((i2_0 >= 0) and
          ((i2_0 < integer_of_int32(k_2_0)) and
           ((i1_0 >= integer_of_int32(k_2_0)) and
            (i1_0 <= (integer_of_int32(n_1) - 1))))) ->
         (integer_of_int32(select(intP_intM_a_4_1, shift(a_1,
         i1_0))) >= integer_of_int32(select(intP_intM_a_4_1, shift(a_1,
         i2_0)))))))) and
    (("JC_101": bubble_sorted(a_1, integer_of_int32(k_2_0),
     (integer_of_int32(n_1) - 1), intP_intM_a_4_1)) and
     (("JC_102":
      (forall j_1:int.
        (((j_1 >= 0) and (j_1 < integer_of_int32(i_0_0))) ->
         (integer_of_int32(select(intP_intM_a_4_1, shift(a_1,
         j_1))) <= integer_of_int32(select(intP_intM_a_4_1, shift(a_1,
         integer_of_int32(i_0_0)))))))) and
      ("JC_106":
      (("JC_103": (integer_of_int32(i_0_0) >= 0)) and
       (("JC_104": (integer_of_int32(i_0_0) < integer_of_int32(k_2_0))) and
        ("JC_105": (integer_of_int32(i_0_0) <= integer_of_int32(n_1))))))))) and
   ("JC_108": not_assigns(intP_a_4_alloc_table, intP_intM_a_4,
   intP_intM_a_4_1, pset_range(pset_singleton(a_1), 0,
   (integer_of_int32(n_1) - 1))))) ->
  forall result0:int32.
  (integer_of_int32(result0) = (integer_of_int32(k_2_0) - 1)) ->
  (integer_of_int32(i_0_0) >= integer_of_int32(result0)) ->
  forall result1:int32.
  (integer_of_int32(result1) = (integer_of_int32(k_2_0) - 1)) ->
  forall k_2_1:int32.
  (k_2_1 = result1) ->
  ("JC_96": ("JC_95": (integer_of_int32(k_2_1) <= integer_of_int32(n_1))))

goal bubble_safety_po_1:
  forall a_1:intP pointer.
  forall n_1:int32.
  forall intP_a_4_alloc_table:intP alloc_table.
  ("JC_49":
  (("JC_46": (0 <= integer_of_int32(n_1))) and
   (("JC_47": (offset_min(intP_a_4_alloc_table, a_1) <= 0)) and
    ("JC_48": (offset_max(intP_a_4_alloc_table,
    a_1) >= (integer_of_int32(n_1) - 1)))))) ->
  forall k_2:int32.
  (k_2 = n_1) ->
  forall intP_intM_a_4:(intP,
  int32) memory.
  forall k_2_0:int32.
  ("JC_66": true) ->
  (("JC_59":
   (forall i2_1:int.
     (forall i1_2:int.
       (((i2_1 >= 0) and
         ((i2_1 < integer_of_int32(k_2_0)) and
          ((i1_2 >= integer_of_int32(k_2_0)) and
           (i1_2 < integer_of_int32(n_1))))) ->
        (integer_of_int32(select(intP_intM_a_4, shift(a_1,
        i1_2))) >= integer_of_int32(select(intP_intM_a_4, shift(a_1, i2_1)))))))) and
   (("JC_60":
    ((integer_of_int32(k_2_0) = integer_of_int32(n_1)) or
     (forall i1_1:int.
       (((i1_1 > integer_of_int32(k_2_0)) and (i1_1 < integer_of_int32(n_1))) ->
        (integer_of_int32(select(intP_intM_a_4, shift(a_1,
        integer_of_int32(k_2_0)))) <= integer_of_int32(select(intP_intM_a_4,
        shift(a_1, i1_1)))))))) and
    (("JC_61": bubble_sorted(a_1, integer_of_int32(k_2_0),
     (integer_of_int32(n_1) - 1), intP_intM_a_4)) and
     ("JC_64":
     (("JC_62": (integer_of_int32(k_2_0) >= 0)) and
      ("JC_63": (integer_of_int32(k_2_0) <= integer_of_int32(n_1)))))))) ->
  (integer_of_int32(k_2_0) > 0) ->
  forall result:int32.
  (integer_of_int32(result) = 0) ->
  forall i_0:int32.
  (i_0 = result) ->
  forall i_0_0:int32.
  forall intP_intM_a_4_0:(intP,
  int32) memory.
  ("JC_76": true) ->
  (("JC_68":
   (forall i1_0:int.
     (forall i2_0:int.
       (((i2_0 >= 0) and
         ((i2_0 < integer_of_int32(k_2_0)) and
          ((i1_0 >= integer_of_int32(k_2_0)) and
           (i1_0 <= (integer_of_int32(n_1) - 1))))) ->
        (integer_of_int32(select(intP_intM_a_4_0, shift(a_1,
        i1_0))) >= integer_of_int32(select(intP_intM_a_4_0, shift(a_1,
        i2_0)))))))) and
   (("JC_69": bubble_sorted(a_1, integer_of_int32(k_2_0),
    (integer_of_int32(n_1) - 1), intP_intM_a_4_0)) and
    (("JC_70":
     (forall j_1:int.
       (((j_1 >= 0) and (j_1 < integer_of_int32(i_0_0))) ->
        (integer_of_int32(select(intP_intM_a_4_0, shift(a_1,
        j_1))) <= integer_of_int32(select(intP_intM_a_4_0, shift(a_1,
        integer_of_int32(i_0_0)))))))) and
     ("JC_74":
     (("JC_71": (integer_of_int32(i_0_0) >= 0)) and
      (("JC_72": (integer_of_int32(i_0_0) < integer_of_int32(k_2_0))) and
       ("JC_73": (integer_of_int32(i_0_0) <= integer_of_int32(n_1))))))))) ->
  ((-2147483648) <= (integer_of_int32(k_2_0) - 1))

goal bubble_safety_po_2:
  forall a_1:intP pointer.
  forall n_1:int32.
  forall intP_a_4_alloc_table:intP alloc_table.
  ("JC_49":
  (("JC_46": (0 <= integer_of_int32(n_1))) and
   (("JC_47": (offset_min(intP_a_4_alloc_table, a_1) <= 0)) and
    ("JC_48": (offset_max(intP_a_4_alloc_table,
    a_1) >= (integer_of_int32(n_1) - 1)))))) ->
  forall k_2:int32.
  (k_2 = n_1) ->
  forall intP_intM_a_4:(intP,
  int32) memory.
  forall k_2_0:int32.
  ("JC_66": true) ->
  (("JC_59":
   (forall i2_1:int.
     (forall i1_2:int.
       (((i2_1 >= 0) and
         ((i2_1 < integer_of_int32(k_2_0)) and
          ((i1_2 >= integer_of_int32(k_2_0)) and
           (i1_2 < integer_of_int32(n_1))))) ->
        (integer_of_int32(select(intP_intM_a_4, shift(a_1,
        i1_2))) >= integer_of_int32(select(intP_intM_a_4, shift(a_1, i2_1)))))))) and
   (("JC_60":
    ((integer_of_int32(k_2_0) = integer_of_int32(n_1)) or
     (forall i1_1:int.
       (((i1_1 > integer_of_int32(k_2_0)) and (i1_1 < integer_of_int32(n_1))) ->
        (integer_of_int32(select(intP_intM_a_4, shift(a_1,
        integer_of_int32(k_2_0)))) <= integer_of_int32(select(intP_intM_a_4,
        shift(a_1, i1_1)))))))) and
    (("JC_61": bubble_sorted(a_1, integer_of_int32(k_2_0),
     (integer_of_int32(n_1) - 1), intP_intM_a_4)) and
     ("JC_64":
     (("JC_62": (integer_of_int32(k_2_0) >= 0)) and
      ("JC_63": (integer_of_int32(k_2_0) <= integer_of_int32(n_1)))))))) ->
  (integer_of_int32(k_2_0) > 0) ->
  forall result:int32.
  (integer_of_int32(result) = 0) ->
  forall i_0:int32.
  (i_0 = result) ->
  forall i_0_0:int32.
  forall intP_intM_a_4_0:(intP,
  int32) memory.
  ("JC_76": true) ->
  (("JC_68":
   (forall i1_0:int.
     (forall i2_0:int.
       (((i2_0 >= 0) and
         ((i2_0 < integer_of_int32(k_2_0)) and
          ((i1_0 >= integer_of_int32(k_2_0)) and
           (i1_0 <= (integer_of_int32(n_1) - 1))))) ->
        (integer_of_int32(select(intP_intM_a_4_0, shift(a_1,
        i1_0))) >= integer_of_int32(select(intP_intM_a_4_0, shift(a_1,
        i2_0)))))))) and
   (("JC_69": bubble_sorted(a_1, integer_of_int32(k_2_0),
    (integer_of_int32(n_1) - 1), intP_intM_a_4_0)) and
    (("JC_70":
     (forall j_1:int.
       (((j_1 >= 0) and (j_1 < integer_of_int32(i_0_0))) ->
        (integer_of_int32(select(intP_intM_a_4_0, shift(a_1,
        j_1))) <= integer_of_int32(select(intP_intM_a_4_0, shift(a_1,
        integer_of_int32(i_0_0)))))))) and
     ("JC_74":
     (("JC_71": (integer_of_int32(i_0_0) >= 0)) and
      (("JC_72": (integer_of_int32(i_0_0) < integer_of_int32(k_2_0))) and
       ("JC_73": (integer_of_int32(i_0_0) <= integer_of_int32(n_1))))))))) ->
  ((integer_of_int32(k_2_0) - 1) <= 2147483647)

goal bubble_safety_po_3:
  forall a_1:intP pointer.
  forall n_1:int32.
  forall intP_a_4_alloc_table:intP alloc_table.
  ("JC_49":
  (("JC_46": (0 <= integer_of_int32(n_1))) and
   (("JC_47": (offset_min(intP_a_4_alloc_table, a_1) <= 0)) and
    ("JC_48": (offset_max(intP_a_4_alloc_table,
    a_1) >= (integer_of_int32(n_1) - 1)))))) ->
  forall k_2:int32.
  (k_2 = n_1) ->
  forall intP_intM_a_4:(intP,
  int32) memory.
  forall k_2_0:int32.
  ("JC_66": true) ->
  (("JC_59":
   (forall i2_1:int.
     (forall i1_2:int.
       (((i2_1 >= 0) and
         ((i2_1 < integer_of_int32(k_2_0)) and
          ((i1_2 >= integer_of_int32(k_2_0)) and
           (i1_2 < integer_of_int32(n_1))))) ->
        (integer_of_int32(select(intP_intM_a_4, shift(a_1,
        i1_2))) >= integer_of_int32(select(intP_intM_a_4, shift(a_1, i2_1)))))))) and
   (("JC_60":
    ((integer_of_int32(k_2_0) = integer_of_int32(n_1)) or
     (forall i1_1:int.
       (((i1_1 > integer_of_int32(k_2_0)) and (i1_1 < integer_of_int32(n_1))) ->
        (integer_of_int32(select(intP_intM_a_4, shift(a_1,
        integer_of_int32(k_2_0)))) <= integer_of_int32(select(intP_intM_a_4,
        shift(a_1, i1_1)))))))) and
    (("JC_61": bubble_sorted(a_1, integer_of_int32(k_2_0),
     (integer_of_int32(n_1) - 1), intP_intM_a_4)) and
     ("JC_64":
     (("JC_62": (integer_of_int32(k_2_0) >= 0)) and
      ("JC_63": (integer_of_int32(k_2_0) <= integer_of_int32(n_1)))))))) ->
  (integer_of_int32(k_2_0) > 0) ->
  forall result:int32.
  (integer_of_int32(result) = 0) ->
  forall i_0:int32.
  (i_0 = result) ->
  forall i_0_0:int32.
  forall intP_intM_a_4_0:(intP,
  int32) memory.
  ("JC_76": true) ->
  (("JC_68":
   (forall i1_0:int.
     (forall i2_0:int.
       (((i2_0 >= 0) and
         ((i2_0 < integer_of_int32(k_2_0)) and
          ((i1_0 >= integer_of_int32(k_2_0)) and
           (i1_0 <= (integer_of_int32(n_1) - 1))))) ->
        (integer_of_int32(select(intP_intM_a_4_0, shift(a_1,
        i1_0))) >= integer_of_int32(select(intP_intM_a_4_0, shift(a_1,
        i2_0)))))))) and
   (("JC_69": bubble_sorted(a_1, integer_of_int32(k_2_0),
    (integer_of_int32(n_1) - 1), intP_intM_a_4_0)) and
    (("JC_70":
     (forall j_1:int.
       (((j_1 >= 0) and (j_1 < integer_of_int32(i_0_0))) ->
        (integer_of_int32(select(intP_intM_a_4_0, shift(a_1,
        j_1))) <= integer_of_int32(select(intP_intM_a_4_0, shift(a_1,
        integer_of_int32(i_0_0)))))))) and
     ("JC_74":
     (("JC_71": (integer_of_int32(i_0_0) >= 0)) and
      (("JC_72": (integer_of_int32(i_0_0) < integer_of_int32(k_2_0))) and
       ("JC_73": (integer_of_int32(i_0_0) <= integer_of_int32(n_1))))))))) ->
  (((-2147483648) <= (integer_of_int32(k_2_0) - 1)) and
   ((integer_of_int32(k_2_0) - 1) <= 2147483647)) ->
  forall result0:int32.
  (integer_of_int32(result0) = (integer_of_int32(k_2_0) - 1)) ->
  (integer_of_int32(i_0_0) < integer_of_int32(result0)) ->
  (offset_min(intP_a_4_alloc_table, a_1) <= integer_of_int32(i_0_0))

goal bubble_safety_po_4:
  forall a_1:intP pointer.
  forall n_1:int32.
  forall intP_a_4_alloc_table:intP alloc_table.
  ("JC_49":
  (("JC_46": (0 <= integer_of_int32(n_1))) and
   (("JC_47": (offset_min(intP_a_4_alloc_table, a_1) <= 0)) and
    ("JC_48": (offset_max(intP_a_4_alloc_table,
    a_1) >= (integer_of_int32(n_1) - 1)))))) ->
  forall k_2:int32.
  (k_2 = n_1) ->
  forall intP_intM_a_4:(intP,
  int32) memory.
  forall k_2_0:int32.
  ("JC_66": true) ->
  (("JC_59":
   (forall i2_1:int.
     (forall i1_2:int.
       (((i2_1 >= 0) and
         ((i2_1 < integer_of_int32(k_2_0)) and
          ((i1_2 >= integer_of_int32(k_2_0)) and
           (i1_2 < integer_of_int32(n_1))))) ->
        (integer_of_int32(select(intP_intM_a_4, shift(a_1,
        i1_2))) >= integer_of_int32(select(intP_intM_a_4, shift(a_1, i2_1)))))))) and
   (("JC_60":
    ((integer_of_int32(k_2_0) = integer_of_int32(n_1)) or
     (forall i1_1:int.
       (((i1_1 > integer_of_int32(k_2_0)) and (i1_1 < integer_of_int32(n_1))) ->
        (integer_of_int32(select(intP_intM_a_4, shift(a_1,
        integer_of_int32(k_2_0)))) <= integer_of_int32(select(intP_intM_a_4,
        shift(a_1, i1_1)))))))) and
    (("JC_61": bubble_sorted(a_1, integer_of_int32(k_2_0),
     (integer_of_int32(n_1) - 1), intP_intM_a_4)) and
     ("JC_64":
     (("JC_62": (integer_of_int32(k_2_0) >= 0)) and
      ("JC_63": (integer_of_int32(k_2_0) <= integer_of_int32(n_1)))))))) ->
  (integer_of_int32(k_2_0) > 0) ->
  forall result:int32.
  (integer_of_int32(result) = 0) ->
  forall i_0:int32.
  (i_0 = result) ->
  forall i_0_0:int32.
  forall intP_intM_a_4_0:(intP,
  int32) memory.
  ("JC_76": true) ->
  (("JC_68":
   (forall i1_0:int.
     (forall i2_0:int.
       (((i2_0 >= 0) and
         ((i2_0 < integer_of_int32(k_2_0)) and
          ((i1_0 >= integer_of_int32(k_2_0)) and
           (i1_0 <= (integer_of_int32(n_1) - 1))))) ->
        (integer_of_int32(select(intP_intM_a_4_0, shift(a_1,
        i1_0))) >= integer_of_int32(select(intP_intM_a_4_0, shift(a_1,
        i2_0)))))))) and
   (("JC_69": bubble_sorted(a_1, integer_of_int32(k_2_0),
    (integer_of_int32(n_1) - 1), intP_intM_a_4_0)) and
    (("JC_70":
     (forall j_1:int.
       (((j_1 >= 0) and (j_1 < integer_of_int32(i_0_0))) ->
        (integer_of_int32(select(intP_intM_a_4_0, shift(a_1,
        j_1))) <= integer_of_int32(select(intP_intM_a_4_0, shift(a_1,
        integer_of_int32(i_0_0)))))))) and
     ("JC_74":
     (("JC_71": (integer_of_int32(i_0_0) >= 0)) and
      (("JC_72": (integer_of_int32(i_0_0) < integer_of_int32(k_2_0))) and
       ("JC_73": (integer_of_int32(i_0_0) <= integer_of_int32(n_1))))))))) ->
  (((-2147483648) <= (integer_of_int32(k_2_0) - 1)) and
   ((integer_of_int32(k_2_0) - 1) <= 2147483647)) ->
  forall result0:int32.
  (integer_of_int32(result0) = (integer_of_int32(k_2_0) - 1)) ->
  (integer_of_int32(i_0_0) < integer_of_int32(result0)) ->
  (integer_of_int32(i_0_0) <= offset_max(intP_a_4_alloc_table, a_1))

goal bubble_safety_po_5:
  forall a_1:intP pointer.
  forall n_1:int32.
  forall intP_a_4_alloc_table:intP alloc_table.
  ("JC_49":
  (("JC_46": (0 <= integer_of_int32(n_1))) and
   (("JC_47": (offset_min(intP_a_4_alloc_table, a_1) <= 0)) and
    ("JC_48": (offset_max(intP_a_4_alloc_table,
    a_1) >= (integer_of_int32(n_1) - 1)))))) ->
  forall k_2:int32.
  (k_2 = n_1) ->
  forall intP_intM_a_4:(intP,
  int32) memory.
  forall k_2_0:int32.
  ("JC_66": true) ->
  (("JC_59":
   (forall i2_1:int.
     (forall i1_2:int.
       (((i2_1 >= 0) and
         ((i2_1 < integer_of_int32(k_2_0)) and
          ((i1_2 >= integer_of_int32(k_2_0)) and
           (i1_2 < integer_of_int32(n_1))))) ->
        (integer_of_int32(select(intP_intM_a_4, shift(a_1,
        i1_2))) >= integer_of_int32(select(intP_intM_a_4, shift(a_1, i2_1)))))))) and
   (("JC_60":
    ((integer_of_int32(k_2_0) = integer_of_int32(n_1)) or
     (forall i1_1:int.
       (((i1_1 > integer_of_int32(k_2_0)) and (i1_1 < integer_of_int32(n_1))) ->
        (integer_of_int32(select(intP_intM_a_4, shift(a_1,
        integer_of_int32(k_2_0)))) <= integer_of_int32(select(intP_intM_a_4,
        shift(a_1, i1_1)))))))) and
    (("JC_61": bubble_sorted(a_1, integer_of_int32(k_2_0),
     (integer_of_int32(n_1) - 1), intP_intM_a_4)) and
     ("JC_64":
     (("JC_62": (integer_of_int32(k_2_0) >= 0)) and
      ("JC_63": (integer_of_int32(k_2_0) <= integer_of_int32(n_1)))))))) ->
  (integer_of_int32(k_2_0) > 0) ->
  forall result:int32.
  (integer_of_int32(result) = 0) ->
  forall i_0:int32.
  (i_0 = result) ->
  forall i_0_0:int32.
  forall intP_intM_a_4_0:(intP,
  int32) memory.
  ("JC_76": true) ->
  (("JC_68":
   (forall i1_0:int.
     (forall i2_0:int.
       (((i2_0 >= 0) and
         ((i2_0 < integer_of_int32(k_2_0)) and
          ((i1_0 >= integer_of_int32(k_2_0)) and
           (i1_0 <= (integer_of_int32(n_1) - 1))))) ->
        (integer_of_int32(select(intP_intM_a_4_0, shift(a_1,
        i1_0))) >= integer_of_int32(select(intP_intM_a_4_0, shift(a_1,
        i2_0)))))))) and
   (("JC_69": bubble_sorted(a_1, integer_of_int32(k_2_0),
    (integer_of_int32(n_1) - 1), intP_intM_a_4_0)) and
    (("JC_70":
     (forall j_1:int.
       (((j_1 >= 0) and (j_1 < integer_of_int32(i_0_0))) ->
        (integer_of_int32(select(intP_intM_a_4_0, shift(a_1,
        j_1))) <= integer_of_int32(select(intP_intM_a_4_0, shift(a_1,
        integer_of_int32(i_0_0)))))))) and
     ("JC_74":
     (("JC_71": (integer_of_int32(i_0_0) >= 0)) and
      (("JC_72": (integer_of_int32(i_0_0) < integer_of_int32(k_2_0))) and
       ("JC_73": (integer_of_int32(i_0_0) <= integer_of_int32(n_1))))))))) ->
  (((-2147483648) <= (integer_of_int32(k_2_0) - 1)) and
   ((integer_of_int32(k_2_0) - 1) <= 2147483647)) ->
  forall result0:int32.
  (integer_of_int32(result0) = (integer_of_int32(k_2_0) - 1)) ->
  (integer_of_int32(i_0_0) < integer_of_int32(result0)) ->
  ((offset_min(intP_a_4_alloc_table, a_1) <= integer_of_int32(i_0_0)) and
   (integer_of_int32(i_0_0) <= offset_max(intP_a_4_alloc_table, a_1))) ->
  forall result1:int32.
  (result1 = select(intP_intM_a_4_0, shift(a_1, integer_of_int32(i_0_0)))) ->
  (offset_min(intP_a_4_alloc_table, shift(a_1,
  integer_of_int32(i_0_0))) <= 1)

goal bubble_safety_po_6:
  forall a_1:intP pointer.
  forall n_1:int32.
  forall intP_a_4_alloc_table:intP alloc_table.
  ("JC_49":
  (("JC_46": (0 <= integer_of_int32(n_1))) and
   (("JC_47": (offset_min(intP_a_4_alloc_table, a_1) <= 0)) and
    ("JC_48": (offset_max(intP_a_4_alloc_table,
    a_1) >= (integer_of_int32(n_1) - 1)))))) ->
  forall k_2:int32.
  (k_2 = n_1) ->
  forall intP_intM_a_4:(intP,
  int32) memory.
  forall k_2_0:int32.
  ("JC_66": true) ->
  (("JC_59":
   (forall i2_1:int.
     (forall i1_2:int.
       (((i2_1 >= 0) and
         ((i2_1 < integer_of_int32(k_2_0)) and
          ((i1_2 >= integer_of_int32(k_2_0)) and
           (i1_2 < integer_of_int32(n_1))))) ->
        (integer_of_int32(select(intP_intM_a_4, shift(a_1,
        i1_2))) >= integer_of_int32(select(intP_intM_a_4, shift(a_1, i2_1)))))))) and
   (("JC_60":
    ((integer_of_int32(k_2_0) = integer_of_int32(n_1)) or
     (forall i1_1:int.
       (((i1_1 > integer_of_int32(k_2_0)) and (i1_1 < integer_of_int32(n_1))) ->
        (integer_of_int32(select(intP_intM_a_4, shift(a_1,
        integer_of_int32(k_2_0)))) <= integer_of_int32(select(intP_intM_a_4,
        shift(a_1, i1_1)))))))) and
    (("JC_61": bubble_sorted(a_1, integer_of_int32(k_2_0),
     (integer_of_int32(n_1) - 1), intP_intM_a_4)) and
     ("JC_64":
     (("JC_62": (integer_of_int32(k_2_0) >= 0)) and
      ("JC_63": (integer_of_int32(k_2_0) <= integer_of_int32(n_1)))))))) ->
  (integer_of_int32(k_2_0) > 0) ->
  forall result:int32.
  (integer_of_int32(result) = 0) ->
  forall i_0:int32.
  (i_0 = result) ->
  forall i_0_0:int32.
  forall intP_intM_a_4_0:(intP,
  int32) memory.
  ("JC_76": true) ->
  (("JC_68":
   (forall i1_0:int.
     (forall i2_0:int.
       (((i2_0 >= 0) and
         ((i2_0 < integer_of_int32(k_2_0)) and
          ((i1_0 >= integer_of_int32(k_2_0)) and
           (i1_0 <= (integer_of_int32(n_1) - 1))))) ->
        (integer_of_int32(select(intP_intM_a_4_0, shift(a_1,
        i1_0))) >= integer_of_int32(select(intP_intM_a_4_0, shift(a_1,
        i2_0)))))))) and
   (("JC_69": bubble_sorted(a_1, integer_of_int32(k_2_0),
    (integer_of_int32(n_1) - 1), intP_intM_a_4_0)) and
    (("JC_70":
     (forall j_1:int.
       (((j_1 >= 0) and (j_1 < integer_of_int32(i_0_0))) ->
        (integer_of_int32(select(intP_intM_a_4_0, shift(a_1,
        j_1))) <= integer_of_int32(select(intP_intM_a_4_0, shift(a_1,
        integer_of_int32(i_0_0)))))))) and
     ("JC_74":
     (("JC_71": (integer_of_int32(i_0_0) >= 0)) and
      (("JC_72": (integer_of_int32(i_0_0) < integer_of_int32(k_2_0))) and
       ("JC_73": (integer_of_int32(i_0_0) <= integer_of_int32(n_1))))))))) ->
  (((-2147483648) <= (integer_of_int32(k_2_0) - 1)) and
   ((integer_of_int32(k_2_0) - 1) <= 2147483647)) ->
  forall result0:int32.
  (integer_of_int32(result0) = (integer_of_int32(k_2_0) - 1)) ->
  (integer_of_int32(i_0_0) < integer_of_int32(result0)) ->
  ((offset_min(intP_a_4_alloc_table, a_1) <= integer_of_int32(i_0_0)) and
   (integer_of_int32(i_0_0) <= offset_max(intP_a_4_alloc_table, a_1))) ->
  forall result1:int32.
  (result1 = select(intP_intM_a_4_0, shift(a_1, integer_of_int32(i_0_0)))) ->
  (1 <= offset_max(intP_a_4_alloc_table, shift(a_1,
  integer_of_int32(i_0_0))))

goal bubble_safety_po_7:
  forall a_1:intP pointer.
  forall n_1:int32.
  forall intP_a_4_alloc_table:intP alloc_table.
  ("JC_49":
  (("JC_46": (0 <= integer_of_int32(n_1))) and
   (("JC_47": (offset_min(intP_a_4_alloc_table, a_1) <= 0)) and
    ("JC_48": (offset_max(intP_a_4_alloc_table,
    a_1) >= (integer_of_int32(n_1) - 1)))))) ->
  forall k_2:int32.
  (k_2 = n_1) ->
  forall intP_intM_a_4:(intP,
  int32) memory.
  forall k_2_0:int32.
  ("JC_66": true) ->
  (("JC_59":
   (forall i2_1:int.
     (forall i1_2:int.
       (((i2_1 >= 0) and
         ((i2_1 < integer_of_int32(k_2_0)) and
          ((i1_2 >= integer_of_int32(k_2_0)) and
           (i1_2 < integer_of_int32(n_1))))) ->
        (integer_of_int32(select(intP_intM_a_4, shift(a_1,
        i1_2))) >= integer_of_int32(select(intP_intM_a_4, shift(a_1, i2_1)))))))) and
   (("JC_60":
    ((integer_of_int32(k_2_0) = integer_of_int32(n_1)) or
     (forall i1_1:int.
       (((i1_1 > integer_of_int32(k_2_0)) and (i1_1 < integer_of_int32(n_1))) ->
        (integer_of_int32(select(intP_intM_a_4, shift(a_1,
        integer_of_int32(k_2_0)))) <= integer_of_int32(select(intP_intM_a_4,
        shift(a_1, i1_1)))))))) and
    (("JC_61": bubble_sorted(a_1, integer_of_int32(k_2_0),
     (integer_of_int32(n_1) - 1), intP_intM_a_4)) and
     ("JC_64":
     (("JC_62": (integer_of_int32(k_2_0) >= 0)) and
      ("JC_63": (integer_of_int32(k_2_0) <= integer_of_int32(n_1)))))))) ->
  (integer_of_int32(k_2_0) > 0) ->
  forall result:int32.
  (integer_of_int32(result) = 0) ->
  forall i_0:int32.
  (i_0 = result) ->
  forall i_0_0:int32.
  forall intP_intM_a_4_0:(intP,
  int32) memory.
  ("JC_76": true) ->
  (("JC_68":
   (forall i1_0:int.
     (forall i2_0:int.
       (((i2_0 >= 0) and
         ((i2_0 < integer_of_int32(k_2_0)) and
          ((i1_0 >= integer_of_int32(k_2_0)) and
           (i1_0 <= (integer_of_int32(n_1) - 1))))) ->
        (integer_of_int32(select(intP_intM_a_4_0, shift(a_1,
        i1_0))) >= integer_of_int32(select(intP_intM_a_4_0, shift(a_1,
        i2_0)))))))) and
   (("JC_69": bubble_sorted(a_1, integer_of_int32(k_2_0),
    (integer_of_int32(n_1) - 1), intP_intM_a_4_0)) and
    (("JC_70":
     (forall j_1:int.
       (((j_1 >= 0) and (j_1 < integer_of_int32(i_0_0))) ->
        (integer_of_int32(select(intP_intM_a_4_0, shift(a_1,
        j_1))) <= integer_of_int32(select(intP_intM_a_4_0, shift(a_1,
        integer_of_int32(i_0_0)))))))) and
     ("JC_74":
     (("JC_71": (integer_of_int32(i_0_0) >= 0)) and
      (("JC_72": (integer_of_int32(i_0_0) < integer_of_int32(k_2_0))) and
       ("JC_73": (integer_of_int32(i_0_0) <= integer_of_int32(n_1))))))))) ->
  (((-2147483648) <= (integer_of_int32(k_2_0) - 1)) and
   ((integer_of_int32(k_2_0) - 1) <= 2147483647)) ->
  forall result0:int32.
  (integer_of_int32(result0) = (integer_of_int32(k_2_0) - 1)) ->
  (integer_of_int32(i_0_0) < integer_of_int32(result0)) ->
  ((offset_min(intP_a_4_alloc_table, a_1) <= integer_of_int32(i_0_0)) and
   (integer_of_int32(i_0_0) <= offset_max(intP_a_4_alloc_table, a_1))) ->
  forall result1:int32.
  (result1 = select(intP_intM_a_4_0, shift(a_1, integer_of_int32(i_0_0)))) ->
  ((offset_min(intP_a_4_alloc_table, shift(a_1,
   integer_of_int32(i_0_0))) <= 1) and (1 <= offset_max(intP_a_4_alloc_table,
   shift(a_1, integer_of_int32(i_0_0))))) ->
  forall result2:int32.
  (result2 = select(intP_intM_a_4_0, shift(shift(a_1,
  integer_of_int32(i_0_0)), 1))) ->
  (integer_of_int32(result1) > integer_of_int32(result2)) ->
  ("JC_81": (integer_of_int32(n_1) >= 0)) ->
  ("JC_82":
  ((integer_of_int32(i_0_0) >= 0) and
   (integer_of_int32(i_0_0) <= (integer_of_int32(n_1) - 1)))) ->
  ("JC_83":
  (((integer_of_int32(i_0_0) + 1) >= 0) and
   ((integer_of_int32(i_0_0) + 1) <= (integer_of_int32(n_1) - 1)))) ->
  ("JC_84":
  ((offset_min(intP_a_4_alloc_table, a_1) <= 0) and
   (offset_max(intP_a_4_alloc_table, a_1) >= (integer_of_int32(n_1) - 1)))) ->
  ((-2147483648) <= (integer_of_int32(i_0_0) + 1))

goal bubble_safety_po_8:
  forall a_1:intP pointer.
  forall n_1:int32.
  forall intP_a_4_alloc_table:intP alloc_table.
  ("JC_49":
  (("JC_46": (0 <= integer_of_int32(n_1))) and
   (("JC_47": (offset_min(intP_a_4_alloc_table, a_1) <= 0)) and
    ("JC_48": (offset_max(intP_a_4_alloc_table,
    a_1) >= (integer_of_int32(n_1) - 1)))))) ->
  forall k_2:int32.
  (k_2 = n_1) ->
  forall intP_intM_a_4:(intP,
  int32) memory.
  forall k_2_0:int32.
  ("JC_66": true) ->
  (("JC_59":
   (forall i2_1:int.
     (forall i1_2:int.
       (((i2_1 >= 0) and
         ((i2_1 < integer_of_int32(k_2_0)) and
          ((i1_2 >= integer_of_int32(k_2_0)) and
           (i1_2 < integer_of_int32(n_1))))) ->
        (integer_of_int32(select(intP_intM_a_4, shift(a_1,
        i1_2))) >= integer_of_int32(select(intP_intM_a_4, shift(a_1, i2_1)))))))) and
   (("JC_60":
    ((integer_of_int32(k_2_0) = integer_of_int32(n_1)) or
     (forall i1_1:int.
       (((i1_1 > integer_of_int32(k_2_0)) and (i1_1 < integer_of_int32(n_1))) ->
        (integer_of_int32(select(intP_intM_a_4, shift(a_1,
        integer_of_int32(k_2_0)))) <= integer_of_int32(select(intP_intM_a_4,
        shift(a_1, i1_1)))))))) and
    (("JC_61": bubble_sorted(a_1, integer_of_int32(k_2_0),
     (integer_of_int32(n_1) - 1), intP_intM_a_4)) and
     ("JC_64":
     (("JC_62": (integer_of_int32(k_2_0) >= 0)) and
      ("JC_63": (integer_of_int32(k_2_0) <= integer_of_int32(n_1)))))))) ->
  (integer_of_int32(k_2_0) > 0) ->
  forall result:int32.
  (integer_of_int32(result) = 0) ->
  forall i_0:int32.
  (i_0 = result) ->
  forall i_0_0:int32.
  forall intP_intM_a_4_0:(intP,
  int32) memory.
  ("JC_76": true) ->
  (("JC_68":
   (forall i1_0:int.
     (forall i2_0:int.
       (((i2_0 >= 0) and
         ((i2_0 < integer_of_int32(k_2_0)) and
          ((i1_0 >= integer_of_int32(k_2_0)) and
           (i1_0 <= (integer_of_int32(n_1) - 1))))) ->
        (integer_of_int32(select(intP_intM_a_4_0, shift(a_1,
        i1_0))) >= integer_of_int32(select(intP_intM_a_4_0, shift(a_1,
        i2_0)))))))) and
   (("JC_69": bubble_sorted(a_1, integer_of_int32(k_2_0),
    (integer_of_int32(n_1) - 1), intP_intM_a_4_0)) and
    (("JC_70":
     (forall j_1:int.
       (((j_1 >= 0) and (j_1 < integer_of_int32(i_0_0))) ->
        (integer_of_int32(select(intP_intM_a_4_0, shift(a_1,
        j_1))) <= integer_of_int32(select(intP_intM_a_4_0, shift(a_1,
        integer_of_int32(i_0_0)))))))) and
     ("JC_74":
     (("JC_71": (integer_of_int32(i_0_0) >= 0)) and
      (("JC_72": (integer_of_int32(i_0_0) < integer_of_int32(k_2_0))) and
       ("JC_73": (integer_of_int32(i_0_0) <= integer_of_int32(n_1))))))))) ->
  (((-2147483648) <= (integer_of_int32(k_2_0) - 1)) and
   ((integer_of_int32(k_2_0) - 1) <= 2147483647)) ->
  forall result0:int32.
  (integer_of_int32(result0) = (integer_of_int32(k_2_0) - 1)) ->
  (integer_of_int32(i_0_0) < integer_of_int32(result0)) ->
  ((offset_min(intP_a_4_alloc_table, a_1) <= integer_of_int32(i_0_0)) and
   (integer_of_int32(i_0_0) <= offset_max(intP_a_4_alloc_table, a_1))) ->
  forall result1:int32.
  (result1 = select(intP_intM_a_4_0, shift(a_1, integer_of_int32(i_0_0)))) ->
  ((offset_min(intP_a_4_alloc_table, shift(a_1,
   integer_of_int32(i_0_0))) <= 1) and (1 <= offset_max(intP_a_4_alloc_table,
   shift(a_1, integer_of_int32(i_0_0))))) ->
  forall result2:int32.
  (result2 = select(intP_intM_a_4_0, shift(shift(a_1,
  integer_of_int32(i_0_0)), 1))) ->
  (integer_of_int32(result1) > integer_of_int32(result2)) ->
  ("JC_81": (integer_of_int32(n_1) >= 0)) ->
  ("JC_82":
  ((integer_of_int32(i_0_0) >= 0) and
   (integer_of_int32(i_0_0) <= (integer_of_int32(n_1) - 1)))) ->
  ("JC_83":
  (((integer_of_int32(i_0_0) + 1) >= 0) and
   ((integer_of_int32(i_0_0) + 1) <= (integer_of_int32(n_1) - 1)))) ->
  ("JC_84":
  ((offset_min(intP_a_4_alloc_table, a_1) <= 0) and
   (offset_max(intP_a_4_alloc_table, a_1) >= (integer_of_int32(n_1) - 1)))) ->
  ((integer_of_int32(i_0_0) + 1) <= 2147483647)

goal bubble_safety_po_9:
  forall a_1:intP pointer.
  forall n_1:int32.
  forall intP_a_4_alloc_table:intP alloc_table.
  ("JC_49":
  (("JC_46": (0 <= integer_of_int32(n_1))) and
   (("JC_47": (offset_min(intP_a_4_alloc_table, a_1) <= 0)) and
    ("JC_48": (offset_max(intP_a_4_alloc_table,
    a_1) >= (integer_of_int32(n_1) - 1)))))) ->
  forall k_2:int32.
  (k_2 = n_1) ->
  forall intP_intM_a_4:(intP,
  int32) memory.
  forall k_2_0:int32.
  ("JC_66": true) ->
  (("JC_59":
   (forall i2_1:int.
     (forall i1_2:int.
       (((i2_1 >= 0) and
         ((i2_1 < integer_of_int32(k_2_0)) and
          ((i1_2 >= integer_of_int32(k_2_0)) and
           (i1_2 < integer_of_int32(n_1))))) ->
        (integer_of_int32(select(intP_intM_a_4, shift(a_1,
        i1_2))) >= integer_of_int32(select(intP_intM_a_4, shift(a_1, i2_1)))))))) and
   (("JC_60":
    ((integer_of_int32(k_2_0) = integer_of_int32(n_1)) or
     (forall i1_1:int.
       (((i1_1 > integer_of_int32(k_2_0)) and (i1_1 < integer_of_int32(n_1))) ->
        (integer_of_int32(select(intP_intM_a_4, shift(a_1,
        integer_of_int32(k_2_0)))) <= integer_of_int32(select(intP_intM_a_4,
        shift(a_1, i1_1)))))))) and
    (("JC_61": bubble_sorted(a_1, integer_of_int32(k_2_0),
     (integer_of_int32(n_1) - 1), intP_intM_a_4)) and
     ("JC_64":
     (("JC_62": (integer_of_int32(k_2_0) >= 0)) and
      ("JC_63": (integer_of_int32(k_2_0) <= integer_of_int32(n_1)))))))) ->
  (integer_of_int32(k_2_0) > 0) ->
  forall result:int32.
  (integer_of_int32(result) = 0) ->
  forall i_0:int32.
  (i_0 = result) ->
  forall i_0_0:int32.
  forall intP_intM_a_4_0:(intP,
  int32) memory.
  ("JC_76": true) ->
  (("JC_68":
   (forall i1_0:int.
     (forall i2_0:int.
       (((i2_0 >= 0) and
         ((i2_0 < integer_of_int32(k_2_0)) and
          ((i1_0 >= integer_of_int32(k_2_0)) and
           (i1_0 <= (integer_of_int32(n_1) - 1))))) ->
        (integer_of_int32(select(intP_intM_a_4_0, shift(a_1,
        i1_0))) >= integer_of_int32(select(intP_intM_a_4_0, shift(a_1,
        i2_0)))))))) and
   (("JC_69": bubble_sorted(a_1, integer_of_int32(k_2_0),
    (integer_of_int32(n_1) - 1), intP_intM_a_4_0)) and
    (("JC_70":
     (forall j_1:int.
       (((j_1 >= 0) and (j_1 < integer_of_int32(i_0_0))) ->
        (integer_of_int32(select(intP_intM_a_4_0, shift(a_1,
        j_1))) <= integer_of_int32(select(intP_intM_a_4_0, shift(a_1,
        integer_of_int32(i_0_0)))))))) and
     ("JC_74":
     (("JC_71": (integer_of_int32(i_0_0) >= 0)) and
      (("JC_72": (integer_of_int32(i_0_0) < integer_of_int32(k_2_0))) and
       ("JC_73": (integer_of_int32(i_0_0) <= integer_of_int32(n_1))))))))) ->
  (((-2147483648) <= (integer_of_int32(k_2_0) - 1)) and
   ((integer_of_int32(k_2_0) - 1) <= 2147483647)) ->
  forall result0:int32.
  (integer_of_int32(result0) = (integer_of_int32(k_2_0) - 1)) ->
  (integer_of_int32(i_0_0) < integer_of_int32(result0)) ->
  ((offset_min(intP_a_4_alloc_table, a_1) <= integer_of_int32(i_0_0)) and
   (integer_of_int32(i_0_0) <= offset_max(intP_a_4_alloc_table, a_1))) ->
  forall result1:int32.
  (result1 = select(intP_intM_a_4_0, shift(a_1, integer_of_int32(i_0_0)))) ->
  ((offset_min(intP_a_4_alloc_table, shift(a_1,
   integer_of_int32(i_0_0))) <= 1) and (1 <= offset_max(intP_a_4_alloc_table,
   shift(a_1, integer_of_int32(i_0_0))))) ->
  forall result2:int32.
  (result2 = select(intP_intM_a_4_0, shift(shift(a_1,
  integer_of_int32(i_0_0)), 1))) ->
  (integer_of_int32(result1) > integer_of_int32(result2)) ->
  ("JC_81": (integer_of_int32(n_1) >= 0)) ->
  ("JC_82":
  ((integer_of_int32(i_0_0) >= 0) and
   (integer_of_int32(i_0_0) <= (integer_of_int32(n_1) - 1)))) ->
  ("JC_83":
  (((integer_of_int32(i_0_0) + 1) >= 0) and
   ((integer_of_int32(i_0_0) + 1) <= (integer_of_int32(n_1) - 1)))) ->
  ("JC_84":
  ((offset_min(intP_a_4_alloc_table, a_1) <= 0) and
   (offset_max(intP_a_4_alloc_table, a_1) >= (integer_of_int32(n_1) - 1)))) ->
  (((-2147483648) <= (integer_of_int32(i_0_0) + 1)) and
   ((integer_of_int32(i_0_0) + 1) <= 2147483647)) ->
  forall result3:int32.
  (integer_of_int32(result3) = (integer_of_int32(i_0_0) + 1)) ->
  ("JC_10": ("JC_4": dom(integer_of_int32(i_0_0), integer_of_int32(n_1))))

goal bubble_safety_po_10:
  forall a_1:intP pointer.
  forall n_1:int32.
  forall intP_a_4_alloc_table:intP alloc_table.
  ("JC_49":
  (("JC_46": (0 <= integer_of_int32(n_1))) and
   (("JC_47": (offset_min(intP_a_4_alloc_table, a_1) <= 0)) and
    ("JC_48": (offset_max(intP_a_4_alloc_table,
    a_1) >= (integer_of_int32(n_1) - 1)))))) ->
  forall k_2:int32.
  (k_2 = n_1) ->
  forall intP_intM_a_4:(intP,
  int32) memory.
  forall k_2_0:int32.
  ("JC_66": true) ->
  (("JC_59":
   (forall i2_1:int.
     (forall i1_2:int.
       (((i2_1 >= 0) and
         ((i2_1 < integer_of_int32(k_2_0)) and
          ((i1_2 >= integer_of_int32(k_2_0)) and
           (i1_2 < integer_of_int32(n_1))))) ->
        (integer_of_int32(select(intP_intM_a_4, shift(a_1,
        i1_2))) >= integer_of_int32(select(intP_intM_a_4, shift(a_1, i2_1)))))))) and
   (("JC_60":
    ((integer_of_int32(k_2_0) = integer_of_int32(n_1)) or
     (forall i1_1:int.
       (((i1_1 > integer_of_int32(k_2_0)) and (i1_1 < integer_of_int32(n_1))) ->
        (integer_of_int32(select(intP_intM_a_4, shift(a_1,
        integer_of_int32(k_2_0)))) <= integer_of_int32(select(intP_intM_a_4,
        shift(a_1, i1_1)))))))) and
    (("JC_61": bubble_sorted(a_1, integer_of_int32(k_2_0),
     (integer_of_int32(n_1) - 1), intP_intM_a_4)) and
     ("JC_64":
     (("JC_62": (integer_of_int32(k_2_0) >= 0)) and
      ("JC_63": (integer_of_int32(k_2_0) <= integer_of_int32(n_1)))))))) ->
  (integer_of_int32(k_2_0) > 0) ->
  forall result:int32.
  (integer_of_int32(result) = 0) ->
  forall i_0:int32.
  (i_0 = result) ->
  forall i_0_0:int32.
  forall intP_intM_a_4_0:(intP,
  int32) memory.
  ("JC_76": true) ->
  (("JC_68":
   (forall i1_0:int.
     (forall i2_0:int.
       (((i2_0 >= 0) and
         ((i2_0 < integer_of_int32(k_2_0)) and
          ((i1_0 >= integer_of_int32(k_2_0)) and
           (i1_0 <= (integer_of_int32(n_1) - 1))))) ->
        (integer_of_int32(select(intP_intM_a_4_0, shift(a_1,
        i1_0))) >= integer_of_int32(select(intP_intM_a_4_0, shift(a_1,
        i2_0)))))))) and
   (("JC_69": bubble_sorted(a_1, integer_of_int32(k_2_0),
    (integer_of_int32(n_1) - 1), intP_intM_a_4_0)) and
    (("JC_70":
     (forall j_1:int.
       (((j_1 >= 0) and (j_1 < integer_of_int32(i_0_0))) ->
        (integer_of_int32(select(intP_intM_a_4_0, shift(a_1,
        j_1))) <= integer_of_int32(select(intP_intM_a_4_0, shift(a_1,
        integer_of_int32(i_0_0)))))))) and
     ("JC_74":
     (("JC_71": (integer_of_int32(i_0_0) >= 0)) and
      (("JC_72": (integer_of_int32(i_0_0) < integer_of_int32(k_2_0))) and
       ("JC_73": (integer_of_int32(i_0_0) <= integer_of_int32(n_1))))))))) ->
  (((-2147483648) <= (integer_of_int32(k_2_0) - 1)) and
   ((integer_of_int32(k_2_0) - 1) <= 2147483647)) ->
  forall result0:int32.
  (integer_of_int32(result0) = (integer_of_int32(k_2_0) - 1)) ->
  (integer_of_int32(i_0_0) < integer_of_int32(result0)) ->
  ((offset_min(intP_a_4_alloc_table, a_1) <= integer_of_int32(i_0_0)) and
   (integer_of_int32(i_0_0) <= offset_max(intP_a_4_alloc_table, a_1))) ->
  forall result1:int32.
  (result1 = select(intP_intM_a_4_0, shift(a_1, integer_of_int32(i_0_0)))) ->
  ((offset_min(intP_a_4_alloc_table, shift(a_1,
   integer_of_int32(i_0_0))) <= 1) and (1 <= offset_max(intP_a_4_alloc_table,
   shift(a_1, integer_of_int32(i_0_0))))) ->
  forall result2:int32.
  (result2 = select(intP_intM_a_4_0, shift(shift(a_1,
  integer_of_int32(i_0_0)), 1))) ->
  (integer_of_int32(result1) > integer_of_int32(result2)) ->
  ("JC_81": (integer_of_int32(n_1) >= 0)) ->
  ("JC_82":
  ((integer_of_int32(i_0_0) >= 0) and
   (integer_of_int32(i_0_0) <= (integer_of_int32(n_1) - 1)))) ->
  ("JC_83":
  (((integer_of_int32(i_0_0) + 1) >= 0) and
   ((integer_of_int32(i_0_0) + 1) <= (integer_of_int32(n_1) - 1)))) ->
  ("JC_84":
  ((offset_min(intP_a_4_alloc_table, a_1) <= 0) and
   (offset_max(intP_a_4_alloc_table, a_1) >= (integer_of_int32(n_1) - 1)))) ->
  (((-2147483648) <= (integer_of_int32(i_0_0) + 1)) and
   ((integer_of_int32(i_0_0) + 1) <= 2147483647)) ->
  forall result3:int32.
  (integer_of_int32(result3) = (integer_of_int32(i_0_0) + 1)) ->
  ("JC_10": ("JC_5": dom(integer_of_int32(result3), integer_of_int32(n_1))))

goal bubble_safety_po_11:
  forall a_1:intP pointer.
  forall n_1:int32.
  forall intP_a_4_alloc_table:intP alloc_table.
  ("JC_49":
  (("JC_46": (0 <= integer_of_int32(n_1))) and
   (("JC_47": (offset_min(intP_a_4_alloc_table, a_1) <= 0)) and
    ("JC_48": (offset_max(intP_a_4_alloc_table,
    a_1) >= (integer_of_int32(n_1) - 1)))))) ->
  forall k_2:int32.
  (k_2 = n_1) ->
  forall intP_intM_a_4:(intP,
  int32) memory.
  forall k_2_0:int32.
  ("JC_66": true) ->
  (("JC_59":
   (forall i2_1:int.
     (forall i1_2:int.
       (((i2_1 >= 0) and
         ((i2_1 < integer_of_int32(k_2_0)) and
          ((i1_2 >= integer_of_int32(k_2_0)) and
           (i1_2 < integer_of_int32(n_1))))) ->
        (integer_of_int32(select(intP_intM_a_4, shift(a_1,
        i1_2))) >= integer_of_int32(select(intP_intM_a_4, shift(a_1, i2_1)))))))) and
   (("JC_60":
    ((integer_of_int32(k_2_0) = integer_of_int32(n_1)) or
     (forall i1_1:int.
       (((i1_1 > integer_of_int32(k_2_0)) and (i1_1 < integer_of_int32(n_1))) ->
        (integer_of_int32(select(intP_intM_a_4, shift(a_1,
        integer_of_int32(k_2_0)))) <= integer_of_int32(select(intP_intM_a_4,
        shift(a_1, i1_1)))))))) and
    (("JC_61": bubble_sorted(a_1, integer_of_int32(k_2_0),
     (integer_of_int32(n_1) - 1), intP_intM_a_4)) and
     ("JC_64":
     (("JC_62": (integer_of_int32(k_2_0) >= 0)) and
      ("JC_63": (integer_of_int32(k_2_0) <= integer_of_int32(n_1)))))))) ->
  (integer_of_int32(k_2_0) > 0) ->
  forall result:int32.
  (integer_of_int32(result) = 0) ->
  forall i_0:int32.
  (i_0 = result) ->
  forall i_0_0:int32.
  forall intP_intM_a_4_0:(intP,
  int32) memory.
  ("JC_76": true) ->
  (("JC_68":
   (forall i1_0:int.
     (forall i2_0:int.
       (((i2_0 >= 0) and
         ((i2_0 < integer_of_int32(k_2_0)) and
          ((i1_0 >= integer_of_int32(k_2_0)) and
           (i1_0 <= (integer_of_int32(n_1) - 1))))) ->
        (integer_of_int32(select(intP_intM_a_4_0, shift(a_1,
        i1_0))) >= integer_of_int32(select(intP_intM_a_4_0, shift(a_1,
        i2_0)))))))) and
   (("JC_69": bubble_sorted(a_1, integer_of_int32(k_2_0),
    (integer_of_int32(n_1) - 1), intP_intM_a_4_0)) and
    (("JC_70":
     (forall j_1:int.
       (((j_1 >= 0) and (j_1 < integer_of_int32(i_0_0))) ->
        (integer_of_int32(select(intP_intM_a_4_0, shift(a_1,
        j_1))) <= integer_of_int32(select(intP_intM_a_4_0, shift(a_1,
        integer_of_int32(i_0_0)))))))) and
     ("JC_74":
     (("JC_71": (integer_of_int32(i_0_0) >= 0)) and
      (("JC_72": (integer_of_int32(i_0_0) < integer_of_int32(k_2_0))) and
       ("JC_73": (integer_of_int32(i_0_0) <= integer_of_int32(n_1))))))))) ->
  (((-2147483648) <= (integer_of_int32(k_2_0) - 1)) and
   ((integer_of_int32(k_2_0) - 1) <= 2147483647)) ->
  forall result0:int32.
  (integer_of_int32(result0) = (integer_of_int32(k_2_0) - 1)) ->
  (integer_of_int32(i_0_0) < integer_of_int32(result0)) ->
  ((offset_min(intP_a_4_alloc_table, a_1) <= integer_of_int32(i_0_0)) and
   (integer_of_int32(i_0_0) <= offset_max(intP_a_4_alloc_table, a_1))) ->
  forall result1:int32.
  (result1 = select(intP_intM_a_4_0, shift(a_1, integer_of_int32(i_0_0)))) ->
  ((offset_min(intP_a_4_alloc_table, shift(a_1,
   integer_of_int32(i_0_0))) <= 1) and (1 <= offset_max(intP_a_4_alloc_table,
   shift(a_1, integer_of_int32(i_0_0))))) ->
  forall result2:int32.
  (result2 = select(intP_intM_a_4_0, shift(shift(a_1,
  integer_of_int32(i_0_0)), 1))) ->
  (integer_of_int32(result1) > integer_of_int32(result2)) ->
  ("JC_81": (integer_of_int32(n_1) >= 0)) ->
  ("JC_82":
  ((integer_of_int32(i_0_0) >= 0) and
   (integer_of_int32(i_0_0) <= (integer_of_int32(n_1) - 1)))) ->
  ("JC_83":
  (((integer_of_int32(i_0_0) + 1) >= 0) and
   ((integer_of_int32(i_0_0) + 1) <= (integer_of_int32(n_1) - 1)))) ->
  ("JC_84":
  ((offset_min(intP_a_4_alloc_table, a_1) <= 0) and
   (offset_max(intP_a_4_alloc_table, a_1) >= (integer_of_int32(n_1) - 1)))) ->
  (((-2147483648) <= (integer_of_int32(i_0_0) + 1)) and
   ((integer_of_int32(i_0_0) + 1) <= 2147483647)) ->
  forall result3:int32.
  (integer_of_int32(result3) = (integer_of_int32(i_0_0) + 1)) ->
  ("JC_10":
  ("JC_7": (offset_max(intP_a_4_alloc_table,
  a_1) >= integer_of_int32(i_0_0))))

goal bubble_safety_po_12:
  forall a_1:intP pointer.
  forall n_1:int32.
  forall intP_a_4_alloc_table:intP alloc_table.
  ("JC_49":
  (("JC_46": (0 <= integer_of_int32(n_1))) and
   (("JC_47": (offset_min(intP_a_4_alloc_table, a_1) <= 0)) and
    ("JC_48": (offset_max(intP_a_4_alloc_table,
    a_1) >= (integer_of_int32(n_1) - 1)))))) ->
  forall k_2:int32.
  (k_2 = n_1) ->
  forall intP_intM_a_4:(intP,
  int32) memory.
  forall k_2_0:int32.
  ("JC_66": true) ->
  (("JC_59":
   (forall i2_1:int.
     (forall i1_2:int.
       (((i2_1 >= 0) and
         ((i2_1 < integer_of_int32(k_2_0)) and
          ((i1_2 >= integer_of_int32(k_2_0)) and
           (i1_2 < integer_of_int32(n_1))))) ->
        (integer_of_int32(select(intP_intM_a_4, shift(a_1,
        i1_2))) >= integer_of_int32(select(intP_intM_a_4, shift(a_1, i2_1)))))))) and
   (("JC_60":
    ((integer_of_int32(k_2_0) = integer_of_int32(n_1)) or
     (forall i1_1:int.
       (((i1_1 > integer_of_int32(k_2_0)) and (i1_1 < integer_of_int32(n_1))) ->
        (integer_of_int32(select(intP_intM_a_4, shift(a_1,
        integer_of_int32(k_2_0)))) <= integer_of_int32(select(intP_intM_a_4,
        shift(a_1, i1_1)))))))) and
    (("JC_61": bubble_sorted(a_1, integer_of_int32(k_2_0),
     (integer_of_int32(n_1) - 1), intP_intM_a_4)) and
     ("JC_64":
     (("JC_62": (integer_of_int32(k_2_0) >= 0)) and
      ("JC_63": (integer_of_int32(k_2_0) <= integer_of_int32(n_1)))))))) ->
  (integer_of_int32(k_2_0) > 0) ->
  forall result:int32.
  (integer_of_int32(result) = 0) ->
  forall i_0:int32.
  (i_0 = result) ->
  forall i_0_0:int32.
  forall intP_intM_a_4_0:(intP,
  int32) memory.
  ("JC_76": true) ->
  (("JC_68":
   (forall i1_0:int.
     (forall i2_0:int.
       (((i2_0 >= 0) and
         ((i2_0 < integer_of_int32(k_2_0)) and
          ((i1_0 >= integer_of_int32(k_2_0)) and
           (i1_0 <= (integer_of_int32(n_1) - 1))))) ->
        (integer_of_int32(select(intP_intM_a_4_0, shift(a_1,
        i1_0))) >= integer_of_int32(select(intP_intM_a_4_0, shift(a_1,
        i2_0)))))))) and
   (("JC_69": bubble_sorted(a_1, integer_of_int32(k_2_0),
    (integer_of_int32(n_1) - 1), intP_intM_a_4_0)) and
    (("JC_70":
     (forall j_1:int.
       (((j_1 >= 0) and (j_1 < integer_of_int32(i_0_0))) ->
        (integer_of_int32(select(intP_intM_a_4_0, shift(a_1,
        j_1))) <= integer_of_int32(select(intP_intM_a_4_0, shift(a_1,
        integer_of_int32(i_0_0)))))))) and
     ("JC_74":
     (("JC_71": (integer_of_int32(i_0_0) >= 0)) and
      (("JC_72": (integer_of_int32(i_0_0) < integer_of_int32(k_2_0))) and
       ("JC_73": (integer_of_int32(i_0_0) <= integer_of_int32(n_1))))))))) ->
  (((-2147483648) <= (integer_of_int32(k_2_0) - 1)) and
   ((integer_of_int32(k_2_0) - 1) <= 2147483647)) ->
  forall result0:int32.
  (integer_of_int32(result0) = (integer_of_int32(k_2_0) - 1)) ->
  (integer_of_int32(i_0_0) < integer_of_int32(result0)) ->
  ((offset_min(intP_a_4_alloc_table, a_1) <= integer_of_int32(i_0_0)) and
   (integer_of_int32(i_0_0) <= offset_max(intP_a_4_alloc_table, a_1))) ->
  forall result1:int32.
  (result1 = select(intP_intM_a_4_0, shift(a_1, integer_of_int32(i_0_0)))) ->
  ((offset_min(intP_a_4_alloc_table, shift(a_1,
   integer_of_int32(i_0_0))) <= 1) and (1 <= offset_max(intP_a_4_alloc_table,
   shift(a_1, integer_of_int32(i_0_0))))) ->
  forall result2:int32.
  (result2 = select(intP_intM_a_4_0, shift(shift(a_1,
  integer_of_int32(i_0_0)), 1))) ->
  (integer_of_int32(result1) > integer_of_int32(result2)) ->
  ("JC_81": (integer_of_int32(n_1) >= 0)) ->
  ("JC_82":
  ((integer_of_int32(i_0_0) >= 0) and
   (integer_of_int32(i_0_0) <= (integer_of_int32(n_1) - 1)))) ->
  ("JC_83":
  (((integer_of_int32(i_0_0) + 1) >= 0) and
   ((integer_of_int32(i_0_0) + 1) <= (integer_of_int32(n_1) - 1)))) ->
  ("JC_84":
  ((offset_min(intP_a_4_alloc_table, a_1) <= 0) and
   (offset_max(intP_a_4_alloc_table, a_1) >= (integer_of_int32(n_1) - 1)))) ->
  (((-2147483648) <= (integer_of_int32(i_0_0) + 1)) and
   ((integer_of_int32(i_0_0) + 1) <= 2147483647)) ->
  forall result3:int32.
  (integer_of_int32(result3) = (integer_of_int32(i_0_0) + 1)) ->
  ("JC_10":
  ("JC_8": (offset_min(intP_a_4_alloc_table,
  a_1) <= integer_of_int32(result3))))

goal bubble_safety_po_13:
  forall a_1:intP pointer.
  forall n_1:int32.
  forall intP_a_4_alloc_table:intP alloc_table.
  ("JC_49":
  (("JC_46": (0 <= integer_of_int32(n_1))) and
   (("JC_47": (offset_min(intP_a_4_alloc_table, a_1) <= 0)) and
    ("JC_48": (offset_max(intP_a_4_alloc_table,
    a_1) >= (integer_of_int32(n_1) - 1)))))) ->
  forall k_2:int32.
  (k_2 = n_1) ->
  forall intP_intM_a_4:(intP,
  int32) memory.
  forall k_2_0:int32.
  ("JC_66": true) ->
  (("JC_59":
   (forall i2_1:int.
     (forall i1_2:int.
       (((i2_1 >= 0) and
         ((i2_1 < integer_of_int32(k_2_0)) and
          ((i1_2 >= integer_of_int32(k_2_0)) and
           (i1_2 < integer_of_int32(n_1))))) ->
        (integer_of_int32(select(intP_intM_a_4, shift(a_1,
        i1_2))) >= integer_of_int32(select(intP_intM_a_4, shift(a_1, i2_1)))))))) and
   (("JC_60":
    ((integer_of_int32(k_2_0) = integer_of_int32(n_1)) or
     (forall i1_1:int.
       (((i1_1 > integer_of_int32(k_2_0)) and (i1_1 < integer_of_int32(n_1))) ->
        (integer_of_int32(select(intP_intM_a_4, shift(a_1,
        integer_of_int32(k_2_0)))) <= integer_of_int32(select(intP_intM_a_4,
        shift(a_1, i1_1)))))))) and
    (("JC_61": bubble_sorted(a_1, integer_of_int32(k_2_0),
     (integer_of_int32(n_1) - 1), intP_intM_a_4)) and
     ("JC_64":
     (("JC_62": (integer_of_int32(k_2_0) >= 0)) and
      ("JC_63": (integer_of_int32(k_2_0) <= integer_of_int32(n_1)))))))) ->
  (integer_of_int32(k_2_0) > 0) ->
  forall result:int32.
  (integer_of_int32(result) = 0) ->
  forall i_0:int32.
  (i_0 = result) ->
  forall i_0_0:int32.
  forall intP_intM_a_4_0:(intP,
  int32) memory.
  ("JC_76": true) ->
  (("JC_68":
   (forall i1_0:int.
     (forall i2_0:int.
       (((i2_0 >= 0) and
         ((i2_0 < integer_of_int32(k_2_0)) and
          ((i1_0 >= integer_of_int32(k_2_0)) and
           (i1_0 <= (integer_of_int32(n_1) - 1))))) ->
        (integer_of_int32(select(intP_intM_a_4_0, shift(a_1,
        i1_0))) >= integer_of_int32(select(intP_intM_a_4_0, shift(a_1,
        i2_0)))))))) and
   (("JC_69": bubble_sorted(a_1, integer_of_int32(k_2_0),
    (integer_of_int32(n_1) - 1), intP_intM_a_4_0)) and
    (("JC_70":
     (forall j_1:int.
       (((j_1 >= 0) and (j_1 < integer_of_int32(i_0_0))) ->
        (integer_of_int32(select(intP_intM_a_4_0, shift(a_1,
        j_1))) <= integer_of_int32(select(intP_intM_a_4_0, shift(a_1,
        integer_of_int32(i_0_0)))))))) and
     ("JC_74":
     (("JC_71": (integer_of_int32(i_0_0) >= 0)) and
      (("JC_72": (integer_of_int32(i_0_0) < integer_of_int32(k_2_0))) and
       ("JC_73": (integer_of_int32(i_0_0) <= integer_of_int32(n_1))))))))) ->
  (((-2147483648) <= (integer_of_int32(k_2_0) - 1)) and
   ((integer_of_int32(k_2_0) - 1) <= 2147483647)) ->
  forall result0:int32.
  (integer_of_int32(result0) = (integer_of_int32(k_2_0) - 1)) ->
  (integer_of_int32(i_0_0) < integer_of_int32(result0)) ->
  ((offset_min(intP_a_4_alloc_table, a_1) <= integer_of_int32(i_0_0)) and
   (integer_of_int32(i_0_0) <= offset_max(intP_a_4_alloc_table, a_1))) ->
  forall result1:int32.
  (result1 = select(intP_intM_a_4_0, shift(a_1, integer_of_int32(i_0_0)))) ->
  ((offset_min(intP_a_4_alloc_table, shift(a_1,
   integer_of_int32(i_0_0))) <= 1) and (1 <= offset_max(intP_a_4_alloc_table,
   shift(a_1, integer_of_int32(i_0_0))))) ->
  forall result2:int32.
  (result2 = select(intP_intM_a_4_0, shift(shift(a_1,
  integer_of_int32(i_0_0)), 1))) ->
  (integer_of_int32(result1) > integer_of_int32(result2)) ->
  ("JC_81": (integer_of_int32(n_1) >= 0)) ->
  ("JC_82":
  ((integer_of_int32(i_0_0) >= 0) and
   (integer_of_int32(i_0_0) <= (integer_of_int32(n_1) - 1)))) ->
  ("JC_83":
  (((integer_of_int32(i_0_0) + 1) >= 0) and
   ((integer_of_int32(i_0_0) + 1) <= (integer_of_int32(n_1) - 1)))) ->
  ("JC_84":
  ((offset_min(intP_a_4_alloc_table, a_1) <= 0) and
   (offset_max(intP_a_4_alloc_table, a_1) >= (integer_of_int32(n_1) - 1)))) ->
  (((-2147483648) <= (integer_of_int32(i_0_0) + 1)) and
   ((integer_of_int32(i_0_0) + 1) <= 2147483647)) ->
  forall result3:int32.
  (integer_of_int32(result3) = (integer_of_int32(i_0_0) + 1)) ->
  ("JC_10":
  ("JC_9": (offset_max(intP_a_4_alloc_table,
  a_1) >= integer_of_int32(result3))))

goal bubble_safety_po_14:
  forall a_1:intP pointer.
  forall n_1:int32.
  forall intP_a_4_alloc_table:intP alloc_table.
  ("JC_49":
  (("JC_46": (0 <= integer_of_int32(n_1))) and
   (("JC_47": (offset_min(intP_a_4_alloc_table, a_1) <= 0)) and
    ("JC_48": (offset_max(intP_a_4_alloc_table,
    a_1) >= (integer_of_int32(n_1) - 1)))))) ->
  forall k_2:int32.
  (k_2 = n_1) ->
  forall intP_intM_a_4:(intP,
  int32) memory.
  forall k_2_0:int32.
  ("JC_66": true) ->
  (("JC_59":
   (forall i2_1:int.
     (forall i1_2:int.
       (((i2_1 >= 0) and
         ((i2_1 < integer_of_int32(k_2_0)) and
          ((i1_2 >= integer_of_int32(k_2_0)) and
           (i1_2 < integer_of_int32(n_1))))) ->
        (integer_of_int32(select(intP_intM_a_4, shift(a_1,
        i1_2))) >= integer_of_int32(select(intP_intM_a_4, shift(a_1, i2_1)))))))) and
   (("JC_60":
    ((integer_of_int32(k_2_0) = integer_of_int32(n_1)) or
     (forall i1_1:int.
       (((i1_1 > integer_of_int32(k_2_0)) and (i1_1 < integer_of_int32(n_1))) ->
        (integer_of_int32(select(intP_intM_a_4, shift(a_1,
        integer_of_int32(k_2_0)))) <= integer_of_int32(select(intP_intM_a_4,
        shift(a_1, i1_1)))))))) and
    (("JC_61": bubble_sorted(a_1, integer_of_int32(k_2_0),
     (integer_of_int32(n_1) - 1), intP_intM_a_4)) and
     ("JC_64":
     (("JC_62": (integer_of_int32(k_2_0) >= 0)) and
      ("JC_63": (integer_of_int32(k_2_0) <= integer_of_int32(n_1)))))))) ->
  (integer_of_int32(k_2_0) > 0) ->
  forall result:int32.
  (integer_of_int32(result) = 0) ->
  forall i_0:int32.
  (i_0 = result) ->
  forall i_0_0:int32.
  forall intP_intM_a_4_0:(intP,
  int32) memory.
  ("JC_76": true) ->
  (("JC_68":
   (forall i1_0:int.
     (forall i2_0:int.
       (((i2_0 >= 0) and
         ((i2_0 < integer_of_int32(k_2_0)) and
          ((i1_0 >= integer_of_int32(k_2_0)) and
           (i1_0 <= (integer_of_int32(n_1) - 1))))) ->
        (integer_of_int32(select(intP_intM_a_4_0, shift(a_1,
        i1_0))) >= integer_of_int32(select(intP_intM_a_4_0, shift(a_1,
        i2_0)))))))) and
   (("JC_69": bubble_sorted(a_1, integer_of_int32(k_2_0),
    (integer_of_int32(n_1) - 1), intP_intM_a_4_0)) and
    (("JC_70":
     (forall j_1:int.
       (((j_1 >= 0) and (j_1 < integer_of_int32(i_0_0))) ->
        (integer_of_int32(select(intP_intM_a_4_0, shift(a_1,
        j_1))) <= integer_of_int32(select(intP_intM_a_4_0, shift(a_1,
        integer_of_int32(i_0_0)))))))) and
     ("JC_74":
     (("JC_71": (integer_of_int32(i_0_0) >= 0)) and
      (("JC_72": (integer_of_int32(i_0_0) < integer_of_int32(k_2_0))) and
       ("JC_73": (integer_of_int32(i_0_0) <= integer_of_int32(n_1))))))))) ->
  (((-2147483648) <= (integer_of_int32(k_2_0) - 1)) and
   ((integer_of_int32(k_2_0) - 1) <= 2147483647)) ->
  forall result0:int32.
  (integer_of_int32(result0) = (integer_of_int32(k_2_0) - 1)) ->
  (integer_of_int32(i_0_0) < integer_of_int32(result0)) ->
  ((offset_min(intP_a_4_alloc_table, a_1) <= integer_of_int32(i_0_0)) and
   (integer_of_int32(i_0_0) <= offset_max(intP_a_4_alloc_table, a_1))) ->
  forall result1:int32.
  (result1 = select(intP_intM_a_4_0, shift(a_1, integer_of_int32(i_0_0)))) ->
  ((offset_min(intP_a_4_alloc_table, shift(a_1,
   integer_of_int32(i_0_0))) <= 1) and (1 <= offset_max(intP_a_4_alloc_table,
   shift(a_1, integer_of_int32(i_0_0))))) ->
  forall result2:int32.
  (result2 = select(intP_intM_a_4_0, shift(shift(a_1,
  integer_of_int32(i_0_0)), 1))) ->
  (integer_of_int32(result1) > integer_of_int32(result2)) ->
  ("JC_81": (integer_of_int32(n_1) >= 0)) ->
  ("JC_82":
  ((integer_of_int32(i_0_0) >= 0) and
   (integer_of_int32(i_0_0) <= (integer_of_int32(n_1) - 1)))) ->
  ("JC_83":
  (((integer_of_int32(i_0_0) + 1) >= 0) and
   ((integer_of_int32(i_0_0) + 1) <= (integer_of_int32(n_1) - 1)))) ->
  ("JC_84":
  ((offset_min(intP_a_4_alloc_table, a_1) <= 0) and
   (offset_max(intP_a_4_alloc_table, a_1) >= (integer_of_int32(n_1) - 1)))) ->
  (((-2147483648) <= (integer_of_int32(i_0_0) + 1)) and
   ((integer_of_int32(i_0_0) + 1) <= 2147483647)) ->
  forall result3:int32.
  (integer_of_int32(result3) = (integer_of_int32(i_0_0) + 1)) ->
  ("JC_10":
  (("JC_1": (integer_of_int32(n_1) >= 0)) and
   (("JC_2": (offset_min(intP_a_4_alloc_table, a_1) <= 0)) and
    (("JC_3": (offset_max(intP_a_4_alloc_table,
     a_1) >= (integer_of_int32(n_1) - 1))) and
     (("JC_4": dom(integer_of_int32(i_0_0), integer_of_int32(n_1))) and
      (("JC_5": dom(integer_of_int32(result3), integer_of_int32(n_1))) and
       (("JC_6": (offset_min(intP_a_4_alloc_table,
        a_1) <= integer_of_int32(i_0_0))) and
        (("JC_7": (offset_max(intP_a_4_alloc_table,
         a_1) >= integer_of_int32(i_0_0))) and
         (("JC_8": (offset_min(intP_a_4_alloc_table,
          a_1) <= integer_of_int32(result3))) and
          ("JC_9": (offset_max(intP_a_4_alloc_table,
          a_1) >= integer_of_int32(result3)))))))))))) ->
  forall intP_intM_a_4_1:(intP,
  int32) memory.
  ("JC_34":
  (("JC_32":
   (("JC_29":
    (forall i1:int.
      (dom(i1, integer_of_int32(n_1)) ->
       (exists i2:int.
         (dom(i2, integer_of_int32(n_1)) and
          (integer_of_int32(select(intP_intM_a_4_0, shift(a_1,
          i1))) = integer_of_int32(select(intP_intM_a_4_1, shift(a_1, i2))))))))) and
    (("JC_30": swapped(a_1, integer_of_int32(i_0_0),
     integer_of_int32(result3), intP_intM_a_4_1, intP_intM_a_4_0)) and
     ("JC_31":
     (forall k_1:int.
       (((0 <= k_1) and
         ((k_1 < integer_of_int32(n_1)) and
          ((k_1 <> integer_of_int32(i_0_0)) and
           (k_1 <> integer_of_int32(result3))))) ->
        (integer_of_int32(select(intP_intM_a_4_1, shift(a_1,
        k_1))) = integer_of_int32(select(intP_intM_a_4_0, shift(a_1, k_1)))))))))) and
   ("JC_33": not_assigns(intP_a_4_alloc_table, intP_intM_a_4_0,
   intP_intM_a_4_1, pset_union(pset_range(pset_singleton(a_1),
   integer_of_int32(result3), integer_of_int32(result3)),
   pset_range(pset_singleton(a_1), integer_of_int32(i_0_0),
   integer_of_int32(i_0_0))))))) ->
  (((-2147483648) <= (integer_of_int32(i_0_0) + 1)) and
   ((integer_of_int32(i_0_0) + 1) <= 2147483647)) ->
  forall result4:int32.
  (integer_of_int32(result4) = (integer_of_int32(i_0_0) + 1)) ->
  forall i_0_1:int32.
  (i_0_1 = result4) ->
  (0 <= ("JC_88": ((integer_of_int32(k_2_0) - integer_of_int32(i_0_0)) - 1)))

goal bubble_safety_po_15:
  forall a_1:intP pointer.
  forall n_1:int32.
  forall intP_a_4_alloc_table:intP alloc_table.
  ("JC_49":
  (("JC_46": (0 <= integer_of_int32(n_1))) and
   (("JC_47": (offset_min(intP_a_4_alloc_table, a_1) <= 0)) and
    ("JC_48": (offset_max(intP_a_4_alloc_table,
    a_1) >= (integer_of_int32(n_1) - 1)))))) ->
  forall k_2:int32.
  (k_2 = n_1) ->
  forall intP_intM_a_4:(intP,
  int32) memory.
  forall k_2_0:int32.
  ("JC_66": true) ->
  (("JC_59":
   (forall i2_1:int.
     (forall i1_2:int.
       (((i2_1 >= 0) and
         ((i2_1 < integer_of_int32(k_2_0)) and
          ((i1_2 >= integer_of_int32(k_2_0)) and
           (i1_2 < integer_of_int32(n_1))))) ->
        (integer_of_int32(select(intP_intM_a_4, shift(a_1,
        i1_2))) >= integer_of_int32(select(intP_intM_a_4, shift(a_1, i2_1)))))))) and
   (("JC_60":
    ((integer_of_int32(k_2_0) = integer_of_int32(n_1)) or
     (forall i1_1:int.
       (((i1_1 > integer_of_int32(k_2_0)) and (i1_1 < integer_of_int32(n_1))) ->
        (integer_of_int32(select(intP_intM_a_4, shift(a_1,
        integer_of_int32(k_2_0)))) <= integer_of_int32(select(intP_intM_a_4,
        shift(a_1, i1_1)))))))) and
    (("JC_61": bubble_sorted(a_1, integer_of_int32(k_2_0),
     (integer_of_int32(n_1) - 1), intP_intM_a_4)) and
     ("JC_64":
     (("JC_62": (integer_of_int32(k_2_0) >= 0)) and
      ("JC_63": (integer_of_int32(k_2_0) <= integer_of_int32(n_1)))))))) ->
  (integer_of_int32(k_2_0) > 0) ->
  forall result:int32.
  (integer_of_int32(result) = 0) ->
  forall i_0:int32.
  (i_0 = result) ->
  forall i_0_0:int32.
  forall intP_intM_a_4_0:(intP,
  int32) memory.
  ("JC_76": true) ->
  (("JC_68":
   (forall i1_0:int.
     (forall i2_0:int.
       (((i2_0 >= 0) and
         ((i2_0 < integer_of_int32(k_2_0)) and
          ((i1_0 >= integer_of_int32(k_2_0)) and
           (i1_0 <= (integer_of_int32(n_1) - 1))))) ->
        (integer_of_int32(select(intP_intM_a_4_0, shift(a_1,
        i1_0))) >= integer_of_int32(select(intP_intM_a_4_0, shift(a_1,
        i2_0)))))))) and
   (("JC_69": bubble_sorted(a_1, integer_of_int32(k_2_0),
    (integer_of_int32(n_1) - 1), intP_intM_a_4_0)) and
    (("JC_70":
     (forall j_1:int.
       (((j_1 >= 0) and (j_1 < integer_of_int32(i_0_0))) ->
        (integer_of_int32(select(intP_intM_a_4_0, shift(a_1,
        j_1))) <= integer_of_int32(select(intP_intM_a_4_0, shift(a_1,
        integer_of_int32(i_0_0)))))))) and
     ("JC_74":
     (("JC_71": (integer_of_int32(i_0_0) >= 0)) and
      (("JC_72": (integer_of_int32(i_0_0) < integer_of_int32(k_2_0))) and
       ("JC_73": (integer_of_int32(i_0_0) <= integer_of_int32(n_1))))))))) ->
  (((-2147483648) <= (integer_of_int32(k_2_0) - 1)) and
   ((integer_of_int32(k_2_0) - 1) <= 2147483647)) ->
  forall result0:int32.
  (integer_of_int32(result0) = (integer_of_int32(k_2_0) - 1)) ->
  (integer_of_int32(i_0_0) < integer_of_int32(result0)) ->
  ((offset_min(intP_a_4_alloc_table, a_1) <= integer_of_int32(i_0_0)) and
   (integer_of_int32(i_0_0) <= offset_max(intP_a_4_alloc_table, a_1))) ->
  forall result1:int32.
  (result1 = select(intP_intM_a_4_0, shift(a_1, integer_of_int32(i_0_0)))) ->
  ((offset_min(intP_a_4_alloc_table, shift(a_1,
   integer_of_int32(i_0_0))) <= 1) and (1 <= offset_max(intP_a_4_alloc_table,
   shift(a_1, integer_of_int32(i_0_0))))) ->
  forall result2:int32.
  (result2 = select(intP_intM_a_4_0, shift(shift(a_1,
  integer_of_int32(i_0_0)), 1))) ->
  (integer_of_int32(result1) > integer_of_int32(result2)) ->
  ("JC_81": (integer_of_int32(n_1) >= 0)) ->
  ("JC_82":
  ((integer_of_int32(i_0_0) >= 0) and
   (integer_of_int32(i_0_0) <= (integer_of_int32(n_1) - 1)))) ->
  ("JC_83":
  (((integer_of_int32(i_0_0) + 1) >= 0) and
   ((integer_of_int32(i_0_0) + 1) <= (integer_of_int32(n_1) - 1)))) ->
  ("JC_84":
  ((offset_min(intP_a_4_alloc_table, a_1) <= 0) and
   (offset_max(intP_a_4_alloc_table, a_1) >= (integer_of_int32(n_1) - 1)))) ->
  (((-2147483648) <= (integer_of_int32(i_0_0) + 1)) and
   ((integer_of_int32(i_0_0) + 1) <= 2147483647)) ->
  forall result3:int32.
  (integer_of_int32(result3) = (integer_of_int32(i_0_0) + 1)) ->
  ("JC_10":
  (("JC_1": (integer_of_int32(n_1) >= 0)) and
   (("JC_2": (offset_min(intP_a_4_alloc_table, a_1) <= 0)) and
    (("JC_3": (offset_max(intP_a_4_alloc_table,
     a_1) >= (integer_of_int32(n_1) - 1))) and
     (("JC_4": dom(integer_of_int32(i_0_0), integer_of_int32(n_1))) and
      (("JC_5": dom(integer_of_int32(result3), integer_of_int32(n_1))) and
       (("JC_6": (offset_min(intP_a_4_alloc_table,
        a_1) <= integer_of_int32(i_0_0))) and
        (("JC_7": (offset_max(intP_a_4_alloc_table,
         a_1) >= integer_of_int32(i_0_0))) and
         (("JC_8": (offset_min(intP_a_4_alloc_table,
          a_1) <= integer_of_int32(result3))) and
          ("JC_9": (offset_max(intP_a_4_alloc_table,
          a_1) >= integer_of_int32(result3)))))))))))) ->
  forall intP_intM_a_4_1:(intP,
  int32) memory.
  ("JC_34":
  (("JC_32":
   (("JC_29":
    (forall i1:int.
      (dom(i1, integer_of_int32(n_1)) ->
       (exists i2:int.
         (dom(i2, integer_of_int32(n_1)) and
          (integer_of_int32(select(intP_intM_a_4_0, shift(a_1,
          i1))) = integer_of_int32(select(intP_intM_a_4_1, shift(a_1, i2))))))))) and
    (("JC_30": swapped(a_1, integer_of_int32(i_0_0),
     integer_of_int32(result3), intP_intM_a_4_1, intP_intM_a_4_0)) and
     ("JC_31":
     (forall k_1:int.
       (((0 <= k_1) and
         ((k_1 < integer_of_int32(n_1)) and
          ((k_1 <> integer_of_int32(i_0_0)) and
           (k_1 <> integer_of_int32(result3))))) ->
        (integer_of_int32(select(intP_intM_a_4_1, shift(a_1,
        k_1))) = integer_of_int32(select(intP_intM_a_4_0, shift(a_1, k_1)))))))))) and
   ("JC_33": not_assigns(intP_a_4_alloc_table, intP_intM_a_4_0,
   intP_intM_a_4_1, pset_union(pset_range(pset_singleton(a_1),
   integer_of_int32(result3), integer_of_int32(result3)),
   pset_range(pset_singleton(a_1), integer_of_int32(i_0_0),
   integer_of_int32(i_0_0))))))) ->
  (((-2147483648) <= (integer_of_int32(i_0_0) + 1)) and
   ((integer_of_int32(i_0_0) + 1) <= 2147483647)) ->
  forall result4:int32.
  (integer_of_int32(result4) = (integer_of_int32(i_0_0) + 1)) ->
  forall i_0_1:int32.
  (i_0_1 = result4) ->
  (("JC_88": ((integer_of_int32(k_2_0) - integer_of_int32(i_0_1)) - 1)) < 
  ("JC_88": ((integer_of_int32(k_2_0) - integer_of_int32(i_0_0)) - 1)))

goal bubble_safety_po_16:
  forall a_1:intP pointer.
  forall n_1:int32.
  forall intP_a_4_alloc_table:intP alloc_table.
  ("JC_49":
  (("JC_46": (0 <= integer_of_int32(n_1))) and
   (("JC_47": (offset_min(intP_a_4_alloc_table, a_1) <= 0)) and
    ("JC_48": (offset_max(intP_a_4_alloc_table,
    a_1) >= (integer_of_int32(n_1) - 1)))))) ->
  forall k_2:int32.
  (k_2 = n_1) ->
  forall intP_intM_a_4:(intP,
  int32) memory.
  forall k_2_0:int32.
  ("JC_66": true) ->
  (("JC_59":
   (forall i2_1:int.
     (forall i1_2:int.
       (((i2_1 >= 0) and
         ((i2_1 < integer_of_int32(k_2_0)) and
          ((i1_2 >= integer_of_int32(k_2_0)) and
           (i1_2 < integer_of_int32(n_1))))) ->
        (integer_of_int32(select(intP_intM_a_4, shift(a_1,
        i1_2))) >= integer_of_int32(select(intP_intM_a_4, shift(a_1, i2_1)))))))) and
   (("JC_60":
    ((integer_of_int32(k_2_0) = integer_of_int32(n_1)) or
     (forall i1_1:int.
       (((i1_1 > integer_of_int32(k_2_0)) and (i1_1 < integer_of_int32(n_1))) ->
        (integer_of_int32(select(intP_intM_a_4, shift(a_1,
        integer_of_int32(k_2_0)))) <= integer_of_int32(select(intP_intM_a_4,
        shift(a_1, i1_1)))))))) and
    (("JC_61": bubble_sorted(a_1, integer_of_int32(k_2_0),
     (integer_of_int32(n_1) - 1), intP_intM_a_4)) and
     ("JC_64":
     (("JC_62": (integer_of_int32(k_2_0) >= 0)) and
      ("JC_63": (integer_of_int32(k_2_0) <= integer_of_int32(n_1)))))))) ->
  (integer_of_int32(k_2_0) > 0) ->
  forall result:int32.
  (integer_of_int32(result) = 0) ->
  forall i_0:int32.
  (i_0 = result) ->
  forall i_0_0:int32.
  forall intP_intM_a_4_0:(intP,
  int32) memory.
  ("JC_76": true) ->
  (("JC_68":
   (forall i1_0:int.
     (forall i2_0:int.
       (((i2_0 >= 0) and
         ((i2_0 < integer_of_int32(k_2_0)) and
          ((i1_0 >= integer_of_int32(k_2_0)) and
           (i1_0 <= (integer_of_int32(n_1) - 1))))) ->
        (integer_of_int32(select(intP_intM_a_4_0, shift(a_1,
        i1_0))) >= integer_of_int32(select(intP_intM_a_4_0, shift(a_1,
        i2_0)))))))) and
   (("JC_69": bubble_sorted(a_1, integer_of_int32(k_2_0),
    (integer_of_int32(n_1) - 1), intP_intM_a_4_0)) and
    (("JC_70":
     (forall j_1:int.
       (((j_1 >= 0) and (j_1 < integer_of_int32(i_0_0))) ->
        (integer_of_int32(select(intP_intM_a_4_0, shift(a_1,
        j_1))) <= integer_of_int32(select(intP_intM_a_4_0, shift(a_1,
        integer_of_int32(i_0_0)))))))) and
     ("JC_74":
     (("JC_71": (integer_of_int32(i_0_0) >= 0)) and
      (("JC_72": (integer_of_int32(i_0_0) < integer_of_int32(k_2_0))) and
       ("JC_73": (integer_of_int32(i_0_0) <= integer_of_int32(n_1))))))))) ->
  (((-2147483648) <= (integer_of_int32(k_2_0) - 1)) and
   ((integer_of_int32(k_2_0) - 1) <= 2147483647)) ->
  forall result0:int32.
  (integer_of_int32(result0) = (integer_of_int32(k_2_0) - 1)) ->
  (integer_of_int32(i_0_0) < integer_of_int32(result0)) ->
  ((offset_min(intP_a_4_alloc_table, a_1) <= integer_of_int32(i_0_0)) and
   (integer_of_int32(i_0_0) <= offset_max(intP_a_4_alloc_table, a_1))) ->
  forall result1:int32.
  (result1 = select(intP_intM_a_4_0, shift(a_1, integer_of_int32(i_0_0)))) ->
  ((offset_min(intP_a_4_alloc_table, shift(a_1,
   integer_of_int32(i_0_0))) <= 1) and (1 <= offset_max(intP_a_4_alloc_table,
   shift(a_1, integer_of_int32(i_0_0))))) ->
  forall result2:int32.
  (result2 = select(intP_intM_a_4_0, shift(shift(a_1,
  integer_of_int32(i_0_0)), 1))) ->
  (integer_of_int32(result1) <= integer_of_int32(result2)) ->
  ((-2147483648) <= (integer_of_int32(i_0_0) + 1))

goal bubble_safety_po_17:
  forall a_1:intP pointer.
  forall n_1:int32.
  forall intP_a_4_alloc_table:intP alloc_table.
  ("JC_49":
  (("JC_46": (0 <= integer_of_int32(n_1))) and
   (("JC_47": (offset_min(intP_a_4_alloc_table, a_1) <= 0)) and
    ("JC_48": (offset_max(intP_a_4_alloc_table,
    a_1) >= (integer_of_int32(n_1) - 1)))))) ->
  forall k_2:int32.
  (k_2 = n_1) ->
  forall intP_intM_a_4:(intP,
  int32) memory.
  forall k_2_0:int32.
  ("JC_66": true) ->
  (("JC_59":
   (forall i2_1:int.
     (forall i1_2:int.
       (((i2_1 >= 0) and
         ((i2_1 < integer_of_int32(k_2_0)) and
          ((i1_2 >= integer_of_int32(k_2_0)) and
           (i1_2 < integer_of_int32(n_1))))) ->
        (integer_of_int32(select(intP_intM_a_4, shift(a_1,
        i1_2))) >= integer_of_int32(select(intP_intM_a_4, shift(a_1, i2_1)))))))) and
   (("JC_60":
    ((integer_of_int32(k_2_0) = integer_of_int32(n_1)) or
     (forall i1_1:int.
       (((i1_1 > integer_of_int32(k_2_0)) and (i1_1 < integer_of_int32(n_1))) ->
        (integer_of_int32(select(intP_intM_a_4, shift(a_1,
        integer_of_int32(k_2_0)))) <= integer_of_int32(select(intP_intM_a_4,
        shift(a_1, i1_1)))))))) and
    (("JC_61": bubble_sorted(a_1, integer_of_int32(k_2_0),
     (integer_of_int32(n_1) - 1), intP_intM_a_4)) and
     ("JC_64":
     (("JC_62": (integer_of_int32(k_2_0) >= 0)) and
      ("JC_63": (integer_of_int32(k_2_0) <= integer_of_int32(n_1)))))))) ->
  (integer_of_int32(k_2_0) > 0) ->
  forall result:int32.
  (integer_of_int32(result) = 0) ->
  forall i_0:int32.
  (i_0 = result) ->
  forall i_0_0:int32.
  forall intP_intM_a_4_0:(intP,
  int32) memory.
  ("JC_76": true) ->
  (("JC_68":
   (forall i1_0:int.
     (forall i2_0:int.
       (((i2_0 >= 0) and
         ((i2_0 < integer_of_int32(k_2_0)) and
          ((i1_0 >= integer_of_int32(k_2_0)) and
           (i1_0 <= (integer_of_int32(n_1) - 1))))) ->
        (integer_of_int32(select(intP_intM_a_4_0, shift(a_1,
        i1_0))) >= integer_of_int32(select(intP_intM_a_4_0, shift(a_1,
        i2_0)))))))) and
   (("JC_69": bubble_sorted(a_1, integer_of_int32(k_2_0),
    (integer_of_int32(n_1) - 1), intP_intM_a_4_0)) and
    (("JC_70":
     (forall j_1:int.
       (((j_1 >= 0) and (j_1 < integer_of_int32(i_0_0))) ->
        (integer_of_int32(select(intP_intM_a_4_0, shift(a_1,
        j_1))) <= integer_of_int32(select(intP_intM_a_4_0, shift(a_1,
        integer_of_int32(i_0_0)))))))) and
     ("JC_74":
     (("JC_71": (integer_of_int32(i_0_0) >= 0)) and
      (("JC_72": (integer_of_int32(i_0_0) < integer_of_int32(k_2_0))) and
       ("JC_73": (integer_of_int32(i_0_0) <= integer_of_int32(n_1))))))))) ->
  (((-2147483648) <= (integer_of_int32(k_2_0) - 1)) and
   ((integer_of_int32(k_2_0) - 1) <= 2147483647)) ->
  forall result0:int32.
  (integer_of_int32(result0) = (integer_of_int32(k_2_0) - 1)) ->
  (integer_of_int32(i_0_0) < integer_of_int32(result0)) ->
  ((offset_min(intP_a_4_alloc_table, a_1) <= integer_of_int32(i_0_0)) and
   (integer_of_int32(i_0_0) <= offset_max(intP_a_4_alloc_table, a_1))) ->
  forall result1:int32.
  (result1 = select(intP_intM_a_4_0, shift(a_1, integer_of_int32(i_0_0)))) ->
  ((offset_min(intP_a_4_alloc_table, shift(a_1,
   integer_of_int32(i_0_0))) <= 1) and (1 <= offset_max(intP_a_4_alloc_table,
   shift(a_1, integer_of_int32(i_0_0))))) ->
  forall result2:int32.
  (result2 = select(intP_intM_a_4_0, shift(shift(a_1,
  integer_of_int32(i_0_0)), 1))) ->
  (integer_of_int32(result1) <= integer_of_int32(result2)) ->
  ((integer_of_int32(i_0_0) + 1) <= 2147483647)

goal bubble_safety_po_18:
  forall a_1:intP pointer.
  forall n_1:int32.
  forall intP_a_4_alloc_table:intP alloc_table.
  ("JC_49":
  (("JC_46": (0 <= integer_of_int32(n_1))) and
   (("JC_47": (offset_min(intP_a_4_alloc_table, a_1) <= 0)) and
    ("JC_48": (offset_max(intP_a_4_alloc_table,
    a_1) >= (integer_of_int32(n_1) - 1)))))) ->
  forall k_2:int32.
  (k_2 = n_1) ->
  forall intP_intM_a_4:(intP,
  int32) memory.
  forall k_2_0:int32.
  ("JC_66": true) ->
  (("JC_59":
   (forall i2_1:int.
     (forall i1_2:int.
       (((i2_1 >= 0) and
         ((i2_1 < integer_of_int32(k_2_0)) and
          ((i1_2 >= integer_of_int32(k_2_0)) and
           (i1_2 < integer_of_int32(n_1))))) ->
        (integer_of_int32(select(intP_intM_a_4, shift(a_1,
        i1_2))) >= integer_of_int32(select(intP_intM_a_4, shift(a_1, i2_1)))))))) and
   (("JC_60":
    ((integer_of_int32(k_2_0) = integer_of_int32(n_1)) or
     (forall i1_1:int.
       (((i1_1 > integer_of_int32(k_2_0)) and (i1_1 < integer_of_int32(n_1))) ->
        (integer_of_int32(select(intP_intM_a_4, shift(a_1,
        integer_of_int32(k_2_0)))) <= integer_of_int32(select(intP_intM_a_4,
        shift(a_1, i1_1)))))))) and
    (("JC_61": bubble_sorted(a_1, integer_of_int32(k_2_0),
     (integer_of_int32(n_1) - 1), intP_intM_a_4)) and
     ("JC_64":
     (("JC_62": (integer_of_int32(k_2_0) >= 0)) and
      ("JC_63": (integer_of_int32(k_2_0) <= integer_of_int32(n_1)))))))) ->
  (integer_of_int32(k_2_0) > 0) ->
  forall result:int32.
  (integer_of_int32(result) = 0) ->
  forall i_0:int32.
  (i_0 = result) ->
  forall i_0_0:int32.
  forall intP_intM_a_4_0:(intP,
  int32) memory.
  ("JC_76": true) ->
  (("JC_68":
   (forall i1_0:int.
     (forall i2_0:int.
       (((i2_0 >= 0) and
         ((i2_0 < integer_of_int32(k_2_0)) and
          ((i1_0 >= integer_of_int32(k_2_0)) and
           (i1_0 <= (integer_of_int32(n_1) - 1))))) ->
        (integer_of_int32(select(intP_intM_a_4_0, shift(a_1,
        i1_0))) >= integer_of_int32(select(intP_intM_a_4_0, shift(a_1,
        i2_0)))))))) and
   (("JC_69": bubble_sorted(a_1, integer_of_int32(k_2_0),
    (integer_of_int32(n_1) - 1), intP_intM_a_4_0)) and
    (("JC_70":
     (forall j_1:int.
       (((j_1 >= 0) and (j_1 < integer_of_int32(i_0_0))) ->
        (integer_of_int32(select(intP_intM_a_4_0, shift(a_1,
        j_1))) <= integer_of_int32(select(intP_intM_a_4_0, shift(a_1,
        integer_of_int32(i_0_0)))))))) and
     ("JC_74":
     (("JC_71": (integer_of_int32(i_0_0) >= 0)) and
      (("JC_72": (integer_of_int32(i_0_0) < integer_of_int32(k_2_0))) and
       ("JC_73": (integer_of_int32(i_0_0) <= integer_of_int32(n_1))))))))) ->
  (((-2147483648) <= (integer_of_int32(k_2_0) - 1)) and
   ((integer_of_int32(k_2_0) - 1) <= 2147483647)) ->
  forall result0:int32.
  (integer_of_int32(result0) = (integer_of_int32(k_2_0) - 1)) ->
  (integer_of_int32(i_0_0) < integer_of_int32(result0)) ->
  ((offset_min(intP_a_4_alloc_table, a_1) <= integer_of_int32(i_0_0)) and
   (integer_of_int32(i_0_0) <= offset_max(intP_a_4_alloc_table, a_1))) ->
  forall result1:int32.
  (result1 = select(intP_intM_a_4_0, shift(a_1, integer_of_int32(i_0_0)))) ->
  ((offset_min(intP_a_4_alloc_table, shift(a_1,
   integer_of_int32(i_0_0))) <= 1) and (1 <= offset_max(intP_a_4_alloc_table,
   shift(a_1, integer_of_int32(i_0_0))))) ->
  forall result2:int32.
  (result2 = select(intP_intM_a_4_0, shift(shift(a_1,
  integer_of_int32(i_0_0)), 1))) ->
  (integer_of_int32(result1) <= integer_of_int32(result2)) ->
  (((-2147483648) <= (integer_of_int32(i_0_0) + 1)) and
   ((integer_of_int32(i_0_0) + 1) <= 2147483647)) ->
  forall result3:int32.
  (integer_of_int32(result3) = (integer_of_int32(i_0_0) + 1)) ->
  forall i_0_1:int32.
  (i_0_1 = result3) ->
  (0 <= ("JC_88": ((integer_of_int32(k_2_0) - integer_of_int32(i_0_0)) - 1)))

goal bubble_safety_po_19:
  forall a_1:intP pointer.
  forall n_1:int32.
  forall intP_a_4_alloc_table:intP alloc_table.
  ("JC_49":
  (("JC_46": (0 <= integer_of_int32(n_1))) and
   (("JC_47": (offset_min(intP_a_4_alloc_table, a_1) <= 0)) and
    ("JC_48": (offset_max(intP_a_4_alloc_table,
    a_1) >= (integer_of_int32(n_1) - 1)))))) ->
  forall k_2:int32.
  (k_2 = n_1) ->
  forall intP_intM_a_4:(intP,
  int32) memory.
  forall k_2_0:int32.
  ("JC_66": true) ->
  (("JC_59":
   (forall i2_1:int.
     (forall i1_2:int.
       (((i2_1 >= 0) and
         ((i2_1 < integer_of_int32(k_2_0)) and
          ((i1_2 >= integer_of_int32(k_2_0)) and
           (i1_2 < integer_of_int32(n_1))))) ->
        (integer_of_int32(select(intP_intM_a_4, shift(a_1,
        i1_2))) >= integer_of_int32(select(intP_intM_a_4, shift(a_1, i2_1)))))))) and
   (("JC_60":
    ((integer_of_int32(k_2_0) = integer_of_int32(n_1)) or
     (forall i1_1:int.
       (((i1_1 > integer_of_int32(k_2_0)) and (i1_1 < integer_of_int32(n_1))) ->
        (integer_of_int32(select(intP_intM_a_4, shift(a_1,
        integer_of_int32(k_2_0)))) <= integer_of_int32(select(intP_intM_a_4,
        shift(a_1, i1_1)))))))) and
    (("JC_61": bubble_sorted(a_1, integer_of_int32(k_2_0),
     (integer_of_int32(n_1) - 1), intP_intM_a_4)) and
     ("JC_64":
     (("JC_62": (integer_of_int32(k_2_0) >= 0)) and
      ("JC_63": (integer_of_int32(k_2_0) <= integer_of_int32(n_1)))))))) ->
  (integer_of_int32(k_2_0) > 0) ->
  forall result:int32.
  (integer_of_int32(result) = 0) ->
  forall i_0:int32.
  (i_0 = result) ->
  forall i_0_0:int32.
  forall intP_intM_a_4_0:(intP,
  int32) memory.
  ("JC_76": true) ->
  (("JC_68":
   (forall i1_0:int.
     (forall i2_0:int.
       (((i2_0 >= 0) and
         ((i2_0 < integer_of_int32(k_2_0)) and
          ((i1_0 >= integer_of_int32(k_2_0)) and
           (i1_0 <= (integer_of_int32(n_1) - 1))))) ->
        (integer_of_int32(select(intP_intM_a_4_0, shift(a_1,
        i1_0))) >= integer_of_int32(select(intP_intM_a_4_0, shift(a_1,
        i2_0)))))))) and
   (("JC_69": bubble_sorted(a_1, integer_of_int32(k_2_0),
    (integer_of_int32(n_1) - 1), intP_intM_a_4_0)) and
    (("JC_70":
     (forall j_1:int.
       (((j_1 >= 0) and (j_1 < integer_of_int32(i_0_0))) ->
        (integer_of_int32(select(intP_intM_a_4_0, shift(a_1,
        j_1))) <= integer_of_int32(select(intP_intM_a_4_0, shift(a_1,
        integer_of_int32(i_0_0)))))))) and
     ("JC_74":
     (("JC_71": (integer_of_int32(i_0_0) >= 0)) and
      (("JC_72": (integer_of_int32(i_0_0) < integer_of_int32(k_2_0))) and
       ("JC_73": (integer_of_int32(i_0_0) <= integer_of_int32(n_1))))))))) ->
  (((-2147483648) <= (integer_of_int32(k_2_0) - 1)) and
   ((integer_of_int32(k_2_0) - 1) <= 2147483647)) ->
  forall result0:int32.
  (integer_of_int32(result0) = (integer_of_int32(k_2_0) - 1)) ->
  (integer_of_int32(i_0_0) < integer_of_int32(result0)) ->
  ((offset_min(intP_a_4_alloc_table, a_1) <= integer_of_int32(i_0_0)) and
   (integer_of_int32(i_0_0) <= offset_max(intP_a_4_alloc_table, a_1))) ->
  forall result1:int32.
  (result1 = select(intP_intM_a_4_0, shift(a_1, integer_of_int32(i_0_0)))) ->
  ((offset_min(intP_a_4_alloc_table, shift(a_1,
   integer_of_int32(i_0_0))) <= 1) and (1 <= offset_max(intP_a_4_alloc_table,
   shift(a_1, integer_of_int32(i_0_0))))) ->
  forall result2:int32.
  (result2 = select(intP_intM_a_4_0, shift(shift(a_1,
  integer_of_int32(i_0_0)), 1))) ->
  (integer_of_int32(result1) <= integer_of_int32(result2)) ->
  (((-2147483648) <= (integer_of_int32(i_0_0) + 1)) and
   ((integer_of_int32(i_0_0) + 1) <= 2147483647)) ->
  forall result3:int32.
  (integer_of_int32(result3) = (integer_of_int32(i_0_0) + 1)) ->
  forall i_0_1:int32.
  (i_0_1 = result3) ->
  (("JC_88": ((integer_of_int32(k_2_0) - integer_of_int32(i_0_1)) - 1)) < 
  ("JC_88": ((integer_of_int32(k_2_0) - integer_of_int32(i_0_0)) - 1)))

goal bubble_safety_po_20:
  forall a_1:intP pointer.
  forall n_1:int32.
  forall intP_a_4_alloc_table:intP alloc_table.
  ("JC_49":
  (("JC_46": (0 <= integer_of_int32(n_1))) and
   (("JC_47": (offset_min(intP_a_4_alloc_table, a_1) <= 0)) and
    ("JC_48": (offset_max(intP_a_4_alloc_table,
    a_1) >= (integer_of_int32(n_1) - 1)))))) ->
  forall k_2:int32.
  (k_2 = n_1) ->
  forall intP_intM_a_4:(intP,
  int32) memory.
  forall k_2_0:int32.
  ("JC_66": true) ->
  (("JC_59":
   (forall i2_1:int.
     (forall i1_2:int.
       (((i2_1 >= 0) and
         ((i2_1 < integer_of_int32(k_2_0)) and
          ((i1_2 >= integer_of_int32(k_2_0)) and
           (i1_2 < integer_of_int32(n_1))))) ->
        (integer_of_int32(select(intP_intM_a_4, shift(a_1,
        i1_2))) >= integer_of_int32(select(intP_intM_a_4, shift(a_1, i2_1)))))))) and
   (("JC_60":
    ((integer_of_int32(k_2_0) = integer_of_int32(n_1)) or
     (forall i1_1:int.
       (((i1_1 > integer_of_int32(k_2_0)) and (i1_1 < integer_of_int32(n_1))) ->
        (integer_of_int32(select(intP_intM_a_4, shift(a_1,
        integer_of_int32(k_2_0)))) <= integer_of_int32(select(intP_intM_a_4,
        shift(a_1, i1_1)))))))) and
    (("JC_61": bubble_sorted(a_1, integer_of_int32(k_2_0),
     (integer_of_int32(n_1) - 1), intP_intM_a_4)) and
     ("JC_64":
     (("JC_62": (integer_of_int32(k_2_0) >= 0)) and
      ("JC_63": (integer_of_int32(k_2_0) <= integer_of_int32(n_1)))))))) ->
  (integer_of_int32(k_2_0) > 0) ->
  forall result:int32.
  (integer_of_int32(result) = 0) ->
  forall i_0:int32.
  (i_0 = result) ->
  forall i_0_0:int32.
  forall intP_intM_a_4_0:(intP,
  int32) memory.
  ("JC_76": true) ->
  (("JC_68":
   (forall i1_0:int.
     (forall i2_0:int.
       (((i2_0 >= 0) and
         ((i2_0 < integer_of_int32(k_2_0)) and
          ((i1_0 >= integer_of_int32(k_2_0)) and
           (i1_0 <= (integer_of_int32(n_1) - 1))))) ->
        (integer_of_int32(select(intP_intM_a_4_0, shift(a_1,
        i1_0))) >= integer_of_int32(select(intP_intM_a_4_0, shift(a_1,
        i2_0)))))))) and
   (("JC_69": bubble_sorted(a_1, integer_of_int32(k_2_0),
    (integer_of_int32(n_1) - 1), intP_intM_a_4_0)) and
    (("JC_70":
     (forall j_1:int.
       (((j_1 >= 0) and (j_1 < integer_of_int32(i_0_0))) ->
        (integer_of_int32(select(intP_intM_a_4_0, shift(a_1,
        j_1))) <= integer_of_int32(select(intP_intM_a_4_0, shift(a_1,
        integer_of_int32(i_0_0)))))))) and
     ("JC_74":
     (("JC_71": (integer_of_int32(i_0_0) >= 0)) and
      (("JC_72": (integer_of_int32(i_0_0) < integer_of_int32(k_2_0))) and
       ("JC_73": (integer_of_int32(i_0_0) <= integer_of_int32(n_1))))))))) ->
  (((-2147483648) <= (integer_of_int32(k_2_0) - 1)) and
   ((integer_of_int32(k_2_0) - 1) <= 2147483647)) ->
  forall result0:int32.
  (integer_of_int32(result0) = (integer_of_int32(k_2_0) - 1)) ->
  (integer_of_int32(i_0_0) >= integer_of_int32(result0)) ->
  (((-2147483648) <= (integer_of_int32(k_2_0) - 1)) and
   ((integer_of_int32(k_2_0) - 1) <= 2147483647)) ->
  forall result1:int32.
  (integer_of_int32(result1) = (integer_of_int32(k_2_0) - 1)) ->
  forall k_2_1:int32.
  (k_2_1 = result1) ->
  (0 <= ("JC_90": (integer_of_int32(k_2_0) - 1)))

goal bubble_safety_po_21:
  forall a_1:intP pointer.
  forall n_1:int32.
  forall intP_a_4_alloc_table:intP alloc_table.
  ("JC_49":
  (("JC_46": (0 <= integer_of_int32(n_1))) and
   (("JC_47": (offset_min(intP_a_4_alloc_table, a_1) <= 0)) and
    ("JC_48": (offset_max(intP_a_4_alloc_table,
    a_1) >= (integer_of_int32(n_1) - 1)))))) ->
  forall k_2:int32.
  (k_2 = n_1) ->
  forall intP_intM_a_4:(intP,
  int32) memory.
  forall k_2_0:int32.
  ("JC_66": true) ->
  (("JC_59":
   (forall i2_1:int.
     (forall i1_2:int.
       (((i2_1 >= 0) and
         ((i2_1 < integer_of_int32(k_2_0)) and
          ((i1_2 >= integer_of_int32(k_2_0)) and
           (i1_2 < integer_of_int32(n_1))))) ->
        (integer_of_int32(select(intP_intM_a_4, shift(a_1,
        i1_2))) >= integer_of_int32(select(intP_intM_a_4, shift(a_1, i2_1)))))))) and
   (("JC_60":
    ((integer_of_int32(k_2_0) = integer_of_int32(n_1)) or
     (forall i1_1:int.
       (((i1_1 > integer_of_int32(k_2_0)) and (i1_1 < integer_of_int32(n_1))) ->
        (integer_of_int32(select(intP_intM_a_4, shift(a_1,
        integer_of_int32(k_2_0)))) <= integer_of_int32(select(intP_intM_a_4,
        shift(a_1, i1_1)))))))) and
    (("JC_61": bubble_sorted(a_1, integer_of_int32(k_2_0),
     (integer_of_int32(n_1) - 1), intP_intM_a_4)) and
     ("JC_64":
     (("JC_62": (integer_of_int32(k_2_0) >= 0)) and
      ("JC_63": (integer_of_int32(k_2_0) <= integer_of_int32(n_1)))))))) ->
  (integer_of_int32(k_2_0) > 0) ->
  forall result:int32.
  (integer_of_int32(result) = 0) ->
  forall i_0:int32.
  (i_0 = result) ->
  forall i_0_0:int32.
  forall intP_intM_a_4_0:(intP,
  int32) memory.
  ("JC_76": true) ->
  (("JC_68":
   (forall i1_0:int.
     (forall i2_0:int.
       (((i2_0 >= 0) and
         ((i2_0 < integer_of_int32(k_2_0)) and
          ((i1_0 >= integer_of_int32(k_2_0)) and
           (i1_0 <= (integer_of_int32(n_1) - 1))))) ->
        (integer_of_int32(select(intP_intM_a_4_0, shift(a_1,
        i1_0))) >= integer_of_int32(select(intP_intM_a_4_0, shift(a_1,
        i2_0)))))))) and
   (("JC_69": bubble_sorted(a_1, integer_of_int32(k_2_0),
    (integer_of_int32(n_1) - 1), intP_intM_a_4_0)) and
    (("JC_70":
     (forall j_1:int.
       (((j_1 >= 0) and (j_1 < integer_of_int32(i_0_0))) ->
        (integer_of_int32(select(intP_intM_a_4_0, shift(a_1,
        j_1))) <= integer_of_int32(select(intP_intM_a_4_0, shift(a_1,
        integer_of_int32(i_0_0)))))))) and
     ("JC_74":
     (("JC_71": (integer_of_int32(i_0_0) >= 0)) and
      (("JC_72": (integer_of_int32(i_0_0) < integer_of_int32(k_2_0))) and
       ("JC_73": (integer_of_int32(i_0_0) <= integer_of_int32(n_1))))))))) ->
  (((-2147483648) <= (integer_of_int32(k_2_0) - 1)) and
   ((integer_of_int32(k_2_0) - 1) <= 2147483647)) ->
  forall result0:int32.
  (integer_of_int32(result0) = (integer_of_int32(k_2_0) - 1)) ->
  (integer_of_int32(i_0_0) >= integer_of_int32(result0)) ->
  (((-2147483648) <= (integer_of_int32(k_2_0) - 1)) and
   ((integer_of_int32(k_2_0) - 1) <= 2147483647)) ->
  forall result1:int32.
  (integer_of_int32(result1) = (integer_of_int32(k_2_0) - 1)) ->
  forall k_2_1:int32.
  (k_2_1 = result1) ->
  (("JC_90": (integer_of_int32(k_2_1) - 1)) < ("JC_90":
                                              (integer_of_int32(k_2_0) - 1)))

goal swap3_ensures_default_po_1:
  forall a_0:intP pointer.
  forall n_2:int32.
  forall i:int32.
  forall j:int32.
  forall intP_a_0_2_alloc_table:intP alloc_table.
  forall intP_intM_a_0_2:(intP,
  int32) memory.
  ("JC_21":
  (("JC_12": (integer_of_int32(n_2) >= 0)) and
   (("JC_13": (offset_min(intP_a_0_2_alloc_table, a_0) <= 0)) and
    (("JC_14": (offset_max(intP_a_0_2_alloc_table,
     a_0) >= (integer_of_int32(n_2) - 1))) and
     (("JC_15": dom(integer_of_int32(i), integer_of_int32(n_2))) and
      (("JC_16": dom(integer_of_int32(j), integer_of_int32(n_2))) and
       (("JC_17": (offset_min(intP_a_0_2_alloc_table,
        a_0) <= integer_of_int32(i))) and
        (("JC_18": (offset_max(intP_a_0_2_alloc_table,
         a_0) >= integer_of_int32(i))) and
         (("JC_19": (offset_min(intP_a_0_2_alloc_table,
          a_0) <= integer_of_int32(j))) and
          ("JC_20": (offset_max(intP_a_0_2_alloc_table,
          a_0) >= integer_of_int32(j)))))))))))) ->
  forall result:int32.
  (result = select(intP_intM_a_0_2, shift(a_0, integer_of_int32(j)))) ->
  forall d:int32.
  (d = result) ->
  forall result0:int32.
  (result0 = select(intP_intM_a_0_2, shift(a_0, integer_of_int32(i)))) ->
  forall intP_intM_a_0_2_0:(intP,
  int32) memory.
  (intP_intM_a_0_2_0 = store(intP_intM_a_0_2, shift(a_0,
  integer_of_int32(j)), result0)) ->
  forall intP_intM_a_0_2_1:(intP,
  int32) memory.
  (intP_intM_a_0_2_1 = store(intP_intM_a_0_2_0, shift(a_0,
  integer_of_int32(i)), d)) ->
  forall i1:int.
  dom(i1, integer_of_int32(n_2)) ->
  ("JC_28":
  ("JC_26":
  ("JC_23":
  (exists i2:int.
    (dom(i2, integer_of_int32(n_2)) and
     (integer_of_int32(select(intP_intM_a_0_2, shift(a_0,
     i1))) = integer_of_int32(select(intP_intM_a_0_2_1, shift(a_0, i2)))))))))

goal swap3_ensures_default_po_2:
  forall a_0:intP pointer.
  forall n_2:int32.
  forall i:int32.
  forall j:int32.
  forall intP_a_0_2_alloc_table:intP alloc_table.
  forall intP_intM_a_0_2:(intP,
  int32) memory.
  ("JC_21":
  (("JC_12": (integer_of_int32(n_2) >= 0)) and
   (("JC_13": (offset_min(intP_a_0_2_alloc_table, a_0) <= 0)) and
    (("JC_14": (offset_max(intP_a_0_2_alloc_table,
     a_0) >= (integer_of_int32(n_2) - 1))) and
     (("JC_15": dom(integer_of_int32(i), integer_of_int32(n_2))) and
      (("JC_16": dom(integer_of_int32(j), integer_of_int32(n_2))) and
       (("JC_17": (offset_min(intP_a_0_2_alloc_table,
        a_0) <= integer_of_int32(i))) and
        (("JC_18": (offset_max(intP_a_0_2_alloc_table,
         a_0) >= integer_of_int32(i))) and
         (("JC_19": (offset_min(intP_a_0_2_alloc_table,
          a_0) <= integer_of_int32(j))) and
          ("JC_20": (offset_max(intP_a_0_2_alloc_table,
          a_0) >= integer_of_int32(j)))))))))))) ->
  forall result:int32.
  (result = select(intP_intM_a_0_2, shift(a_0, integer_of_int32(j)))) ->
  forall d:int32.
  (d = result) ->
  forall result0:int32.
  (result0 = select(intP_intM_a_0_2, shift(a_0, integer_of_int32(i)))) ->
  forall intP_intM_a_0_2_0:(intP,
  int32) memory.
  (intP_intM_a_0_2_0 = store(intP_intM_a_0_2, shift(a_0,
  integer_of_int32(j)), result0)) ->
  forall intP_intM_a_0_2_1:(intP,
  int32) memory.
  (intP_intM_a_0_2_1 = store(intP_intM_a_0_2_0, shift(a_0,
  integer_of_int32(i)), d)) ->
  ("JC_28":
  ("JC_26":
  ("JC_24": swapped(a_0, integer_of_int32(i), integer_of_int32(j),
  intP_intM_a_0_2_1, intP_intM_a_0_2))))

goal swap3_ensures_default_po_3:
  forall a_0:intP pointer.
  forall n_2:int32.
  forall i:int32.
  forall j:int32.
  forall intP_a_0_2_alloc_table:intP alloc_table.
  forall intP_intM_a_0_2:(intP,
  int32) memory.
  ("JC_21":
  (("JC_12": (integer_of_int32(n_2) >= 0)) and
   (("JC_13": (offset_min(intP_a_0_2_alloc_table, a_0) <= 0)) and
    (("JC_14": (offset_max(intP_a_0_2_alloc_table,
     a_0) >= (integer_of_int32(n_2) - 1))) and
     (("JC_15": dom(integer_of_int32(i), integer_of_int32(n_2))) and
      (("JC_16": dom(integer_of_int32(j), integer_of_int32(n_2))) and
       (("JC_17": (offset_min(intP_a_0_2_alloc_table,
        a_0) <= integer_of_int32(i))) and
        (("JC_18": (offset_max(intP_a_0_2_alloc_table,
         a_0) >= integer_of_int32(i))) and
         (("JC_19": (offset_min(intP_a_0_2_alloc_table,
          a_0) <= integer_of_int32(j))) and
          ("JC_20": (offset_max(intP_a_0_2_alloc_table,
          a_0) >= integer_of_int32(j)))))))))))) ->
  forall result:int32.
  (result = select(intP_intM_a_0_2, shift(a_0, integer_of_int32(j)))) ->
  forall d:int32.
  (d = result) ->
  forall result0:int32.
  (result0 = select(intP_intM_a_0_2, shift(a_0, integer_of_int32(i)))) ->
  forall intP_intM_a_0_2_0:(intP,
  int32) memory.
  (intP_intM_a_0_2_0 = store(intP_intM_a_0_2, shift(a_0,
  integer_of_int32(j)), result0)) ->
  forall intP_intM_a_0_2_1:(intP,
  int32) memory.
  (intP_intM_a_0_2_1 = store(intP_intM_a_0_2_0, shift(a_0,
  integer_of_int32(i)), d)) ->
  forall k_1:int.
  ((0 <= k_1) and
   ((k_1 < integer_of_int32(n_2)) and
    ((k_1 <> integer_of_int32(i)) and (k_1 <> integer_of_int32(j))))) ->
  ("JC_28":
  ("JC_26":
  ("JC_25": (integer_of_int32(select(intP_intM_a_0_2_1, shift(a_0,
  k_1))) = integer_of_int32(select(intP_intM_a_0_2, shift(a_0, k_1)))))))

goal swap3_ensures_default_po_4:
  forall a_0:intP pointer.
  forall n_2:int32.
  forall i:int32.
  forall j:int32.
  forall intP_a_0_2_alloc_table:intP alloc_table.
  forall intP_intM_a_0_2:(intP,
  int32) memory.
  ("JC_21":
  (("JC_12": (integer_of_int32(n_2) >= 0)) and
   (("JC_13": (offset_min(intP_a_0_2_alloc_table, a_0) <= 0)) and
    (("JC_14": (offset_max(intP_a_0_2_alloc_table,
     a_0) >= (integer_of_int32(n_2) - 1))) and
     (("JC_15": dom(integer_of_int32(i), integer_of_int32(n_2))) and
      (("JC_16": dom(integer_of_int32(j), integer_of_int32(n_2))) and
       (("JC_17": (offset_min(intP_a_0_2_alloc_table,
        a_0) <= integer_of_int32(i))) and
        (("JC_18": (offset_max(intP_a_0_2_alloc_table,
         a_0) >= integer_of_int32(i))) and
         (("JC_19": (offset_min(intP_a_0_2_alloc_table,
          a_0) <= integer_of_int32(j))) and
          ("JC_20": (offset_max(intP_a_0_2_alloc_table,
          a_0) >= integer_of_int32(j)))))))))))) ->
  forall result:int32.
  (result = select(intP_intM_a_0_2, shift(a_0, integer_of_int32(j)))) ->
  forall d:int32.
  (d = result) ->
  forall result0:int32.
  (result0 = select(intP_intM_a_0_2, shift(a_0, integer_of_int32(i)))) ->
  forall intP_intM_a_0_2_0:(intP,
  int32) memory.
  (intP_intM_a_0_2_0 = store(intP_intM_a_0_2, shift(a_0,
  integer_of_int32(j)), result0)) ->
  forall intP_intM_a_0_2_1:(intP,
  int32) memory.
  (intP_intM_a_0_2_1 = store(intP_intM_a_0_2_0, shift(a_0,
  integer_of_int32(i)), d)) ->
  ("JC_28":
  ("JC_27": not_assigns(intP_a_0_2_alloc_table, intP_intM_a_0_2,
  intP_intM_a_0_2_1, pset_union(pset_range(pset_singleton(a_0),
  integer_of_int32(j), integer_of_int32(j)), pset_range(pset_singleton(a_0),
  integer_of_int32(i), integer_of_int32(i))))))

goal swap3_safety_po_1:
  forall a_0:intP pointer.
  forall n_2:int32.
  forall i:int32.
  forall j:int32.
  forall intP_a_0_2_alloc_table:intP alloc_table.
  ("JC_21":
  (("JC_12": (integer_of_int32(n_2) >= 0)) and
   (("JC_13": (offset_min(intP_a_0_2_alloc_table, a_0) <= 0)) and
    (("JC_14": (offset_max(intP_a_0_2_alloc_table,
     a_0) >= (integer_of_int32(n_2) - 1))) and
     (("JC_15": dom(integer_of_int32(i), integer_of_int32(n_2))) and
      (("JC_16": dom(integer_of_int32(j), integer_of_int32(n_2))) and
       (("JC_17": (offset_min(intP_a_0_2_alloc_table,
        a_0) <= integer_of_int32(i))) and
        (("JC_18": (offset_max(intP_a_0_2_alloc_table,
         a_0) >= integer_of_int32(i))) and
         (("JC_19": (offset_min(intP_a_0_2_alloc_table,
          a_0) <= integer_of_int32(j))) and
          ("JC_20": (offset_max(intP_a_0_2_alloc_table,
          a_0) >= integer_of_int32(j)))))))))))) ->
  (offset_min(intP_a_0_2_alloc_table, a_0) <= integer_of_int32(j))

goal swap3_safety_po_2:
  forall a_0:intP pointer.
  forall n_2:int32.
  forall i:int32.
  forall j:int32.
  forall intP_a_0_2_alloc_table:intP alloc_table.
  ("JC_21":
  (("JC_12": (integer_of_int32(n_2) >= 0)) and
   (("JC_13": (offset_min(intP_a_0_2_alloc_table, a_0) <= 0)) and
    (("JC_14": (offset_max(intP_a_0_2_alloc_table,
     a_0) >= (integer_of_int32(n_2) - 1))) and
     (("JC_15": dom(integer_of_int32(i), integer_of_int32(n_2))) and
      (("JC_16": dom(integer_of_int32(j), integer_of_int32(n_2))) and
       (("JC_17": (offset_min(intP_a_0_2_alloc_table,
        a_0) <= integer_of_int32(i))) and
        (("JC_18": (offset_max(intP_a_0_2_alloc_table,
         a_0) >= integer_of_int32(i))) and
         (("JC_19": (offset_min(intP_a_0_2_alloc_table,
          a_0) <= integer_of_int32(j))) and
          ("JC_20": (offset_max(intP_a_0_2_alloc_table,
          a_0) >= integer_of_int32(j)))))))))))) ->
  (integer_of_int32(j) <= offset_max(intP_a_0_2_alloc_table, a_0))

goal swap3_safety_po_3:
  forall a_0:intP pointer.
  forall n_2:int32.
  forall i:int32.
  forall j:int32.
  forall intP_a_0_2_alloc_table:intP alloc_table.
  forall intP_intM_a_0_2:(intP,
  int32) memory.
  ("JC_21":
  (("JC_12": (integer_of_int32(n_2) >= 0)) and
   (("JC_13": (offset_min(intP_a_0_2_alloc_table, a_0) <= 0)) and
    (("JC_14": (offset_max(intP_a_0_2_alloc_table,
     a_0) >= (integer_of_int32(n_2) - 1))) and
     (("JC_15": dom(integer_of_int32(i), integer_of_int32(n_2))) and
      (("JC_16": dom(integer_of_int32(j), integer_of_int32(n_2))) and
       (("JC_17": (offset_min(intP_a_0_2_alloc_table,
        a_0) <= integer_of_int32(i))) and
        (("JC_18": (offset_max(intP_a_0_2_alloc_table,
         a_0) >= integer_of_int32(i))) and
         (("JC_19": (offset_min(intP_a_0_2_alloc_table,
          a_0) <= integer_of_int32(j))) and
          ("JC_20": (offset_max(intP_a_0_2_alloc_table,
          a_0) >= integer_of_int32(j)))))))))))) ->
  ((offset_min(intP_a_0_2_alloc_table, a_0) <= integer_of_int32(j)) and
   (integer_of_int32(j) <= offset_max(intP_a_0_2_alloc_table, a_0))) ->
  forall result:int32.
  (result = select(intP_intM_a_0_2, shift(a_0, integer_of_int32(j)))) ->
  forall d:int32.
  (d = result) ->
  (offset_min(intP_a_0_2_alloc_table, a_0) <= integer_of_int32(i))

goal swap3_safety_po_4:
  forall a_0:intP pointer.
  forall n_2:int32.
  forall i:int32.
  forall j:int32.
  forall intP_a_0_2_alloc_table:intP alloc_table.
  forall intP_intM_a_0_2:(intP,
  int32) memory.
  ("JC_21":
  (("JC_12": (integer_of_int32(n_2) >= 0)) and
   (("JC_13": (offset_min(intP_a_0_2_alloc_table, a_0) <= 0)) and
    (("JC_14": (offset_max(intP_a_0_2_alloc_table,
     a_0) >= (integer_of_int32(n_2) - 1))) and
     (("JC_15": dom(integer_of_int32(i), integer_of_int32(n_2))) and
      (("JC_16": dom(integer_of_int32(j), integer_of_int32(n_2))) and
       (("JC_17": (offset_min(intP_a_0_2_alloc_table,
        a_0) <= integer_of_int32(i))) and
        (("JC_18": (offset_max(intP_a_0_2_alloc_table,
         a_0) >= integer_of_int32(i))) and
         (("JC_19": (offset_min(intP_a_0_2_alloc_table,
          a_0) <= integer_of_int32(j))) and
          ("JC_20": (offset_max(intP_a_0_2_alloc_table,
          a_0) >= integer_of_int32(j)))))))))))) ->
  ((offset_min(intP_a_0_2_alloc_table, a_0) <= integer_of_int32(j)) and
   (integer_of_int32(j) <= offset_max(intP_a_0_2_alloc_table, a_0))) ->
  forall result:int32.
  (result = select(intP_intM_a_0_2, shift(a_0, integer_of_int32(j)))) ->
  forall d:int32.
  (d = result) ->
  (integer_of_int32(i) <= offset_max(intP_a_0_2_alloc_table, a_0))

