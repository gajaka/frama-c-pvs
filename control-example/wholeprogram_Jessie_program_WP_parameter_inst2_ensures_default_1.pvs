WP_parameter_inst2_ensures_default: THEORY
 BEGIN
  IMPORTING int@Int
  IMPORTING int@Abs
  IMPORTING int@ComputerDivision
  IMPORTING real@Real
  % do not edit above this line
  
  % Why3 unit
  unit: TYPE+ = []
  
  % Why3 infix_sldt
  infix_sldt(x:real, y:real): real = real@Real.infix_sl(x, y)
  
  % Why3 inv
  inv(x:real): real = real@Real.inv(x)
  
  % Why3 zwf_zero
  zwf_zero(a:int, b:int): bool = (0 <= b) AND (a <  b)
  
  % Why3 alloc_table
  alloc_table[t:TYPE+]: TYPE+
  
  % Why3 pointer
  pointer[t:TYPE+]: TYPE+
  
  % Why3 block
  block[t:TYPE+]: TYPE+
  
  % Why3 base_block
  base_block[t:TYPE+](x:pointer[t]): block[t]
  
  % Why3 offset_max
  offset_max[t:TYPE+](x:alloc_table[t], x1:pointer[t]): int
  
  % Why3 offset_min
  offset_min[t:TYPE+](x:alloc_table[t], x1:pointer[t]): int
  
  % Why3 valid
  valid[t:TYPE+](a:alloc_table[t], p:pointer[t]): bool = (offset_min(a,
    p) <= 0) AND (offset_max(a, p) >= 0)
  
  % Why3 same_block
  same_block[t:TYPE+](p:pointer[t], q:pointer[t]): bool =
    (base_block(p) = base_block(q))
  
  % Why3 sub_pointer
  sub_pointer[t:TYPE+](x:pointer[t], x1:pointer[t]): int
  
  % Why3 shift
  shift[t:TYPE+](x:pointer[t], x1:int): pointer[t]
  
  % Why3 null
  null[t:TYPE+]: pointer[t]
  
  % Why3 pointer_address
  pointer_address[t:TYPE+](x:pointer[t]): pointer[[]]
  
  % Why3 absolute_address
  absolute_address(x:int): pointer[[]]
  
  % Why3 address
  address[t:TYPE+](x:pointer[t]): int
  
  % Why3 address_injective
  address_injective[t:TYPE+]: AXIOM FORALL (p:pointer[t]):
    FORALL (q:pointer[t]): (p = q) <=> (address(p) = address(q))
  
  % Why3 address_shift_lt
  address_shift_lt[t:TYPE+]: AXIOM FORALL (p:pointer[t]): FORALL (i:int):
    FORALL (j:int): (address(shift(p, i)) <  address(shift(p, j))) <=>
    (i <  j)
  
  % Why3 address_shift_le
  address_shift_le[t:TYPE+]: AXIOM FORALL (p:pointer[t]): FORALL (i:int):
    FORALL (j:int): (address(shift(p, i)) <= address(shift(p, j))) <=>
    (i <= j)
  
  % Why3 shift_zero
  shift_zero[t:TYPE+]: AXIOM FORALL (p:pointer[t]): (shift(p, 0) = p)
  
  % Why3 shift_shift
  shift_shift[t:TYPE+]: AXIOM FORALL (p:pointer[t]): FORALL (i:int):
    FORALL (j:int): (shift(shift(p, i), j) = shift(p, (i + j)))
  
  % Why3 offset_max_shift
  offset_max_shift[t:TYPE+]: AXIOM FORALL (a:alloc_table[t]):
    FORALL (p:pointer[t]): FORALL (i:int): (offset_max(a, shift(p,
    i)) = (offset_max(a, p) - i))
  
  % Why3 offset_min_shift
  offset_min_shift[t:TYPE+]: AXIOM FORALL (a:alloc_table[t]):
    FORALL (p:pointer[t]): FORALL (i:int): (offset_min(a, shift(p,
    i)) = (offset_min(a, p) - i))
  
  % Why3 neq_shift
  neq_shift[t:TYPE+]: AXIOM FORALL (p:pointer[t]): FORALL (i:int):
    FORALL (j:int): (NOT (i = j)) => NOT (shift(p, i) = shift(p, j))
  
  % Why3 null_not_valid
  null_not_valid[t:TYPE+]: AXIOM FORALL (a:alloc_table[t]): NOT valid(a,
    (null :: pointer[t]))
  
  % Why3 null_pointer
  null_pointer[t:TYPE+]: AXIOM FORALL (a:alloc_table[t]): (offset_min(a,
    (null :: pointer[t])) >= 0) AND (offset_max(a,
    (null :: pointer[t])) <= (-2))
  
  % Why3 eq_pointer_bool
  eq_pointer_bool[t:TYPE+](x:pointer[t], x1:pointer[t]): bool
  
  % Why3 neq_pointer_bool
  neq_pointer_bool[t:TYPE+](x:pointer[t], x1:pointer[t]): bool
  
  % Why3 eq_pointer_bool_def
  eq_pointer_bool_def[t:TYPE+]: AXIOM FORALL (p1:pointer[t]):
    FORALL (p2:pointer[t]): (eq_pointer_bool(p1, p2) = TRUE) <=> (p1 = p2)
  
  % Why3 neq_pointer_bool_def
  neq_pointer_bool_def[t:TYPE+]: AXIOM FORALL (p1:pointer[t]):
    FORALL (p2:pointer[t]): (neq_pointer_bool(p1, p2) = TRUE) <=>
    NOT (p1 = p2)
  
  % Why3 same_block_shift_right
  same_block_shift_right[t:TYPE+]: AXIOM FORALL (p:pointer[t]):
    FORALL (q:pointer[t]): FORALL (i:int): same_block(p, q) => same_block(p,
    shift(q, i))
  
  % Why3 same_block_shift_left
  same_block_shift_left[t:TYPE+]: AXIOM FORALL (p:pointer[t]):
    FORALL (q:pointer[t]): FORALL (i:int): same_block(q, p) =>
    same_block(shift(q, i), p)
  
  % Why3 sub_pointer_shift
  sub_pointer_shift[t:TYPE+]: AXIOM FORALL (p:pointer[t], q:pointer[t]):
    same_block(p, q) => (p = shift(q, sub_pointer(p, q)))
  
  % Why3 sub_pointer_self
  sub_pointer_self[t:TYPE+]: AXIOM FORALL (p:pointer[t]): (sub_pointer(p,
    p) = 0)
  
  % Why3 sub_pointer_zero
  sub_pointer_zero[t:TYPE+]: AXIOM FORALL (p:pointer[t], q:pointer[t]):
    same_block(p, q) => ((sub_pointer(p, q) = 0) => (p = q))
  
  % Why3 sub_pointer_shift_left
  sub_pointer_shift_left[t:TYPE+]: AXIOM FORALL (p:pointer[t], q:pointer[t],
    i:int): (sub_pointer(shift(p, i), q) = (sub_pointer(p, q) + i))
  
  % Why3 sub_pointer_shift_right
  sub_pointer_shift_right[t:TYPE+]: AXIOM FORALL (p:pointer[t], q:pointer[t],
    i:int): (sub_pointer(p, shift(q, i)) = (sub_pointer(p, q) - i))
  
  % Why3 sub_pointer_neg
  sub_pointer_neg[t:TYPE+]: AXIOM FORALL (p:pointer[t], q:pointer[t]):
    (sub_pointer(p, q) = (-sub_pointer(q, p)))
  
  % Why3 memory
  memory[t:TYPE+, v:TYPE+]: TYPE+
  
  % Why3 select
  select[t:TYPE+, v:TYPE+](x:memory[t, v], x1:pointer[t]): v
  
  % Why3 store
  store[t:TYPE+, v:TYPE+](x:memory[t, v], x1:pointer[t], x2:v): memory[t, v]
  
  % Why3 select_store_eq
  select_store_eq[t:TYPE+, v:TYPE+]: AXIOM FORALL (m:memory[t, v]):
    FORALL (p1:pointer[t]): FORALL (p2:pointer[t]): FORALL (a:v):
    (p1 = p2) => (select(store(m, p1, a), p2) = a)
  
  % Why3 select_store_neq
  select_store_neq[t:TYPE+, v:TYPE+]: AXIOM FORALL (m:memory[t, v]):
    FORALL (p1:pointer[t]): FORALL (p2:pointer[t]): FORALL (a:v):
    (NOT (p1 = p2)) => (select(store(m, p1, a), p2) = select(m, p2))
  
  % Why3 pset
  pset[t:TYPE+]: TYPE+
  
  % Why3 pset_empty
  pset_empty[t:TYPE+]: pset[t]
  
  % Why3 pset_singleton
  pset_singleton[t:TYPE+](x:pointer[t]): pset[t]
  
  % Why3 pset_deref
  pset_deref[t:TYPE+, v:TYPE+](x:memory[t, pointer[v]], x1:pset[t]): pset[v]
  
  % Why3 pset_union
  pset_union[t:TYPE+](x:pset[t], x1:pset[t]): pset[t]
  
  % Why3 pset_all
  pset_all[z:TYPE+](x:pset[z]): pset[z]
  
  % Why3 pset_range
  pset_range[t:TYPE+](x:pset[t], x1:int, x2:int): pset[t]
  
  % Why3 pset_range_left
  pset_range_left[z:TYPE+](x:pset[z], x1:int): pset[z]
  
  % Why3 pset_range_right
  pset_range_right[z:TYPE+](x:pset[z], x1:int): pset[z]
  
  % Why3 in_pset
  in_pset[t:TYPE+](x:pointer[t], x1:pset[t]): bool
  
  % Why3 valid_pset
  valid_pset[t:TYPE+](x:alloc_table[t], x1:pset[t]): bool
  
  % Why3 pset_disjoint
  pset_disjoint[t:TYPE+](ps1:pset[t], ps2:pset[t]): bool =
    FORALL (p:pointer[t]): NOT (in_pset(p, ps1) AND in_pset(p, ps2))
  
  % Why3 pset_included
  pset_included[t:TYPE+](ps1:pset[t], ps2:pset[t]): bool =
    FORALL (p:pointer[t]): in_pset(p, ps1) => in_pset(p, ps2)
  
  % Why3 pset_included_self
  pset_included_self[t:TYPE+]: AXIOM FORALL (ps:pset[t]): pset_included(ps,
    ps)
  
  % Why3 pset_included_range
  pset_included_range[t:TYPE+]: AXIOM FORALL (ps:pset[t]): FORALL (a:int,
    b:int, c:int, d:int): ((c <= a) AND (b <= d)) =>
    pset_included(pset_range(ps, a, b), pset_range(ps, c, d))
  
  % Why3 pset_included_range_all
  pset_included_range_all[t:TYPE+]: AXIOM FORALL (ps:pset[t], a:int, b:int):
    pset_included(pset_range(ps, a, b), pset_all(ps))
  
  % Why3 in_pset_empty
  in_pset_empty[t:TYPE+]: AXIOM FORALL (p:pointer[t]): NOT in_pset(p,
    (pset_empty :: pset[t]))
  
  % Why3 in_pset_singleton
  in_pset_singleton[t:TYPE+]: AXIOM FORALL (p:pointer[t]):
    FORALL (q:pointer[t]): in_pset(p, pset_singleton(q)) <=> (p = q)
  
  % Why3 in_pset_deref
  in_pset_deref[t:TYPE+, v:TYPE+]: AXIOM FORALL (p:pointer[v]):
    FORALL (m:memory[t, pointer[v]]): FORALL (q:pset[t]): in_pset(p,
    pset_deref(m, q)) <=> EXISTS (r:pointer[t]): in_pset(r, q) AND
    (p = select(m, r))
  
  % Why3 in_pset_all
  in_pset_all[t:TYPE+]: AXIOM FORALL (p:pointer[t]): FORALL (q:pset[t]):
    in_pset(p, pset_all(q)) <=> EXISTS (i:int): EXISTS (r:pointer[t]):
    in_pset(r, q) AND (p = shift(r, i))
  
  % Why3 in_pset_range
  in_pset_range[t:TYPE+]: AXIOM FORALL (p:pointer[t]): FORALL (q:pset[t]):
    FORALL (a:int): FORALL (b:int): in_pset(p, pset_range(q, a, b)) <=>
    EXISTS (i:int): EXISTS (r:pointer[t]): (a <= i) AND ((i <= b) AND
    (in_pset(r, q) AND (p = shift(r, i))))
  
  % Why3 in_pset_range_left
  in_pset_range_left[t:TYPE+]: AXIOM FORALL (p:pointer[t]):
    FORALL (q:pset[t]): FORALL (b:int): in_pset(p, pset_range_left(q, b)) <=>
    EXISTS (i:int): EXISTS (r:pointer[t]): (i <= b) AND (in_pset(r, q) AND
    (p = shift(r, i)))
  
  % Why3 in_pset_range_right
  in_pset_range_right[t:TYPE+]: AXIOM FORALL (p:pointer[t]):
    FORALL (q:pset[t]): FORALL (a:int): in_pset(p, pset_range_right(q,
    a)) <=> EXISTS (i:int): EXISTS (r:pointer[t]): (a <= i) AND (in_pset(r,
    q) AND (p = shift(r, i)))
  
  % Why3 in_pset_union
  in_pset_union[t:TYPE+]: AXIOM FORALL (p:pointer[t]): FORALL (s1:pset[t]):
    FORALL (s2:pset[t]): in_pset(p, pset_union(s1, s2)) <=> (in_pset(p,
    s1) OR in_pset(p, s2))
  
  % Why3 valid_pset_empty
  valid_pset_empty[t:TYPE+]: AXIOM FORALL (a:alloc_table[t]): valid_pset(a,
    (pset_empty :: pset[t]))
  
  % Why3 valid_pset_singleton
  valid_pset_singleton[t:TYPE+]: AXIOM FORALL (a:alloc_table[t]):
    FORALL (p:pointer[t]): valid_pset(a, pset_singleton(p)) <=> valid(a, p)
  
  % Why3 valid_pset_deref
  valid_pset_deref[t:TYPE+, v:TYPE+]: AXIOM FORALL (a:alloc_table[v]):
    FORALL (m:memory[t, pointer[v]]): FORALL (q:pset[t]): valid_pset(a,
    pset_deref(m, q)) <=> FORALL (r:pointer[t]): FORALL (p:pointer[v]):
    (in_pset(r, q) AND (p = select(m, r))) => valid(a, p)
  
  % Why3 valid_pset_range
  valid_pset_range[t:TYPE+]: AXIOM FORALL (a:alloc_table[t]):
    FORALL (q:pset[t]): FORALL (c:int): FORALL (d:int): valid_pset(a,
    pset_range(q, c, d)) <=> FORALL (i:int): FORALL (r:pointer[t]):
    (in_pset(r, q) AND ((c <= i) AND (i <= d))) => valid(a, shift(r, i))
  
  % Why3 valid_pset_union
  valid_pset_union[t:TYPE+]: AXIOM FORALL (a:alloc_table[t]):
    FORALL (s1:pset[t]): FORALL (s2:pset[t]): valid_pset(a, pset_union(s1,
    s2)) <=> (valid_pset(a, s1) AND valid_pset(a, s2))
  
  % Why3 not_assigns
  not_assigns[t:TYPE+, v:TYPE+](a:alloc_table[t], m1:memory[t, v],
    m2:memory[t, v], l:pset[t]): bool = FORALL (p:pointer[t]): (valid(a,
    p) AND NOT in_pset(p, l)) => (select(m2, p) = select(m1, p))
  
  % Why3 not_assigns_refl
  not_assigns_refl[t:TYPE+, v:TYPE+]: AXIOM FORALL (a:alloc_table[t]):
    FORALL (m:memory[t, v]): FORALL (l:pset[t]): not_assigns(a, m, m, l)
  
  % Why3 not_assigns_trans
  not_assigns_trans[t:TYPE+, v:TYPE+]: AXIOM FORALL (a:alloc_table[t]):
    FORALL (m1:memory[t, v]): FORALL (m2:memory[t, v]): FORALL (m3:memory[t,
    v]): FORALL (l:pset[t]): not_assigns(a, m1, m2, l) => (not_assigns(a, m2,
    m3, l) => not_assigns(a, m1, m3, l))
  
  % Why3 full_separated
  full_separated[t1:TYPE+, t2:TYPE+](x:pointer[t1], x1:pointer[t2]): bool
  
  % Why3 full_separated_shift1
  full_separated_shift1[z:TYPE+]: AXIOM FORALL (p:pointer[z]):
    FORALL (q:pointer[z]): FORALL (i:int): full_separated(p, q) =>
    full_separated(p, shift(q, i))
  
  % Why3 full_separated_shift2
  full_separated_shift2[z:TYPE+]: AXIOM FORALL (p:pointer[z]):
    FORALL (q:pointer[z]): FORALL (i:int): full_separated(p, q) =>
    full_separated(shift(q, i), p)
  
  % Why3 full_separated_shift3
  full_separated_shift3[z:TYPE+]: AXIOM FORALL (p:pointer[z]):
    FORALL (q:pointer[z]): FORALL (i:int): full_separated(q, p) =>
    full_separated(shift(q, i), p)
  
  % Why3 full_separated_shift4
  full_separated_shift4[z:TYPE+]: AXIOM FORALL (p:pointer[z]):
    FORALL (q:pointer[z]): FORALL (i:int): full_separated(q, p) =>
    full_separated(p, shift(q, i))
  
  % Why3 tag_table
  tag_table[t:TYPE+]: TYPE+
  
  % Why3 tag_id
  tag_id[t:TYPE+]: TYPE+
  
  % Why3 int_of_tag
  int_of_tag[t:TYPE+](x:tag_id[t]): int
  
  % Why3 typeof
  typeof[t:TYPE+](x:tag_table[t], x1:pointer[t]): tag_id[t]
  
  % Why3 parenttag
  parenttag[t:TYPE+](x:tag_id[t], x1:tag_id[t]): bool
  
  % Why3 subtag
  subtag[t:TYPE+](x:tag_id[t], x1:tag_id[t]): bool
  
  % Why3 subtag_bool
  subtag_bool[t:TYPE+](x:tag_id[t], x1:tag_id[t]): bool
  
  % Why3 subtag_bool_def
  subtag_bool_def[t:TYPE+]: AXIOM FORALL (t1:tag_id[t]):
    FORALL (t2:tag_id[t]): (subtag_bool(t1, t2) = TRUE) <=> subtag(t1, t2)
  
  % Why3 subtag_refl
  subtag_refl[t:TYPE+]: AXIOM FORALL (t1:tag_id[t]): subtag(t1, t1)
  
  % Why3 subtag_parent
  subtag_parent[t:TYPE+]: AXIOM FORALL (t1:tag_id[t]): FORALL (t2:tag_id[t]):
    FORALL (t3:tag_id[t]): subtag(t1, t2) => (parenttag(t2, t3) => subtag(t1,
    t3))
  
  % Why3 instanceof
  instanceof[t:TYPE+](a:tag_table[t], p:pointer[t], t1:tag_id[t]): bool =
    subtag(typeof(a, p), t1)
  
  % Why3 downcast
  downcast[t:TYPE+](x:tag_table[t], x1:pointer[t], x2:tag_id[t]): pointer[t]
  
  % Why3 downcast_instanceof
  downcast_instanceof[t:TYPE+]: AXIOM FORALL (a:tag_table[t]):
    FORALL (p:pointer[t]): FORALL (s:tag_id[t]): instanceof(a, p, s) =>
    (downcast(a, p, s) = p)
  
  % Why3 bottom_tag
  bottom_tag[a:TYPE+]: tag_id[a]
  
  % Why3 bottom_tag_axiom
  bottom_tag_axiom[t:TYPE+]: AXIOM FORALL (t1:tag_id[t]): subtag(t1,
    (bottom_tag :: tag_id[t]))
  
  % Why3 root_tag
  root_tag[t:TYPE+](t1:tag_id[t]): bool = parenttag(t1,
    (bottom_tag :: tag_id[t]))
  
  % Why3 root_subtag
  root_subtag[t:TYPE+]: AXIOM FORALL (a:tag_id[t]): FORALL (b:tag_id[t]):
    FORALL (c:tag_id[t]): root_tag(a) => (root_tag(b) => ((NOT (a = b)) =>
    (subtag(c, a) => NOT subtag(c, b))))
  
  % Why3 fully_packed
  fully_packed[a:TYPE+](tag_table1:tag_table[a], usmutable:memory[a,
    tag_id[a]], this:pointer[a]): bool = (select(usmutable,
    this) = typeof(tag_table1, this))
  
  % Why3 bw_compl
  bw_compl(x:int): int
  
  % Why3 bw_and
  bw_and(x:int, x1:int): int
  
  % Why3 bw_and_not_null
  bw_and_not_null: AXIOM FORALL (a:int): FORALL (b:int): (NOT (bw_and(a,
    b) = 0)) => ((NOT (a = 0)) AND NOT (b = 0))
  
  % Why3 bw_xor
  bw_xor(x:int, x1:int): int
  
  % Why3 bw_or
  bw_or(x:int, x1:int): int
  
  % Why3 lsl
  lsl(x:int, x1:int): int
  
  % Why3 lsl_left_positive_returns_positive
  lsl_left_positive_returns_positive: AXIOM FORALL (a:int): FORALL (b:int):
    ((0 <= a) AND (0 <= b)) => (0 <= lsl(a, b))
  
  % Why3 lsl_left_positive_monotone
  lsl_left_positive_monotone: AXIOM FORALL (a1:int): FORALL (a2:int):
    FORALL (b:int): ((0 <= a1) AND ((a1 <= a2) AND (0 <= b))) => (lsl(a1,
    b) <= lsl(a2, b))
  
  % Why3 lsr
  lsr(x:int, x1:int): int
  
  % Why3 lsr_left_positive_returns_positive
  lsr_left_positive_returns_positive: AXIOM FORALL (a:int): FORALL (b:int):
    ((0 <= a) AND (0 <= b)) => (0 <= lsr(a, b))
  
  % Why3 lsr_left_positive_decreases
  lsr_left_positive_decreases: AXIOM FORALL (a:int): FORALL (b:int):
    ((0 <= a) AND (0 <= b)) => (lsr(a, b) <= a)
  
  % Why3 asr
  asr(x:int, x1:int): int
  
  % Why3 asr_positive_on_positive
  asr_positive_on_positive: AXIOM FORALL (a:int): FORALL (b:int):
    ((0 <= a) AND (0 <= b)) => (0 <= asr(a, b))
  
  % Why3 asr_decreases_on_positive
  asr_decreases_on_positive: AXIOM FORALL (a:int): FORALL (b:int):
    ((0 <= a) AND (0 <= b)) => (asr(a, b) <= a)
  
  % Why3 asr_lsr_same_on_positive
  asr_lsr_same_on_positive: AXIOM FORALL (a:int): FORALL (b:int):
    ((0 <= a) AND (0 <= b)) => (asr(a, b) = lsr(a, b))
  
  % Why3 lsl_of_lsr_decreases_on_positive
  lsl_of_lsr_decreases_on_positive: AXIOM FORALL (a:int): FORALL (b:int):
    ((0 <= a) AND (0 <= b)) => (lsl(lsr(a, b), b) <= a)
  
  % Why3 lsr_of_lsl_identity_on_positive
  lsr_of_lsl_identity_on_positive: AXIOM FORALL (a:int): FORALL (b:int):
    ((0 <= a) AND (0 <= b)) => (lsr(lsl(a, b), b) = a)
  
  % Why3 alloc_extends
  alloc_extends[t:TYPE+](x:alloc_table[t], x1:alloc_table[t]): bool
  
  % Why3 alloc_fresh
  alloc_fresh[t:TYPE+](a:alloc_table[t], p:pointer[t], n:int): bool =
    FORALL (i:int): ((0 <= i) AND (i <  n)) => NOT valid(a, shift(p, i))
  
  % Why3 alloc_extends_offset_min
  alloc_extends_offset_min[t:TYPE+]: AXIOM FORALL (a1:alloc_table[t]):
    FORALL (a2:alloc_table[t]): alloc_extends(a1, a2) =>
    FORALL (p:pointer[t]): valid(a1, p) => (offset_min(a1,
    p) = offset_min(a2, p))
  
  % Why3 alloc_extends_offset_max
  alloc_extends_offset_max[t:TYPE+]: AXIOM FORALL (a1:alloc_table[t]):
    FORALL (a2:alloc_table[t]): alloc_extends(a1, a2) =>
    FORALL (p:pointer[t]): valid(a1, p) => (offset_max(a1,
    p) = offset_max(a2, p))
  
  % Why3 alloc_extends_not_assigns_empty
  alloc_extends_not_assigns_empty[t:TYPE+,
    v:TYPE+]: AXIOM FORALL (a1:alloc_table[t]): FORALL (a2:alloc_table[t]):
    FORALL (m1:memory[t, v]): FORALL (m2:memory[t, v]): FORALL (l:pset[t]):
    FORALL (p:pointer[t]): FORALL (n:int): (alloc_extends(a1, a2) AND
    (alloc_fresh(a1, p, n) AND (not_assigns(a2, m1, m2, l) AND
    pset_included(l, pset_all(pset_singleton(p)))))) => not_assigns(a1, m1,
    m2, (pset_empty :: pset[t]))
  
  % Why3 alloc_extends_except
  alloc_extends_except[t:TYPE+](x:alloc_table[t], x1:alloc_table[t],
    x2:pset[t]): bool
  
  % Why3 alloc_extends_except_offset_min
  alloc_extends_except_offset_min[t:TYPE+]: AXIOM FORALL (a1:alloc_table[t]):
    FORALL (a2:alloc_table[t]): FORALL (l:pset[t]): alloc_extends_except(a1,
    a2, l) => FORALL (p:pointer[t]): (valid(a1, p) AND NOT in_pset(p, l)) =>
    (offset_min(a1, p) = offset_min(a2, p))
  
  % Why3 alloc_extends_except_offset_max
  alloc_extends_except_offset_max[t:TYPE+]: AXIOM FORALL (a1:alloc_table[t]):
    FORALL (a2:alloc_table[t]): FORALL (l:pset[t]): alloc_extends_except(a1,
    a2, l) => FORALL (p:pointer[t]): (valid(a1, p) AND NOT in_pset(p, l)) =>
    (offset_max(a1, p) = offset_max(a2, p))
  
  % Why3 mybag
  mybag[a:TYPE+]: TYPE+
  
  % Why3 in_mybag
  in_mybag[a:TYPE+](x:a, x1:mybag[a]): bool
  
  % Why3 disj_mybag
  disj_mybag[a:TYPE+](x:mybag[a], x1:mybag[a]): bool
  
  % Why3 disj_sym
  disj_sym[a:TYPE+]: AXIOM FORALL (s1:mybag[a], s2:mybag[a]): disj_mybag(s1,
    s2) => disj_mybag(s2, s1)
  
  % Why3 sub_mybag
  sub_mybag[a:TYPE+](x:mybag[a], x1:mybag[a]): bool
  
  % Why3 sub_refl
  sub_refl[a:TYPE+]: AXIOM FORALL (sa:mybag[pointer[a]]): sub_mybag(sa, sa)
  
  % Why3 sub_disj
  sub_disj[a:TYPE+]: AXIOM FORALL (s1:mybag[a], s2:mybag[a], s3:mybag[a]):
    disj_mybag(s1, s3) => (sub_mybag(s2, s3) => disj_mybag(s1, s2))
  
  % Why3 sub_in
  sub_in[a:TYPE+]: AXIOM FORALL (s1:mybag[a], s2:mybag[a]): FORALL (p:a):
    (NOT in_mybag(p, s2)) => (sub_mybag(s1, s2) => NOT in_mybag(p, s1))
  
  % Why3 sub_sub
  sub_sub[a:TYPE+]: AXIOM FORALL (s1:mybag[a], s2:mybag[a], s3:mybag[a]):
    sub_mybag(s1, s2) => (sub_mybag(s2, s3) => sub_mybag(s1, s3))
  
  % Why3 frame_between
  frame_between[a:TYPE+, b:TYPE+](x:mybag[pointer[a]], x1:memory[a, b],
    x2:memory[a, b]): bool
  
  % Why3 frame_between_refl
  frame_between_refl[a:TYPE+, b:TYPE+]: AXIOM FORALL (sa:mybag[pointer[a]]):
    FORALL (m:memory[a, b]): frame_between(sa, m, m)
  
  % Why3 frame_between_gen
  frame_between_gen[a:TYPE+, b:TYPE+]: AXIOM FORALL (sa:mybag[pointer[a]]):
    FORALL (m1:memory[a, b], m2:memory[a, b]): FORALL (p:pointer[a]):
    FORALL (v:b): frame_between(sa, m1, m2) => (in_mybag(p, sa) =>
    frame_between(sa, store(m1, p, v), m2))
  
  % Why3 frame_between_gen2
  frame_between_gen2[a:TYPE+, b:TYPE+]: AXIOM FORALL (sa:mybag[pointer[a]]):
    FORALL (m1:memory[a, b], m2:memory[a, b], m3:memory[a, b]):
    frame_between(sa, m1, m2) => (frame_between(sa, m2, m3) =>
    frame_between(sa, m1, m3))
  
  % Why3 frame_between_gen_sub1
  frame_between_gen_sub1[a:TYPE+,
    b:TYPE+]: AXIOM FORALL (s12:mybag[pointer[a]], s23:mybag[pointer[a]],
    s13:mybag[pointer[a]]): FORALL (m1:memory[a, b], m2:memory[a, b],
    m3:memory[a, b]): sub_mybag(s12, s13) => (frame_between(s12, m1, m2) =>
    (frame_between(s23, m2, m3) => frame_between(s13, m1, m3)))
  
  % Why3 frame_between_gen_sub2
  frame_between_gen_sub2[a:TYPE+,
    b:TYPE+]: AXIOM FORALL (s12:mybag[pointer[a]], s23:mybag[pointer[a]],
    s13:mybag[pointer[a]]): FORALL (m1:memory[a, b], m2:memory[a, b],
    m3:memory[a, b]): frame_between(s12, m1, m2) => (sub_mybag(s23, s13) =>
    (frame_between(s23, m2, m3) => frame_between(s13, m1, m3)))
  
  % Why3 frame_between_pointer
  frame_between_pointer[a:TYPE+,
    b:TYPE+]: AXIOM FORALL (sa:mybag[pointer[a]]): FORALL (m1:memory[a, b],
    m2:memory[a, b]): FORALL (p:pointer[a]): frame_between(sa, m1, m2) =>
    ((NOT in_mybag(p, sa)) => (select(m1, p) = select(m2, p)))
  
  % Why3 frame_between_sub
  frame_between_sub[a:TYPE+, b:TYPE+]: AXIOM FORALL (sa:mybag[pointer[a]]):
    FORALL (sb:mybag[pointer[a]]): FORALL (m1:memory[a, b], m2:memory[a, b]):
    frame_between(sa, m1, m2) => (sub_mybag(sa, sb) => frame_between(sb, m1,
    m2))
  
  % Why3 charp
  charp: TYPE+
  
  % Why3 floatp
  floatp: TYPE+
  
  % Why3 matrix
  matrix: TYPE+
  
  % Why3 padding
  padding: TYPE+
  
  % Why3 unsigned_charp
  unsigned_charp: TYPE+
  
  % Why3 vector
  vector: TYPE+
  
  % Why3 voidp
  voidp: TYPE+
  
  % Why3 mat_of_2x2_scalar
  mat_of_2x2_scalar(x:real, x1:real, x2:real, x3:real): matrix
  
  % Why3 usac
  usac: matrix = mat_of_2x2_scalar(2, 3, 3, 5)
  
  % Why3 usp_0
  usp_0: matrix = mat_of_2x2_scalar(4, 2, 5, 3)
  
  % Why3 mat_mult
  mat_mult(x:matrix, x1:matrix): matrix
  
  % Why3 mat_inv
  mat_inv(x:matrix): matrix
  
  % Why3 transpose1
  transpose1(x:matrix): matrix
  
  % Why3 usq
  usq: matrix = mat_mult(mat_inv(transpose1(usac)), mat_mult(usp_0,
    mat_inv(usac)))
  
  % Why3 usvconcat
  usvconcat(x:vector, x1:vector): vector
  
  % Why3 charp_tag
  charp_tag: tag_id[charp]
  
  % Why3 charp_int
  charp_int: AXIOM (int_of_tag(charp_tag) = 1)
  
  % Why3 charp_of_pointer_address
  charp_of_pointer_address(x:pointer[[]]): pointer[charp]
  
  % Why3 charp_of_pointer_address_of_pointer_addr
  charp_of_pointer_address_of_pointer_addr: AXIOM FORALL (p:pointer[charp]):
    (p = charp_of_pointer_address(pointer_address(p)))
  
  % Why3 charp_parenttag_bottom
  charp_parenttag_bottom: AXIOM parenttag(charp_tag,
    (bottom_tag :: tag_id[charp]))
  
  % Why3 charp_tags
  charp_tags: AXIOM FORALL (x:pointer[charp]):
    FORALL (charp_tag_table:tag_table[charp]): instanceof(charp_tag_table, x,
    charp_tag)
  
  % Why3 eye
  eye(x:int): matrix
  
  % Why3 floatp_tag
  floatp_tag: tag_id[floatp]
  
  % Why3 floatp_int
  floatp_int: AXIOM (int_of_tag(floatp_tag) = 1)
  
  % Why3 floatp_of_pointer_address
  floatp_of_pointer_address(x:pointer[[]]): pointer[floatp]
  
  % Why3 floatp_of_pointer_address_of_pointer_addr
  floatp_of_pointer_address_of_pointer_addr: AXIOM FORALL (p:pointer[floatp]):
    (p = floatp_of_pointer_address(pointer_address(p)))
  
  % Why3 floatp_parenttag_bottom
  floatp_parenttag_bottom: AXIOM parenttag(floatp_tag,
    (bottom_tag :: tag_id[floatp]))
  
  % Why3 floatp_tags
  floatp_tags: AXIOM FORALL (x:pointer[floatp]):
    FORALL (floatp_tag_table:tag_table[floatp]): instanceof(floatp_tag_table,
    x, floatp_tag)
  
  % Why3 horiz_concat
  horiz_concat(x:matrix, x1:matrix): matrix
  
  % Why3 in_ellipsoid
  in_ellipsoid(x:matrix, x1:vector): bool
  
  % Why3 is_invertible
  is_invertible(x:matrix): bool
  
  % Why3 left_valid_struct_charp
  left_valid_struct_charp(p:pointer[charp], a:int,
    charp_alloc_table:alloc_table[charp]): bool =
    (offset_min(charp_alloc_table, p) <= a)
  
  % Why3 left_valid_struct_floatp
  left_valid_struct_floatp(p:pointer[floatp], a:int,
    floatp_alloc_table:alloc_table[floatp]): bool =
    (offset_min(floatp_alloc_table, p) <= a)
  
  % Why3 left_valid_struct_unsigned_charp
  left_valid_struct_unsigned_charp(p:pointer[unsigned_charp], a:int,
    unsigned_charp_alloc_table:alloc_table[unsigned_charp]): bool =
    (offset_min(unsigned_charp_alloc_table, p) <= a)
  
  % Why3 left_valid_struct_voidp
  left_valid_struct_voidp(p:pointer[voidp], a:int,
    voidp_alloc_table:alloc_table[voidp]): bool =
    (offset_min(voidp_alloc_table, p) <= a)
  
  % Why3 mat_col
  mat_col(x:matrix): int
  
  % Why3 mat_of_1x1_scalar
  mat_of_1x1_scalar(x:real): matrix
  
  % Why3 mat_of_1x2_scalar
  mat_of_1x2_scalar(x:real, x1:real): matrix
  
  % Why3 mat_of_2x1_scalar
  mat_of_2x1_scalar(x:real, x1:real): matrix
  
  % Why3 mat_of_4x3_scalar
  mat_of_4x3_scalar(x:real, x1:real, x2:real, x3:real, x4:real, x5:real,
    x6:real, x7:real, x8:real, x9:real, x10:real, x11:real): matrix
  
  % Why3 mat_of_4x4_scalar
  mat_of_4x4_scalar(x:real, x1:real, x2:real, x3:real, x4:real, x5:real,
    x6:real, x7:real, x8:real, x9:real, x10:real, x11:real, x12:real,
    x13:real, x14:real, x15:real): matrix
  
  % Why3 mat_of_array
  mat_of_array(x:pointer[floatp], x1:int, x2:int, x3:memory[floatp,
    real]): matrix
  
  % Why3 mat_row
  mat_row(x:matrix): int
  
  % Why3 mat_scalar_mult
  mat_scalar_mult(x:real, x1:matrix): matrix
  
  % Why3 mat_select
  mat_select(x:matrix, x1:int, x2:int): real
  
  % Why3 pointer_addr_of_charp_of_pointer_address
  pointer_addr_of_charp_of_pointer_address: AXIOM FORALL (p:pointer[[]]):
    (p = pointer_address(charp_of_pointer_address(p)))
  
  % Why3 pointer_addr_of_floatp_of_pointer_address
  pointer_addr_of_floatp_of_pointer_address: AXIOM FORALL (p:pointer[[]]):
    (p = pointer_address(floatp_of_pointer_address(p)))
  
  % Why3 unsigned_charp_of_pointer_address
  unsigned_charp_of_pointer_address(x:pointer[[]]): pointer[unsigned_charp]
  
  % Why3 pointer_addr_of_unsigned_charp_of_pointer_address
  pointer_addr_of_unsigned_charp_of_pointer_address: AXIOM FORALL (p:pointer[[]]):
    (p = pointer_address(unsigned_charp_of_pointer_address(p)))
  
  % Why3 voidp_of_pointer_address
  voidp_of_pointer_address(x:pointer[[]]): pointer[voidp]
  
  % Why3 pointer_addr_of_voidp_of_pointer_address
  pointer_addr_of_voidp_of_pointer_address: AXIOM FORALL (p:pointer[[]]):
    (p = pointer_address(voidp_of_pointer_address(p)))
  
  % Why3 right_valid_struct_charp
  right_valid_struct_charp(p:pointer[charp], b:int,
    charp_alloc_table:alloc_table[charp]): bool =
    (offset_max(charp_alloc_table, p) >= b)
  
  % Why3 right_valid_struct_floatp
  right_valid_struct_floatp(p:pointer[floatp], b:int,
    floatp_alloc_table:alloc_table[floatp]): bool =
    (offset_max(floatp_alloc_table, p) >= b)
  
  % Why3 right_valid_struct_unsigned_charp
  right_valid_struct_unsigned_charp(p:pointer[unsigned_charp], b:int,
    unsigned_charp_alloc_table:alloc_table[unsigned_charp]): bool =
    (offset_max(unsigned_charp_alloc_table, p) >= b)
  
  % Why3 right_valid_struct_voidp
  right_valid_struct_voidp(p:pointer[voidp], b:int,
    voidp_alloc_table:alloc_table[voidp]): bool =
    (offset_max(voidp_alloc_table, p) >= b)
  
  % Why3 strict_valid_root_charp
  strict_valid_root_charp(p:pointer[charp], a:int, b:int,
    charp_alloc_table:alloc_table[charp]): bool =
    (offset_min(charp_alloc_table, p) = a) AND (offset_max(charp_alloc_table,
    p) = b)
  
  % Why3 strict_valid_root_floatp
  strict_valid_root_floatp(p:pointer[floatp], a:int, b:int,
    floatp_alloc_table:alloc_table[floatp]): bool =
    (offset_min(floatp_alloc_table, p) = a) AND
    (offset_max(floatp_alloc_table, p) = b)
  
  % Why3 strict_valid_root_unsigned_charp
  strict_valid_root_unsigned_charp(p:pointer[unsigned_charp], a:int, b:int,
    unsigned_charp_alloc_table:alloc_table[unsigned_charp]): bool =
    (offset_min(unsigned_charp_alloc_table, p) = a) AND
    (offset_max(unsigned_charp_alloc_table, p) = b)
  
  % Why3 strict_valid_root_voidp
  strict_valid_root_voidp(p:pointer[voidp], a:int, b:int,
    voidp_alloc_table:alloc_table[voidp]): bool =
    (offset_min(voidp_alloc_table, p) = a) AND (offset_max(voidp_alloc_table,
    p) = b)
  
  % Why3 strict_valid_struct_charp
  strict_valid_struct_charp(p:pointer[charp], a:int, b:int,
    charp_alloc_table:alloc_table[charp]): bool =
    (offset_min(charp_alloc_table, p) = a) AND (offset_max(charp_alloc_table,
    p) = b)
  
  % Why3 strict_valid_struct_floatp
  strict_valid_struct_floatp(p:pointer[floatp], a:int, b:int,
    floatp_alloc_table:alloc_table[floatp]): bool =
    (offset_min(floatp_alloc_table, p) = a) AND
    (offset_max(floatp_alloc_table, p) = b)
  
  % Why3 strict_valid_struct_unsigned_charp
  strict_valid_struct_unsigned_charp(p:pointer[unsigned_charp], a:int, b:int,
    unsigned_charp_alloc_table:alloc_table[unsigned_charp]): bool =
    (offset_min(unsigned_charp_alloc_table, p) = a) AND
    (offset_max(unsigned_charp_alloc_table, p) = b)
  
  % Why3 strict_valid_struct_voidp
  strict_valid_struct_voidp(p:pointer[voidp], a:int, b:int,
    voidp_alloc_table:alloc_table[voidp]): bool =
    (offset_min(voidp_alloc_table, p) = a) AND (offset_max(voidp_alloc_table,
    p) = b)
  
  % Why3 unsigned_charp_tag
  unsigned_charp_tag: tag_id[unsigned_charp]
  
  % Why3 unsigned_charp_int
  unsigned_charp_int: AXIOM (int_of_tag(unsigned_charp_tag) = 1)
  
  % Why3 unsigned_charp_of_pointer_address_of_pointer_addr
  unsigned_charp_of_pointer_address_of_pointer_addr: AXIOM FORALL (p:pointer[unsigned_charp]):
    (p = unsigned_charp_of_pointer_address(pointer_address(p)))
  
  % Why3 unsigned_charp_parenttag_bottom
  unsigned_charp_parenttag_bottom: AXIOM parenttag(unsigned_charp_tag,
    (bottom_tag :: tag_id[unsigned_charp]))
  
  % Why3 unsigned_charp_tags
  unsigned_charp_tags: AXIOM FORALL (x:pointer[unsigned_charp]):
    FORALL (unsigned_charp_tag_table:tag_table[unsigned_charp]):
    instanceof(unsigned_charp_tag_table, x, unsigned_charp_tag)
  
  % Why3 valid_root_charp
  valid_root_charp(p:pointer[charp], a:int, b:int,
    charp_alloc_table:alloc_table[charp]): bool =
    (offset_min(charp_alloc_table, p) <= a) AND
    (offset_max(charp_alloc_table, p) >= b)
  
  % Why3 valid_root_floatp
  valid_root_floatp(p:pointer[floatp], a:int, b:int,
    floatp_alloc_table:alloc_table[floatp]): bool =
    (offset_min(floatp_alloc_table, p) <= a) AND
    (offset_max(floatp_alloc_table, p) >= b)
  
  % Why3 valid_root_unsigned_charp
  valid_root_unsigned_charp(p:pointer[unsigned_charp], a:int, b:int,
    unsigned_charp_alloc_table:alloc_table[unsigned_charp]): bool =
    (offset_min(unsigned_charp_alloc_table, p) <= a) AND
    (offset_max(unsigned_charp_alloc_table, p) >= b)
  
  % Why3 valid_root_voidp
  valid_root_voidp(p:pointer[voidp], a:int, b:int,
    voidp_alloc_table:alloc_table[voidp]): bool =
    (offset_min(voidp_alloc_table, p) <= a) AND
    (offset_max(voidp_alloc_table, p) >= b)
  
  % Why3 valid_struct_charp
  valid_struct_charp(p:pointer[charp], a:int, b:int,
    charp_alloc_table:alloc_table[charp]): bool =
    (offset_min(charp_alloc_table, p) <= a) AND
    (offset_max(charp_alloc_table, p) >= b)
  
  % Why3 valid_struct_floatp
  valid_struct_floatp(p:pointer[floatp], a:int, b:int,
    floatp_alloc_table:alloc_table[floatp]): bool =
    (offset_min(floatp_alloc_table, p) <= a) AND
    (offset_max(floatp_alloc_table, p) >= b)
  
  % Why3 valid_struct_unsigned_charp
  valid_struct_unsigned_charp(p:pointer[unsigned_charp], a:int, b:int,
    unsigned_charp_alloc_table:alloc_table[unsigned_charp]): bool =
    (offset_min(unsigned_charp_alloc_table, p) <= a) AND
    (offset_max(unsigned_charp_alloc_table, p) >= b)
  
  % Why3 valid_struct_voidp
  valid_struct_voidp(p:pointer[voidp], a:int, b:int,
    voidp_alloc_table:alloc_table[voidp]): bool =
    (offset_min(voidp_alloc_table, p) <= a) AND
    (offset_max(voidp_alloc_table, p) >= b)
  
  % Why3 vect_length
  vect_length(x:vector): int
  
  % Why3 vect_mult
  vect_mult(x:matrix, x1:vector): vector
  
  % Why3 vect_of_1_scalar
  vect_of_1_scalar(x:real): vector
  
  % Why3 vect_of_array
  vect_of_array(x:pointer[floatp], x1:int, x2:memory[floatp, real]): vector
  
  % Why3 vect_select
  vect_select(x:vector, x1:int): real
  
  % Why3 vert_concat
  vert_concat(x:matrix, x1:matrix): matrix
  
  % Why3 voidp_tag
  voidp_tag: tag_id[voidp]
  
  % Why3 voidp_int
  voidp_int: AXIOM (int_of_tag(voidp_tag) = 1)
  
  % Why3 voidp_of_pointer_address_of_pointer_addr
  voidp_of_pointer_address_of_pointer_addr: AXIOM FORALL (p:pointer[voidp]):
    (p = voidp_of_pointer_address(pointer_address(p)))
  
  % Why3 voidp_parenttag_bottom
  voidp_parenttag_bottom: AXIOM parenttag(voidp_tag,
    (bottom_tag :: tag_id[voidp]))
  
  % Why3 voidp_tags
  voidp_tags: AXIOM FORALL (x:pointer[voidp]):
    FORALL (voidp_tag_table:tag_table[voidp]): instanceof(voidp_tag_table, x,
    voidp_tag)
  
  % Why3 zeros
  zeros(x:int, x1:int): matrix
  
  % Why3 mat_of_array_select
  mat_of_array_select: AXIOM FORALL (floatp_floatm_at_l:memory[floatp,
    real]): FORALL (usa_12:pointer[floatp]): FORALL (i_4:int):
    FORALL (j_1:int): FORALL (k:int): FORALL (l:int):
    (mat_select(mat_of_array(usa_12, k, l, floatp_floatm_at_l), i_4,
    j_1) = select(floatp_floatm_at_l, shift(usa_12, ((l * i_4) + j_1))))
  
  % Why3 mat_of_array_size
  mat_of_array_size: AXIOM FORALL (floatp_floatm_at_l:memory[floatp, real]):
    FORALL (usa_13:pointer[floatp]): FORALL (i_5:int): FORALL (j_2:int):
    (mat_row(mat_of_array(usa_13, i_5, j_2, floatp_floatm_at_l)) = i_5) AND
    (mat_col(mat_of_array(usa_13, i_5, j_2, floatp_floatm_at_l)) = j_2)
  
  % Why3 vect_of_array_select
  vect_of_array_select: AXIOM FORALL (floatp_floatm_at_l:memory[floatp,
    real]): FORALL (x_4:pointer[floatp]): FORALL (n:int): FORALL (i_6:int):
    (vect_select(vect_of_array(x_4, n, floatp_floatm_at_l),
    i_6) = select(floatp_floatm_at_l, shift(x_4, i_6)))
  
  % Why3 vect_of_array_length
  vect_of_array_length: AXIOM FORALL (floatp_floatm_at_l:memory[floatp,
    real]): FORALL (x_5:pointer[floatp]): FORALL (i_7:int):
    (vect_length(vect_of_array(x_5, i_7, floatp_floatm_at_l)) = i_7)
  
  % Why3 mat_of_2x2_scalar_select
  mat_of_2x2_scalar_select: AXIOM FORALL (usa_14:matrix):
    FORALL (x11_0:real): FORALL (x12_0:real): FORALL (x21_0:real):
    FORALL (x22_0:real): (usa_14 = mat_of_2x2_scalar(x11_0, x12_0, x21_0,
    x22_0)) => ((mat_select(usa_14, 1, 1) = x11_0) AND ((mat_select(usa_14,
    1, 2) = x12_0) AND ((mat_select(usa_14, 2, 1) = x21_0) AND
    (mat_select(usa_14, 2, 2) = x22_0))))
  
  % Why3 mat_of_2x2_scalar_row
  mat_of_2x2_scalar_row: AXIOM FORALL (usa_15:matrix): FORALL (x11_1:real):
    FORALL (x12_1:real): FORALL (x21_1:real): FORALL (x22_1:real):
    (usa_15 = mat_of_2x2_scalar(x11_1, x12_1, x21_1, x22_1)) =>
    (mat_row(usa_15) = 2)
  
  % Why3 mat_of_2x2_scalar_col
  mat_of_2x2_scalar_col: AXIOM FORALL (usa_16:matrix): FORALL (x11_2:real):
    FORALL (x12_2:real): FORALL (x21_2:real): FORALL (x22_2:real):
    (usa_16 = mat_of_2x2_scalar(x11_2, x12_2, x21_2, x22_2)) =>
    (mat_col(usa_16) = 2)
  
  % Why3 mat_of_1x2_scalar_select
  mat_of_1x2_scalar_select: AXIOM FORALL (usa_17:matrix):
    FORALL (x11_4:real): FORALL (x12_4:real):
    (usa_17 = mat_of_1x2_scalar(x11_4, x12_4)) => ((mat_select(usa_17, 1,
    1) = x11_4) AND (mat_select(usa_17, 1, 2) = x12_4))
  
  % Why3 mat_of_1x2_scalar_row
  mat_of_1x2_scalar_row: AXIOM FORALL (usa_18:matrix): FORALL (x11_5:real):
    FORALL (x12_5:real): (usa_18 = mat_of_1x2_scalar(x11_5, x12_5)) =>
    (mat_row(usa_18) = 1)
  
  % Why3 mat_of_1x2_scalar_col
  mat_of_1x2_scalar_col: AXIOM FORALL (usa_19:matrix): FORALL (x11_6:real):
    FORALL (x12_6:real): (usa_19 = mat_of_1x2_scalar(x11_6, x12_6)) =>
    (mat_col(usa_19) = 2)
  
  % Why3 mat_of_2x1_scalar_select
  mat_of_2x1_scalar_select: AXIOM FORALL (usa_20:matrix):
    FORALL (x11_8:real): FORALL (x21_4:real):
    (usa_20 = mat_of_2x1_scalar(x11_8, x21_4)) => ((mat_select(usa_20, 1,
    1) = x11_8) AND (mat_select(usa_20, 2, 1) = x21_4))
  
  % Why3 mat_of_2x1_scalar_row
  mat_of_2x1_scalar_row: AXIOM FORALL (usa_21:matrix): FORALL (x11_9:real):
    FORALL (x21_5:real): (usa_21 = mat_of_2x1_scalar(x11_9, x21_5)) =>
    (mat_row(usa_21) = 2)
  
  % Why3 mat_of_2x1_scalar_col
  mat_of_2x1_scalar_col: AXIOM FORALL (usa_22:matrix): FORALL (x11_10:real):
    FORALL (x21_6:real): (usa_22 = mat_of_2x1_scalar(x11_10, x21_6)) =>
    (mat_col(usa_22) = 1)
  
  % Why3 vect_of_1_scalar_select
  vect_of_1_scalar_select: AXIOM FORALL (x_6:vector): FORALL (x1_0:real):
    (x_6 = vect_of_1_scalar(x1_0)) => (vect_select(x_6, 1) = x1_0)
  
  % Why3 vect_of_1_scalar_length
  vect_of_1_scalar_length: AXIOM FORALL (x_7:vector): FORALL (x1_1:real):
    (x_7 = vect_of_1_scalar(x1_1)) => (vect_length(x_7) = 1)
  
  % Why3 mat_of_1x1_scalar_select
  mat_of_1x1_scalar_select: AXIOM FORALL (usa_23:matrix):
    FORALL (x11_12:real): (usa_23 = mat_of_1x1_scalar(x11_12)) =>
    (mat_select(usa_23, 1, 1) = x11_12)
  
  % Why3 mat_of_1x1_scalar_row
  mat_of_1x1_scalar_row: AXIOM FORALL (usa_24:matrix): FORALL (x11_13:real):
    (usa_24 = mat_of_1x1_scalar(x11_13)) => (mat_row(usa_24) = 1)
  
  % Why3 mat_of_1x1_scalar_col
  mat_of_1x1_scalar_col: AXIOM FORALL (usa_25:matrix): FORALL (x11_14:real):
    (usa_25 = mat_of_1x1_scalar(x11_14)) => (mat_col(usa_25) = 1)
  
  % Why3 mat_of_4x3_scalar_select
  mat_of_4x3_scalar_select: AXIOM FORALL (usa_26:matrix):
    FORALL (x11_16:real): FORALL (x12_8:real): FORALL (x13_0:real):
    FORALL (x21_8:real): FORALL (x22_4:real): FORALL (x23_0:real):
    FORALL (x31_0:real): FORALL (x32_0:real): FORALL (x33_0:real):
    FORALL (x41_0:real): FORALL (x42_0:real): FORALL (x43_0:real):
    (usa_26 = mat_of_4x3_scalar(x11_16, x12_8, x13_0, x21_8, x22_4, x23_0,
    x31_0, x32_0, x33_0, x41_0, x42_0, x43_0)) => ((mat_select(usa_26, 1,
    1) = x11_16) AND ((mat_select(usa_26, 1, 2) = x12_8) AND
    ((mat_select(usa_26, 1, 3) = x13_0) AND ((mat_select(usa_26, 2,
    1) = x21_8) AND ((mat_select(usa_26, 2, 2) = x22_4) AND
    ((mat_select(usa_26, 2, 3) = x23_0) AND ((mat_select(usa_26, 3,
    1) = x31_0) AND ((mat_select(usa_26, 3, 2) = x32_0) AND
    ((mat_select(usa_26, 3, 3) = x33_0) AND ((mat_select(usa_26, 4,
    1) = x41_0) AND ((mat_select(usa_26, 4, 2) = x42_0) AND
    (mat_select(usa_26, 4, 3) = x43_0))))))))))))
  
  % Why3 mat_of_4x3_scalar_row
  mat_of_4x3_scalar_row: AXIOM FORALL (usa_27:matrix): FORALL (x11_17:real):
    FORALL (x12_9:real): FORALL (x13_1:real): FORALL (x21_9:real):
    FORALL (x22_5:real): FORALL (x23_1:real): FORALL (x31_1:real):
    FORALL (x32_1:real): FORALL (x33_1:real): FORALL (x41_1:real):
    FORALL (x42_1:real): FORALL (x43_1:real):
    (usa_27 = mat_of_4x3_scalar(x11_17, x12_9, x13_1, x21_9, x22_5, x23_1,
    x31_1, x32_1, x33_1, x41_1, x42_1, x43_1)) => (mat_row(usa_27) = 4)
  
  % Why3 mat_of_4x3_scalar_col
  mat_of_4x3_scalar_col: AXIOM FORALL (usa_28:matrix): FORALL (x11_18:real):
    FORALL (x12_10:real): FORALL (x13_2:real): FORALL (x21_10:real):
    FORALL (x22_6:real): FORALL (x23_2:real): FORALL (x31_2:real):
    FORALL (x32_2:real): FORALL (x33_2:real): FORALL (x41_2:real):
    FORALL (x42_2:real): FORALL (x43_2:real):
    (usa_28 = mat_of_4x3_scalar(x11_18, x12_10, x13_2, x21_10, x22_6, x23_2,
    x31_2, x32_2, x33_2, x41_2, x42_2, x43_2)) => (mat_col(usa_28) = 3)
  
  % Why3 mat_of_4x4_scalar_select
  mat_of_4x4_scalar_select: AXIOM FORALL (usa_29:matrix):
    FORALL (x11_20:real): FORALL (x12_12:real): FORALL (x13_4:real):
    FORALL (x14_0:real): FORALL (x21_12:real): FORALL (x22_8:real):
    FORALL (x23_4:real): FORALL (x24_0:real): FORALL (x31_4:real):
    FORALL (x32_4:real): FORALL (x33_4:real): FORALL (x34_0:real):
    FORALL (x41_4:real): FORALL (x42_4:real): FORALL (x43_4:real):
    FORALL (x44_0:real): (usa_29 = mat_of_4x4_scalar(x11_20, x12_12, x13_4,
    x14_0, x21_12, x22_8, x23_4, x24_0, x31_4, x32_4, x33_4, x34_0, x41_4,
    x42_4, x43_4, x44_0)) => ((mat_select(usa_29, 1, 1) = x11_20) AND
    ((mat_select(usa_29, 1, 2) = x12_12) AND ((mat_select(usa_29, 1,
    3) = x13_4) AND ((mat_select(usa_29, 1, 4) = x14_0) AND
    ((mat_select(usa_29, 2, 1) = x21_12) AND ((mat_select(usa_29, 2,
    2) = x22_8) AND ((mat_select(usa_29, 2, 3) = x23_4) AND
    ((mat_select(usa_29, 2, 4) = x24_0) AND ((mat_select(usa_29, 3,
    1) = x31_4) AND ((mat_select(usa_29, 3, 2) = x32_4) AND
    ((mat_select(usa_29, 3, 3) = x33_4) AND ((mat_select(usa_29, 3,
    4) = x34_0) AND ((mat_select(usa_29, 4, 1) = x41_4) AND
    ((mat_select(usa_29, 4, 2) = x42_4) AND ((mat_select(usa_29, 4,
    3) = x43_4) AND (mat_select(usa_29, 4, 4) = x44_0))))))))))))))))
  
  % Why3 mat_of_4x4_scalar_row
  mat_of_4x4_scalar_row: AXIOM FORALL (usa_30:matrix): FORALL (x11_21:real):
    FORALL (x12_13:real): FORALL (x13_5:real): FORALL (x14_1:real):
    FORALL (x21_13:real): FORALL (x22_9:real): FORALL (x23_5:real):
    FORALL (x24_1:real): FORALL (x31_5:real): FORALL (x32_5:real):
    FORALL (x33_5:real): FORALL (x34_1:real): FORALL (x41_5:real):
    FORALL (x42_5:real): FORALL (x43_5:real): FORALL (x44_1:real):
    (usa_30 = mat_of_4x4_scalar(x11_21, x12_13, x13_5, x14_1, x21_13, x22_9,
    x23_5, x24_1, x31_5, x32_5, x33_5, x34_1, x41_5, x42_5, x43_5, x44_1)) =>
    (mat_row(usa_30) = 4)
  
  % Why3 mat_of_4x4_scalar_col
  mat_of_4x4_scalar_col: AXIOM FORALL (usa_31:matrix): FORALL (x11_22:real):
    FORALL (x12_14:real): FORALL (x13_6:real): FORALL (x14_2:real):
    FORALL (x21_14:real): FORALL (x22_10:real): FORALL (x23_6:real):
    FORALL (x24_2:real): FORALL (x31_6:real): FORALL (x32_6:real):
    FORALL (x33_6:real): FORALL (x34_2:real): FORALL (x41_6:real):
    FORALL (x42_6:real): FORALL (x43_6:real): FORALL (x44_2:real):
    (usa_31 = mat_of_4x4_scalar(x11_22, x12_14, x13_6, x14_2, x21_14, x22_10,
    x23_6, x24_2, x31_6, x32_6, x33_6, x34_2, x41_6, x42_6, x43_6, x44_2)) =>
    (mat_col(usa_31) = 4)
  
  % Why3 ref
  ref[a:TYPE+]: DATATYPE
   BEGIN
    mk_ref(x:a): mk_ref?
   END ref
  
  % Why3 contents
  contents[a:TYPE+](v:ref[a]): a = CASES v OF
     mk_ref(x): x
    ENDCASES
  
  % Why3 prefix_ex
  prefix_ex[a:TYPE+](x:ref[a]): a = contents(x)
  
  % Why3 eq_unit
  eq_unit(x:[], x1:[]): bool
  
  % Why3 neq_unit
  neq_unit(x:[], x1:[]): bool
  
  % Why3 eq_bool
  eq_bool(x:bool, x1:bool): bool
  
  % Why3 neq_bool
  neq_bool(x:bool, x1:bool): bool
  
  % Why3 lt_int
  lt_int(x:int, x1:int): bool
  
  % Why3 le_int
  le_int(x:int, x1:int): bool
  
  % Why3 gt_int
  gt_int(x:int, x1:int): bool
  
  % Why3 ge_int
  ge_int(x:int, x1:int): bool
  
  % Why3 eq_int
  eq_int(x:int, x1:int): bool
  
  % Why3 neq_int
  neq_int(x:int, x1:int): bool
  
  % Why3 add_int
  add_int(x:int, x1:int): int
  
  % Why3 sub_int
  sub_int(x:int, x1:int): int
  
  % Why3 mul_int
  mul_int(x:int, x1:int): int
  
  % Why3 neg_int
  neg_int(x:int): int
  
  % Why3 zwf_zero1
  zwf_zero1(a:int, b:int): bool = (0 <= b) AND (a <  b)
  
  % Why3 lt_int_bool
  lt_int_bool(x:int, x1:int): bool
  
  % Why3 le_int_bool
  le_int_bool(x:int, x1:int): bool
  
  % Why3 gt_int_bool
  gt_int_bool(x:int, x1:int): bool
  
  % Why3 ge_int_bool
  ge_int_bool(x:int, x1:int): bool
  
  % Why3 eq_int_bool
  eq_int_bool(x:int, x1:int): bool
  
  % Why3 neq_int_bool
  neq_int_bool(x:int, x1:int): bool
  
  % Why3 lt_int_bool_axiom
  lt_int_bool_axiom: AXIOM FORALL (x:int): FORALL (y:int): (lt_int_bool(x,
    y) = TRUE) <=> (x <  y)
  
  % Why3 le_int_bool_axiom
  le_int_bool_axiom: AXIOM FORALL (x:int): FORALL (y:int): (le_int_bool(x,
    y) = TRUE) <=> (x <= y)
  
  % Why3 gt_int_bool_axiom
  gt_int_bool_axiom: AXIOM FORALL (x:int): FORALL (y:int): (gt_int_bool(x,
    y) = TRUE) <=> (x >  y)
  
  % Why3 ge_int_bool_axiom
  ge_int_bool_axiom: AXIOM FORALL (x:int): FORALL (y:int): (ge_int_bool(x,
    y) = TRUE) <=> (x >= y)
  
  % Why3 eq_int_bool_axiom
  eq_int_bool_axiom: AXIOM FORALL (x:int): FORALL (y:int): (eq_int_bool(x,
    y) = TRUE) <=> (x = y)
  
  % Why3 neq_int_bool_axiom
  neq_int_bool_axiom: AXIOM FORALL (x:int): FORALL (y:int): (neq_int_bool(x,
    y) = TRUE) <=> NOT (x = y)
  
  % Why3 abs_int
  abs_int(x:int): int
  
  % Why3 abs_int_pos
  abs_int_pos: AXIOM FORALL (x:int): (x >= 0) => (abs(x) = x)
  
  % Why3 abs_int_neg
  abs_int_neg: AXIOM FORALL (x:int): (x <= 0) => (abs(x) = (-x))
  
  % Why3 int_max
  int_max(x:int, x1:int): int
  
  % Why3 int_min
  int_min(x:int, x1:int): int
  
  % Why3 int_max_is_ge
  int_max_is_ge: AXIOM FORALL (x:int): FORALL (y:int): (int_max(x,
    y) >= x) AND (int_max(x, y) >= y)
  
  % Why3 int_max_is_some
  int_max_is_some: AXIOM FORALL (x:int): FORALL (y:int): (int_max(x,
    y) = x) OR (int_max(x, y) = y)
  
  % Why3 int_min_is_le
  int_min_is_le: AXIOM FORALL (x:int): FORALL (y:int): (int_min(x,
    y) <= x) AND (int_min(x, y) <= y)
  
  % Why3 int_min_is_some
  int_min_is_some: AXIOM FORALL (x:int): FORALL (y:int): (int_min(x,
    y) = x) OR (int_min(x, y) = y)
  
  % Why3 wp_parameter_inst2_ensures_default
  wp_parameter_inst2_ensures_default: THEOREM FORALL (xc:pointer[floatp],
    yc:pointer[floatp]): FORALL (floatp_floatm:memory[floatp, real],
    floatp_alloc_table:alloc_table[floatp]): ((offset_min(floatp_alloc_table,
    xc) <= 0) AND ((offset_max(floatp_alloc_table, xc) >= 1) AND
    ((offset_min(floatp_alloc_table, yc) <= 0) AND
    ((offset_max(floatp_alloc_table, yc) >= 1) AND in_ellipsoid(usp_0,
    vect_of_array(xc, 2, floatp_floatm)))))) =>
    FORALL (floatp_floatm1:memory[floatp, real]):
    (not_assigns(floatp_alloc_table, floatp_floatm, floatp_floatm1,
    pset_range(pset_singleton(yc), 0, 1)) AND ((select(floatp_floatm1,
    shift(yc, 0)) = ((2 * select(floatp_floatm, shift(xc,
    0))) + (3 * select(floatp_floatm, shift(xc, 1))))) AND
    (select(floatp_floatm1, shift(yc, 1)) = ((3 * select(floatp_floatm,
    shift(xc, 0))) + (5 * select(floatp_floatm, shift(xc, 1))))))) =>
    in_ellipsoid(usq, vect_of_array(yc, 2, floatp_floatm1))
  
  
 END WP_parameter_inst2_ensures_default
 